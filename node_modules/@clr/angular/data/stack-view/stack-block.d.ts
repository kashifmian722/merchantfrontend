import { EventEmitter, OnInit } from '@angular/core';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import * as ɵngcc0 from '@angular/core';
export declare class ClrStackBlock implements OnInit {
    private parent;
    uniqueId: string;
    commonStrings: ClrCommonStringsService;
    expanded: boolean;
    expandedChange: EventEmitter<boolean>;
    expandable: boolean;
    focused: boolean;
    private _changedChildren;
    private _fullyInitialized;
    private _changed;
    get getChangedValue(): boolean;
    set setChangedValue(value: boolean);
    /**
     * Depth of the stack view starting from 1 for first level
     */
    ariaLevel: number;
    /**
     * Total number of rows in a given group
     */
    ariaSetsize: number;
    /**
     * The position of the row inside the grouped by level rows
     */
    ariaPosinset: number;
    constructor(parent: ClrStackBlock, uniqueId: string, commonStrings: ClrCommonStringsService);
    ngOnInit(): void;
    addChild(): void;
    toggleExpand(): void;
    get caretDirection(): string;
    get role(): string;
    get tabIndex(): string;
    get onStackLabelFocus(): boolean;
    get ariaExpanded(): string;
    getStackChildrenId(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrStackBlock>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrStackBlock, "clr-stack-block", never, {
    "expanded": "clrSbExpanded";
    "expandable": "clrSbExpandable";
    "setChangedValue": "clrSbNotifyChange";
    "ariaLevel": "clrStackViewLevel";
    "ariaSetsize": "clrStackViewSetsize";
    "ariaPosinset": "clrStackViewPosinset";
}, {
    "expandedChange": "clrSbExpandedChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhY2stYmxvY2suZC50cyIsInNvdXJjZXMiOlsic3RhY2stYmxvY2suZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vdXRpbHMvaTE4bi9jb21tb24tc3RyaW5ncy5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENsclN0YWNrQmxvY2sgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIHByaXZhdGUgcGFyZW50O1xuICAgIHVuaXF1ZUlkOiBzdHJpbmc7XG4gICAgY29tbW9uU3RyaW5nczogQ2xyQ29tbW9uU3RyaW5nc1NlcnZpY2U7XG4gICAgZXhwYW5kZWQ6IGJvb2xlYW47XG4gICAgZXhwYW5kZWRDaGFuZ2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPjtcbiAgICBleHBhbmRhYmxlOiBib29sZWFuO1xuICAgIGZvY3VzZWQ6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBfY2hhbmdlZENoaWxkcmVuO1xuICAgIHByaXZhdGUgX2Z1bGx5SW5pdGlhbGl6ZWQ7XG4gICAgcHJpdmF0ZSBfY2hhbmdlZDtcbiAgICBnZXQgZ2V0Q2hhbmdlZFZhbHVlKCk6IGJvb2xlYW47XG4gICAgc2V0IHNldENoYW5nZWRWYWx1ZSh2YWx1ZTogYm9vbGVhbik7XG4gICAgLyoqXG4gICAgICogRGVwdGggb2YgdGhlIHN0YWNrIHZpZXcgc3RhcnRpbmcgZnJvbSAxIGZvciBmaXJzdCBsZXZlbFxuICAgICAqL1xuICAgIGFyaWFMZXZlbDogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIFRvdGFsIG51bWJlciBvZiByb3dzIGluIGEgZ2l2ZW4gZ3JvdXBcbiAgICAgKi9cbiAgICBhcmlhU2V0c2l6ZTogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIFRoZSBwb3NpdGlvbiBvZiB0aGUgcm93IGluc2lkZSB0aGUgZ3JvdXBlZCBieSBsZXZlbCByb3dzXG4gICAgICovXG4gICAgYXJpYVBvc2luc2V0OiBudW1iZXI7XG4gICAgY29uc3RydWN0b3IocGFyZW50OiBDbHJTdGFja0Jsb2NrLCB1bmlxdWVJZDogc3RyaW5nLCBjb21tb25TdHJpbmdzOiBDbHJDb21tb25TdHJpbmdzU2VydmljZSk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBhZGRDaGlsZCgpOiB2b2lkO1xuICAgIHRvZ2dsZUV4cGFuZCgpOiB2b2lkO1xuICAgIGdldCBjYXJldERpcmVjdGlvbigpOiBzdHJpbmc7XG4gICAgZ2V0IHJvbGUoKTogc3RyaW5nO1xuICAgIGdldCB0YWJJbmRleCgpOiBzdHJpbmc7XG4gICAgZ2V0IG9uU3RhY2tMYWJlbEZvY3VzKCk6IGJvb2xlYW47XG4gICAgZ2V0IGFyaWFFeHBhbmRlZCgpOiBzdHJpbmc7XG4gICAgZ2V0U3RhY2tDaGlsZHJlbklkKCk6IHN0cmluZztcbn1cbiJdfQ==