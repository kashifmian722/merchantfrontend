import { OnDestroy } from '@angular/core';
import { VerticalNavGroupRegistrationService } from './providers/vertical-nav-group-registration.service';
import { VerticalNavIconService } from './providers/vertical-nav-icon.service';
import { VerticalNavService } from './providers/vertical-nav.service';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import * as ɵngcc0 from '@angular/core';
export declare class ClrVerticalNav implements OnDestroy {
    private _navService;
    private _navIconService;
    private _navGroupRegistrationService;
    commonStrings: ClrCommonStringsService;
    get collapsible(): boolean;
    set collapsible(value: boolean);
    get collapsed(): boolean;
    set collapsed(value: boolean);
    private _collapsedChanged;
    get hasNavGroups(): boolean;
    get hasIcons(): boolean;
    get ariaExpanded(): string;
    private _sub;
    constructor(_navService: VerticalNavService, _navIconService: VerticalNavIconService, _navGroupRegistrationService: VerticalNavGroupRegistrationService, commonStrings: ClrCommonStringsService);
    toggleByButton(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrVerticalNav>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrVerticalNav, "clr-vertical-nav", never, {
    "collapsible": "clrVerticalNavCollapsible";
    "collapsed": "clrVerticalNavCollapsed";
}, {
    "_collapsedChanged": "clrVerticalNavCollapsedChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVydGljYWwtbmF2LmQudHMiLCJzb3VyY2VzIjpbInZlcnRpY2FsLW5hdi5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVmVydGljYWxOYXZHcm91cFJlZ2lzdHJhdGlvblNlcnZpY2UgfSBmcm9tICcuL3Byb3ZpZGVycy92ZXJ0aWNhbC1uYXYtZ3JvdXAtcmVnaXN0cmF0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgVmVydGljYWxOYXZJY29uU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL3ZlcnRpY2FsLW5hdi1pY29uLnNlcnZpY2UnO1xuaW1wb3J0IHsgVmVydGljYWxOYXZTZXJ2aWNlIH0gZnJvbSAnLi9wcm92aWRlcnMvdmVydGljYWwtbmF2LnNlcnZpY2UnO1xuaW1wb3J0IHsgQ2xyQ29tbW9uU3RyaW5nc1NlcnZpY2UgfSBmcm9tICcuLi8uLi91dGlscy9pMThuL2NvbW1vbi1zdHJpbmdzLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2xyVmVydGljYWxOYXYgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgX25hdlNlcnZpY2U7XG4gICAgcHJpdmF0ZSBfbmF2SWNvblNlcnZpY2U7XG4gICAgcHJpdmF0ZSBfbmF2R3JvdXBSZWdpc3RyYXRpb25TZXJ2aWNlO1xuICAgIGNvbW1vblN0cmluZ3M6IENsckNvbW1vblN0cmluZ3NTZXJ2aWNlO1xuICAgIGdldCBjb2xsYXBzaWJsZSgpOiBib29sZWFuO1xuICAgIHNldCBjb2xsYXBzaWJsZSh2YWx1ZTogYm9vbGVhbik7XG4gICAgZ2V0IGNvbGxhcHNlZCgpOiBib29sZWFuO1xuICAgIHNldCBjb2xsYXBzZWQodmFsdWU6IGJvb2xlYW4pO1xuICAgIHByaXZhdGUgX2NvbGxhcHNlZENoYW5nZWQ7XG4gICAgZ2V0IGhhc05hdkdyb3VwcygpOiBib29sZWFuO1xuICAgIGdldCBoYXNJY29ucygpOiBib29sZWFuO1xuICAgIGdldCBhcmlhRXhwYW5kZWQoKTogc3RyaW5nO1xuICAgIHByaXZhdGUgX3N1YjtcbiAgICBjb25zdHJ1Y3RvcihfbmF2U2VydmljZTogVmVydGljYWxOYXZTZXJ2aWNlLCBfbmF2SWNvblNlcnZpY2U6IFZlcnRpY2FsTmF2SWNvblNlcnZpY2UsIF9uYXZHcm91cFJlZ2lzdHJhdGlvblNlcnZpY2U6IFZlcnRpY2FsTmF2R3JvdXBSZWdpc3RyYXRpb25TZXJ2aWNlLCBjb21tb25TdHJpbmdzOiBDbHJDb21tb25TdHJpbmdzU2VydmljZSk7XG4gICAgdG9nZ2xlQnlCdXR0b24oKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19