{"version":3,"file":"identity.js","sourceRoot":"","sources":["../../../../src/clr-core/common/utils/identity.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,MAAM,aAAa,CAAC;AAC7B,OAAO,OAAO,MAAM,kBAAkB,CAAC;AACvC,OAAO,KAAK,MAAM,gBAAgB,CAAC;AAEnC,MAAM,UAAU,YAAY,CAAC,GAAQ;IACnC,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;AACpC,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,GAAQ;IAC/B,OAAO,EAAE,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACzB,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,GAAQ;IACpC,OAAO,EAAE,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;AACvC,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,GAAQ;IAC/B,OAAO,EAAE,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACzB,CAAC;AAED,MAAM,UAAU,wBAAwB,CAAC,GAAQ;IAC/C,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC;AAC7C,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,GAAQ,EAAE,MAAW;IACtD,OAAO,GAAG,KAAK,MAAM,CAAC;AACxB,CAAC;AAED,8DAA8D;AAC9D,MAAM,UAAU,wBAAwB,CAAC,GAA8B,EAAE,MAAc;IACrF,OAAO,aAAa,CAAC,GAAG,CAAC,IAAI,kBAAkB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAC/D,CAAC;AAED,+CAA+C;AAC/C,MAAM,UAAU,iCAAiC,CAAC,GAA8B,EAAE,MAAc;IAC9F,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,kBAAkB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAC/D,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,WAAgB;IAC5C,OAAa,MAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AAC3C,CAAC","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport is from 'ramda/es/is';\nimport isEmpty from 'ramda/es/isEmpty';\nimport isNil from 'ramda/es/isNil';\n\nexport function isNilOrEmpty(val: any): boolean {\n  return isNil(val) || isEmpty(val);\n}\n\nexport function isString(val: any): boolean {\n  return is(String, val);\n}\n\nexport function isStringOrNil(val: any): boolean {\n  return is(String, val) || isNil(val);\n}\n\nexport function isObject(val: any) {\n  return is(Object, val);\n}\n\nexport function isObjectAndNotNilOrEmpty(val: any) {\n  return !isNilOrEmpty(val) && isObject(val);\n}\n\nexport function hasPropertyChanged(val: any, oldVal: any): boolean {\n  return val !== oldVal;\n}\n\n// marks nil values (undefined, null, empty string) as changed\nexport function hasStringPropertyChanged(val: string | null | undefined, oldVal: string): boolean {\n  return isStringOrNil(val) && hasPropertyChanged(val, oldVal);\n}\n\n// ignores nil values when checking for changes\nexport function hasStringPropertyChangedAndNotNil(val: string | null | undefined, oldVal: string): boolean {\n  return !isNilOrEmpty(val) && hasPropertyChanged(val, oldVal);\n}\n\nexport function getEnumValues(enumeration: any) {\n  return (<any>Object).values(enumeration);\n}\n"]}