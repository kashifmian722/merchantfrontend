{"version":3,"file":"global.js","sourceRoot":"","sources":["../../../../src/clr-core/common/utils/global.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAE,SAAS,EAAE,MAAM,UAAU,CAAC;AAqBrC,MAAM,UAAU,cAAc;IAC5B,IAAI,SAAS,EAAE,EAAE;QACf,mBAAmB,EAAE,CAAC;QACtB,iBAAiB,EAAE,CAAC;KACrB;AACH,CAAC;AAED,SAAS,mBAAmB;IAC1B,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI;QACzB,QAAQ,EAAE,EAAE;QACZ,eAAe,EAAE,EAAE;QACnB,UAAU;KACX,CAAC;AACJ,CAAC;AAED,SAAS,UAAU;IACjB,MAAM,GAAG,GAAW;QAClB,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ;QAC7B,cAAc,EAAE,MAAM,CAAC,GAAG,CAAC,eAAe;QAC1C,cAAc,EAAE,iBAAiB,EAAE;QACnC,SAAS,EAAE,SAAS,CAAC,SAAS;KAC/B,CAAC;IACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1C,OAAO,GAAG,CAAC;AACb,CAAC;AAED,SAAS,iBAAiB;IACxB,MAAM,OAAO,GAAG,QAAQ,IAAI,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IACnE,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AAClE,CAAC;AAED,SAAS,iBAAiB;IACxB,MAAM,aAAa,GAAG,UAAU,CAAC;IACjC,IAAI,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE;QAClD,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACzC;IAEA,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAiB,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAEpG,IAAI,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;QAClC,OAAO,CAAC,IAAI,CACV,iHAAiH,CAClH,CAAC;KACH;AACH,CAAC","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isBrowser } from './exists';\n\nexport interface CDSGlobal {\n  _version: string[];\n  _loadedElements: string[];\n  getVersion: () => CDSLog;\n}\n\nexport interface CDSLog {\n  versions: string[];\n  loadedElements: string[];\n  angularVersion?: string | null;\n  userAgent: string;\n}\n\ndeclare global {\n  interface Window {\n    CDS: CDSGlobal;\n  }\n}\n\nexport function setupCDSGlobal() {\n  if (isBrowser()) {\n    initializeCDSGlobal();\n    setRunningVersion();\n  }\n}\n\nfunction initializeCDSGlobal() {\n  window.CDS = window.CDS || {\n    _version: [],\n    _loadedElements: [],\n    getVersion,\n  };\n}\n\nfunction getVersion() {\n  const log: CDSLog = {\n    versions: window.CDS._version,\n    loadedElements: window.CDS._loadedElements,\n    angularVersion: getAngularVersion(),\n    userAgent: navigator.userAgent,\n  };\n  console.log(JSON.stringify(log, null, 2));\n  return log;\n}\n\nfunction getAngularVersion() {\n  const appRoot = document && document.querySelector('[ng-version]');\n  return appRoot ? appRoot.getAttribute('ng-version') : undefined;\n}\n\nfunction setRunningVersion() {\n  const loadedVersion = '@VERSION';\n  if (window.CDS._version.indexOf(loadedVersion) < 0) {\n    window.CDS._version.push(loadedVersion);\n  }\n\n  (document.querySelector('body') as HTMLElement).setAttribute('cds-version', window.CDS._version[0]);\n\n  if (window.CDS._version.length > 1) {\n    console.warn(\n      'Running more than one version of Clarity can cause unexpected issues. Please ensure only one version is loaded.'\n    );\n  }\n}\n"]}