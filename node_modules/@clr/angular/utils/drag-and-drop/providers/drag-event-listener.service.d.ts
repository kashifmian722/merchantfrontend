import { NgZone, Renderer2 } from '@angular/core';
import { Observable } from 'rxjs';
import { DragEventInterface } from '../interfaces/drag-event.interface';
import { DragAndDropEventBusService } from './drag-and-drop-event-bus.service';
import * as ɵngcc0 from '@angular/core';
export declare class DragEventListenerService<T> {
    private ngZone;
    private renderer;
    private eventBus;
    private draggableEl;
    private listeners;
    private nestedListeners;
    private dragStart;
    private dragMove;
    private dragEnd;
    private hasDragStarted;
    get dragStarted(): Observable<DragEventInterface<T>>;
    get dragMoved(): Observable<DragEventInterface<T>>;
    get dragEnded(): Observable<DragEventInterface<T>>;
    constructor(ngZone: NgZone, renderer: Renderer2, eventBus: DragAndDropEventBusService<T>);
    private initialPosition;
    dragDataTransfer?: T;
    group?: string | string[];
    ghostElement?: any;
    dropPointPosition?: {
        pageX: number;
        pageY: number;
    };
    attachDragListeners(draggableEl: Node): void;
    detachDragListeners(): void;
    private getNativeEventObject;
    private customDragEvent;
    private broadcast;
    private generateDragEvent;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DragEventListenerService<any>>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<DragEventListenerService<any>>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy1ldmVudC1saXN0ZW5lci5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbImRyYWctZXZlbnQtbGlzdGVuZXIuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdab25lLCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IERyYWdFdmVudEludGVyZmFjZSB9IGZyb20gJy4uL2ludGVyZmFjZXMvZHJhZy1ldmVudC5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgRHJhZ0FuZERyb3BFdmVudEJ1c1NlcnZpY2UgfSBmcm9tICcuL2RyYWctYW5kLWRyb3AtZXZlbnQtYnVzLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRHJhZ0V2ZW50TGlzdGVuZXJTZXJ2aWNlPFQ+IHtcbiAgICBwcml2YXRlIG5nWm9uZTtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgZXZlbnRCdXM7XG4gICAgcHJpdmF0ZSBkcmFnZ2FibGVFbDtcbiAgICBwcml2YXRlIGxpc3RlbmVycztcbiAgICBwcml2YXRlIG5lc3RlZExpc3RlbmVycztcbiAgICBwcml2YXRlIGRyYWdTdGFydDtcbiAgICBwcml2YXRlIGRyYWdNb3ZlO1xuICAgIHByaXZhdGUgZHJhZ0VuZDtcbiAgICBwcml2YXRlIGhhc0RyYWdTdGFydGVkO1xuICAgIGdldCBkcmFnU3RhcnRlZCgpOiBPYnNlcnZhYmxlPERyYWdFdmVudEludGVyZmFjZTxUPj47XG4gICAgZ2V0IGRyYWdNb3ZlZCgpOiBPYnNlcnZhYmxlPERyYWdFdmVudEludGVyZmFjZTxUPj47XG4gICAgZ2V0IGRyYWdFbmRlZCgpOiBPYnNlcnZhYmxlPERyYWdFdmVudEludGVyZmFjZTxUPj47XG4gICAgY29uc3RydWN0b3Iobmdab25lOiBOZ1pvbmUsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGV2ZW50QnVzOiBEcmFnQW5kRHJvcEV2ZW50QnVzU2VydmljZTxUPik7XG4gICAgcHJpdmF0ZSBpbml0aWFsUG9zaXRpb247XG4gICAgZHJhZ0RhdGFUcmFuc2Zlcj86IFQ7XG4gICAgZ3JvdXA/OiBzdHJpbmcgfCBzdHJpbmdbXTtcbiAgICBnaG9zdEVsZW1lbnQ/OiBhbnk7XG4gICAgZHJvcFBvaW50UG9zaXRpb24/OiB7XG4gICAgICAgIHBhZ2VYOiBudW1iZXI7XG4gICAgICAgIHBhZ2VZOiBudW1iZXI7XG4gICAgfTtcbiAgICBhdHRhY2hEcmFnTGlzdGVuZXJzKGRyYWdnYWJsZUVsOiBOb2RlKTogdm9pZDtcbiAgICBkZXRhY2hEcmFnTGlzdGVuZXJzKCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBnZXROYXRpdmVFdmVudE9iamVjdDtcbiAgICBwcml2YXRlIGN1c3RvbURyYWdFdmVudDtcbiAgICBwcml2YXRlIGJyb2FkY2FzdDtcbiAgICBwcml2YXRlIGdlbmVyYXRlRHJhZ0V2ZW50O1xufVxuIl19