{"version":3,"file":"clr-angular.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://@clr/angular/icon/icon.ts","ng://@clr/angular/icon/icon.module.ts","ng://@clr/angular/utils/popover/providers/popover-toggle.service.ts","ng://@clr/angular/utils/popover/providers/popover-events.service.ts","ng://@clr/angular/utils/popover/enums/viewport-violation.enum.ts","ng://@clr/angular/utils/popover/enums/alignment.enum.ts","ng://@clr/angular/utils/popover/position-operators.ts","ng://@clr/angular/utils/popover/enums/axis.enum.ts","ng://@clr/angular/utils/popover/providers/popover-position.service.ts","ng://@clr/angular/utils/popover/popover-content.ts","ng://@clr/angular/utils/popover/popover-open-close-button.ts","ng://@clr/angular/utils/popover/popover-close-button.ts","ng://@clr/angular/utils/popover/popover-anchor.ts","ng://@clr/angular/utils/popover/popover.module.ts","ng://@clr/angular/utils/loading/loading-listener.ts","ng://@clr/angular/utils/loading/loading.ts","ng://@clr/angular/button/providers/button-in-group.service.ts","ng://@clr/angular/button/button-group/button.ts","ng://@clr/angular/utils/i18n/common-strings.default.ts","ng://@clr/angular/utils/i18n/common-strings.service.ts","ng://@clr/angular/utils/id-generator/id-generator.service.ts","ng://@clr/angular/utils/popover/enums/side.enum.ts","ng://@clr/angular/utils/popover/enums/positions.enum.ts","ng://@clr/angular/button/button-group/button-group.ts","ng://@clr/angular/button/button-group/button-group.module.ts","ng://@clr/angular/button/button-loading/loading-button.ts","ng://@clr/angular/button/button-loading/loading-button.module.ts","ng://@clr/angular/button/button.module.ts","ng://@clr/angular/utils/host-wrapping/empty-anchor.ts","ng://@clr/angular/utils/host-wrapping/host-wrapping.module.ts","ng://@clr/angular/forms/common/providers/control-id.service.ts","ng://@clr/angular/utils/a11y/aria-live.service.ts","ng://@clr/angular/forms/common/providers/layout.service.ts","ng://@clr/angular/forms/common/providers/control-class.service.ts","ng://@clr/angular/forms/common/error.ts","ng://@clr/angular/forms/common/helper.ts","ng://@clr/angular/forms/common/providers/ng-control.service.ts","ng://@clr/angular/forms/common/if-error/if-error.service.ts","ng://@clr/angular/forms/common/if-error/if-error.ts","ng://@clr/angular/forms/common/label.ts","ng://@clr/angular/forms/common/providers/mark-control.service.ts","ng://@clr/angular/forms/common/form.ts","ng://@clr/angular/forms/common/layout.ts","ng://@clr/angular/forms/common/abstract-container.ts","ng://@clr/angular/forms/common/control-container.ts","ng://@clr/angular/utils/host-wrapping/host-wrapper.ts","ng://@clr/angular/forms/common/wrapped-control.ts","ng://@clr/angular/forms/common/control.ts","ng://@clr/angular/forms/common/common.module.ts","ng://@clr/angular/forms/checkbox/checkbox-wrapper.ts","ng://@clr/angular/forms/checkbox/checkbox.ts","ng://@clr/angular/forms/checkbox/checkbox-container.ts","ng://@clr/angular/forms/checkbox/checkbox.module.ts","ng://@clr/angular/utils/conditional/if-active.service.ts","ng://@clr/angular/utils/conditional/if-active.directive.ts","ng://@clr/angular/utils/conditional/if-open.directive.ts","ng://@clr/angular/utils/conditional/if-expanded.service.ts","ng://@clr/angular/utils/conditional/if-expanded.directive.ts","ng://@clr/angular/utils/conditional/conditional.module.ts","ng://@clr/angular/utils/focus-trap/focus-trap-tracker.service.ts","ng://@clr/angular/utils/focus-trap/focus-trap.directive.ts","ng://@clr/angular/utils/focus-trap/focus-trap.module.ts","ng://@clr/angular/utils/key-codes/key-codes.ts","ng://@clr/angular/forms/datepicker/utils/constants.ts","ng://@clr/angular/forms/datepicker/utils/date-utils.ts","ng://@clr/angular/forms/datepicker/model/day-view.model.ts","ng://@clr/angular/forms/datepicker/model/day.model.ts","ng://@clr/angular/forms/datepicker/model/calendar-view.model.ts","ng://@clr/angular/forms/datepicker/model/calendar.model.ts","ng://@clr/angular/forms/datepicker/providers/date-navigation.service.ts","ng://@clr/angular/forms/datepicker/providers/datepicker-focus.service.ts","ng://@clr/angular/forms/datepicker/providers/locale-helper.service.ts","ng://@clr/angular/forms/datepicker/providers/date-io.service.ts","ng://@clr/angular/forms/datepicker/calendar.ts","ng://@clr/angular/forms/common/providers/focus.service.ts","ng://@clr/angular/forms/datepicker/providers/date-form-control.service.ts","ng://@clr/angular/utils/breakpoints/breakpoints.ts","ng://@clr/angular/forms/datepicker/providers/datepicker-enabled.service.ts","ng://@clr/angular/forms/datepicker/providers/view-manager.service.ts","ng://@clr/angular/forms/datepicker/date-container.ts","ng://@clr/angular/utils/component/is-boolean-attribute-set.ts","ng://@clr/angular/forms/datepicker/date-input.ts","ng://@clr/angular/forms/datepicker/datepicker-view-manager.ts","ng://@clr/angular/forms/datepicker/day.ts","ng://@clr/angular/forms/datepicker/daypicker.ts","ng://@clr/angular/forms/datepicker/monthpicker.ts","ng://@clr/angular/forms/datepicker/model/year-range.model.ts","ng://@clr/angular/forms/datepicker/yearpicker.ts","ng://@clr/angular/forms/datepicker/datepicker.module.ts","ng://@clr/angular/forms/input/input-container.ts","ng://@clr/angular/forms/input/input.ts","ng://@clr/angular/forms/input/input.module.ts","ng://@clr/angular/forms/password/password-container.ts","ng://@clr/angular/forms/password/password.ts","ng://@clr/angular/forms/password/password.module.ts","ng://@clr/angular/forms/radio/radio-wrapper.ts","ng://@clr/angular/forms/radio/radio.ts","ng://@clr/angular/forms/radio/radio-container.ts","ng://@clr/angular/forms/radio/radio.module.ts","ng://@clr/angular/forms/select/select-container.ts","ng://@clr/angular/forms/select/select.ts","ng://@clr/angular/forms/select/select.module.ts","ng://@clr/angular/forms/textarea/textarea-container.ts","ng://@clr/angular/forms/textarea/textarea.ts","ng://@clr/angular/forms/textarea/textarea.module.ts","ng://@clr/angular/forms/range/range-container.ts","ng://@clr/angular/forms/range/range.ts","ng://@clr/angular/forms/range/range.module.ts","ng://@clr/angular/forms/datalist/providers/datalist-id.service.ts","ng://@clr/angular/forms/datalist/datalist-container.ts","ng://@clr/angular/forms/datalist/datalist-input.ts","ng://@clr/angular/forms/datalist/datalist.ts","ng://@clr/angular/forms/datalist/datalist.module.ts","ng://@clr/angular/forms/forms.module.ts","ng://@clr/angular/utils/loading/loading.module.ts","ng://@clr/angular/utils/outside-click/outside-click.ts","ng://@clr/angular/utils/outside-click/index.ts","ng://@clr/angular/utils/outside-click/outside-click.module.ts","ng://@clr/angular/utils/dom-adapter/dom-adapter.ts","ng://@clr/angular/utils/drag-and-drop/drag-event.ts","ng://@clr/angular/utils/drag-and-drop/interfaces/drag-event.interface.ts","ng://@clr/angular/utils/drag-and-drop/providers/drag-and-drop-event-bus.service.ts","ng://@clr/angular/utils/drag-and-drop/providers/drag-event-listener.service.ts","ng://@clr/angular/utils/drag-and-drop/providers/draggable-snapshot.service.ts","ng://@clr/angular/utils/drag-and-drop/draggable-ghost.ts","ng://@clr/angular/utils/drag-and-drop/if-dragged.ts","ng://@clr/angular/utils/drag-and-drop/providers/drag-handle-registrar.service.ts","ng://@clr/angular/utils/drag-and-drop/providers/global-drag-mode.service.ts","ng://@clr/angular/utils/drag-and-drop/draggable/draggable.ts","ng://@clr/angular/utils/drag-and-drop/droppable/droppable.ts","ng://@clr/angular/utils/drag-and-drop/drag-handle.ts","ng://@clr/angular/utils/drag-and-drop/drag-and-drop.module.ts","ng://@clr/angular/utils/animations/expandable-animation/expandable-animation.ts","ng://@clr/angular/utils/animations/expandable-animation/index.ts","ng://@clr/angular/utils/animations/expandable-animation/expandable-animation.module.ts","ng://@clr/angular/progress/spinner/spinner.ts","ng://@clr/angular/progress/spinner/spinner.module.ts","ng://@clr/angular/utils/focus/focus-on-view-init/focus-on-view-init.provider.ts","ng://@clr/angular/utils/focus/focus-on-view-init/focus-on-view-init.ts","ng://@clr/angular/utils/focus/focus-on-view-init/focus-on-view-init.module.ts","ng://@clr/angular/data/datagrid/providers/custom-filter.ts","ng://@clr/angular/data/datagrid/providers/state-debouncer.provider.ts","ng://@clr/angular/data/datagrid/providers/page.ts","ng://@clr/angular/data/datagrid/providers/filters.ts","ng://@clr/angular/data/datagrid/utils/datagrid-filter-registrar.ts","ng://@clr/angular/data/datagrid/datagrid-filter.ts","ng://@clr/angular/data/datagrid/built-in/nested-property.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-property-string-filter.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-string-filter-impl.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-string-filter.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-property-numeric-filter.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-numeric-filter-impl.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-numeric-filter.ts","ng://@clr/angular/utils/chocolate/oompa-loompa.ts","ng://@clr/angular/data/datagrid/providers/row-action-service.ts","ng://@clr/angular/utils/chocolate/willy-wonka.ts","ng://@clr/angular/data/datagrid/chocolate/datagrid-willy-wonka.ts","ng://@clr/angular/data/datagrid/chocolate/actionable-oompa-loompa.ts","ng://@clr/angular/data/datagrid/providers/detail.service.ts","ng://@clr/angular/data/datagrid/providers/global-expandable-rows.ts","ng://@clr/angular/data/datagrid/chocolate/expandable-oompa-loompa.ts","ng://@clr/angular/data/datagrid/built-in/comparators/datagrid-property-comparator.ts","ng://@clr/angular/data/datagrid/enums/sort-order.enum.ts","ng://@clr/angular/data/datagrid/providers/sort.ts","ng://@clr/angular/data/datagrid/wrapped-column.ts","ng://@clr/angular/data/datagrid/datagrid-column.ts","ng://@clr/angular/data/datagrid/providers/items.ts","ng://@clr/angular/data/datagrid/datagrid-items.ts","ng://@clr/angular/data/datagrid/datagrid-placeholder.ts","ng://@clr/angular/popover/common/popover-host-anchor.token.ts","ng://@clr/angular/popover/signpost/providers/signpost-focus-manager.service.ts","ng://@clr/angular/popover/signpost/providers/signpost-id.service.ts","ng://@clr/angular/popover/signpost/signpost-trigger.ts","ng://@clr/angular/popover/signpost/signpost.ts","ng://@clr/angular/data/datagrid/wrapped-cell.ts","ng://@clr/angular/data/datagrid/datagrid-cell.ts","ng://@clr/angular/data/datagrid/enums/display-mode.enum.ts","ng://@clr/angular/data/datagrid/enums/render-step.enum.ts","ng://@clr/angular/data/datagrid/render/render-organizer.ts","ng://@clr/angular/data/datagrid/providers/display-mode.service.ts","ng://@clr/angular/data/datagrid/enums/selection-type.ts","ng://@clr/angular/data/datagrid/providers/selection.ts","ng://@clr/angular/data/datagrid/wrapped-row.ts","ng://@clr/angular/data/datagrid/datagrid-if-expanded.service.ts","ng://@clr/angular/data/datagrid/datagrid-row.ts","ng://@clr/angular/data/datagrid/providers/state.provider.ts","ng://@clr/angular/data/datagrid/providers/table-size.service.ts","ng://@clr/angular/data/datagrid/enums/column-changes.enum.ts","ng://@clr/angular/data/datagrid/providers/columns.service.ts","ng://@clr/angular/data/datagrid/datagrid.ts","ng://@clr/angular/data/datagrid/datagrid-action-bar.ts","ng://@clr/angular/data/datagrid/datagrid-action-overflow.ts","ng://@clr/angular/data/datagrid/providers/column-resizer.service.ts","ng://@clr/angular/data/datagrid/datagrid-column-separator.ts","ng://@clr/angular/data/datagrid/datagrid-column-toggle-title.ts","ng://@clr/angular/data/datagrid/datagrid-column-toggle-button.ts","ng://@clr/angular/data/datagrid/datagrid-column-toggle.ts","ng://@clr/angular/data/datagrid/datagrid-detail-registerer.ts","ng://@clr/angular/data/datagrid/datagrid-detail-header.ts","ng://@clr/angular/data/datagrid/datagrid-detail.ts","ng://@clr/angular/data/datagrid/datagrid-if-detail.ts","ng://@clr/angular/data/datagrid/datagrid-detail-body.ts","ng://@clr/angular/data/datagrid/datagrid-footer.ts","ng://@clr/angular/data/datagrid/providers/column-state.provider.ts","ng://@clr/angular/data/datagrid/datagrid-hideable-column.ts","ng://@clr/angular/data/datagrid/datagrid-items-trackby.ts","ng://@clr/angular/data/datagrid/datagrid-page-size.ts","ng://@clr/angular/data/datagrid/datagrid-pagination.ts","ng://@clr/angular/data/datagrid/datagrid-row-detail.ts","ng://@clr/angular/data/datagrid/render/constants.ts","ng://@clr/angular/data/datagrid/render/cell-renderer.ts","ng://@clr/angular/data/datagrid/render/header-renderer.ts","ng://@clr/angular/data/datagrid/render/noop-dom-adapter.ts","ng://@clr/angular/data/datagrid/render/row-renderer.ts","ng://@clr/angular/data/datagrid/render/main-renderer.ts","ng://@clr/angular/data/datagrid/datagrid.module.ts","ng://@clr/angular/data/stack-view/stack-block.ts","ng://@clr/angular/data/stack-view/stack-view.ts","ng://@clr/angular/data/stack-view/stack-header.ts","ng://@clr/angular/data/stack-view/stack-control.ts","ng://@clr/angular/data/stack-view/stack-input.ts","ng://@clr/angular/data/stack-view/stack-select.ts","ng://@clr/angular/data/stack-view/stack-view-custom-tags.ts","ng://@clr/angular/data/stack-view/stack-content-input.ts","ng://@clr/angular/data/stack-view/stack-view.module.ts","ng://@clr/angular/utils/enums/key-codes.enum.ts","ng://@clr/angular/utils/focus/key-focus/util.ts","ng://@clr/angular/data/tree-view/models/selected-state.enum.ts","ng://@clr/angular/data/tree-view/models/tree-node.model.ts","ng://@clr/angular/data/tree-view/models/declarative-tree-node.model.ts","ng://@clr/angular/data/tree-view/tree-features.service.ts","ng://@clr/angular/data/tree-view/tree-focus-manager.service.ts","ng://@clr/angular/data/tree-view/tree-node-link.ts","ng://@clr/angular/data/tree-view/tree-node.ts","ng://@clr/angular/data/tree-view/tree.ts","ng://@clr/angular/data/tree-view/models/async-array.ts","ng://@clr/angular/data/tree-view/models/recursive-tree-node.model.ts","ng://@clr/angular/data/tree-view/recursive-for-of.ts","ng://@clr/angular/data/tree-view/recursive-children.ts","ng://@clr/angular/data/tree-view/tree-view.module.ts","ng://@clr/angular/data/data.module.ts","ng://@clr/angular/utils/focus/focusable-item/focusable-item.ts","ng://@clr/angular/utils/focus/focusable-item/custom-focusable-item-provider.ts","ng://@clr/angular/utils/focus/arrow-key-direction.enum.ts","ng://@clr/angular/utils/focus/focus.service.ts","ng://@clr/angular/utils/focus/focusable-item/linkers.ts","ng://@clr/angular/utils/focus/wrap-observable.ts","ng://@clr/angular/popover/dropdown/providers/dropdown-focus-handler.service.ts","ng://@clr/angular/popover/dropdown/providers/dropdown.service.ts","ng://@clr/angular/popover/dropdown/dropdown.ts","ng://@clr/angular/utils/focus/focusable-item/basic-focusable-item.service.ts","ng://@clr/angular/popover/dropdown/dropdown-item.ts","ng://@clr/angular/popover/common/popover.ts","ng://@clr/angular/popover/common/abstract-popover.ts","ng://@clr/angular/popover/dropdown/dropdown-menu.ts","ng://@clr/angular/popover/dropdown/dropdown-trigger.ts","ng://@clr/angular/popover/dropdown/dropdown.module.ts","ng://@clr/angular/emphasis/alert/utils/alert-types.ts","ng://@clr/angular/emphasis/alert/providers/icon-and-types.service.ts","ng://@clr/angular/emphasis/alert/providers/multi-alert.service.ts","ng://@clr/angular/emphasis/alert/alert-text.ts","ng://@clr/angular/emphasis/alert/alert.ts","ng://@clr/angular/emphasis/alert/alert-item.ts","ng://@clr/angular/emphasis/alert/alerts.ts","ng://@clr/angular/emphasis/alert/alerts-pager.ts","ng://@clr/angular/emphasis/alert/alert.module.ts","ng://@clr/angular/emphasis/emphasis.module.ts","ng://@clr/angular/layout/nav/responsive-nav-codes.ts","ng://@clr/angular/layout/nav/responsive-nav-control-message.ts","ng://@clr/angular/layout/nav/providers/responsive-navigation.service.ts","ng://@clr/angular/layout/main-container/main-container.ts","ng://@clr/angular/layout/main-container/main-container.module.ts","ng://@clr/angular/layout/nav/chocolate/main-container-willy-wonka.ts","ng://@clr/angular/layout/nav/chocolate/nav-detection-oompa-loompa.ts","ng://@clr/angular/layout/nav/header.ts","ng://@clr/angular/layout/nav/nav-level.ts","ng://@clr/angular/layout/nav/navigation.module.ts","ng://@clr/angular/utils/template-ref/template-ref-container.ts","ng://@clr/angular/utils/template-ref/index.ts","ng://@clr/angular/utils/template-ref/template-ref.module.ts","ng://@clr/angular/layout/tabs/chocolate/tabs-willy-wonka.ts","ng://@clr/angular/layout/tabs/chocolate/active-oompa-loompa.ts","ng://@clr/angular/layout/tabs/providers/aria.service.ts","ng://@clr/angular/layout/tabs/enums/tabs-layout.enum.ts","ng://@clr/angular/layout/tabs/providers/tabs.service.ts","ng://@clr/angular/layout/tabs/tab-content.ts","ng://@clr/angular/layout/tabs/tabs-id.provider.ts","ng://@clr/angular/layout/tabs/tab-link.directive.ts","ng://@clr/angular/layout/tabs/tab.ts","ng://@clr/angular/layout/tabs/tab-overflow-content.ts","ng://@clr/angular/utils/focus/key-focus/enums/focus-direction.enum.ts","ng://@clr/angular/utils/focus/key-focus/key-focus-item.ts","ng://@clr/angular/utils/focus/key-focus/key-focus.ts","ng://@clr/angular/layout/tabs/tabs.ts","ng://@clr/angular/utils/focus/key-focus/key-focus.module.ts","ng://@clr/angular/layout/tabs/tabs.module.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav-group-registration.service.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav-icon.service.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav.service.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav-group.service.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-group.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-group-children.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-icon.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-link.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav.module.ts","ng://@clr/angular/layout/layout.module.ts","ng://@clr/angular/utils/scrolling/scrolling-service.ts","ng://@clr/angular/modal/modal.ts","ng://@clr/angular/modal/modal-body.ts","ng://@clr/angular/modal/modal.module.ts","ng://@clr/angular/popover/signpost/signpost-positions.ts","ng://@clr/angular/popover/signpost/signpost-content.ts","ng://@clr/angular/popover/signpost/signpost.module.ts","ng://@clr/angular/popover/tooltip/providers/tooltip-id.service.ts","ng://@clr/angular/popover/tooltip/tooltip.ts","ng://@clr/angular/popover/tooltip/tooltip-content.ts","ng://@clr/angular/popover/tooltip/tooltip-trigger.ts","ng://@clr/angular/popover/tooltip/tooltip.module.ts","ng://@clr/angular/popover/popover.module.ts","ng://@clr/angular/wizard/providers/button-hub.service.ts","ng://@clr/angular/wizard/providers/page-collection.service.ts","ng://@clr/angular/wizard/providers/wizard-navigation.service.ts","ng://@clr/angular/wizard/providers/header-actions.service.ts","ng://@clr/angular/wizard/wizard-header-action.ts","ng://@clr/angular/wizard/wizard-page-buttons.ts","ng://@clr/angular/wizard/wizard-page-header-actions.ts","ng://@clr/angular/wizard/wizard-page-navtitle.ts","ng://@clr/angular/wizard/wizard-page-title.ts","ng://@clr/angular/wizard/wizard-page.ts","ng://@clr/angular/wizard/wizard.ts","ng://@clr/angular/wizard/wizard-button.ts","ng://@clr/angular/wizard/wizard-custom-tags.ts","ng://@clr/angular/wizard/wizard-stepnav.ts","ng://@clr/angular/wizard/wizard-stepnav-item.ts","ng://@clr/angular/wizard/wizard.module.ts","ng://@clr/angular/accordion/enums/accordion-strategy.enum.ts","ng://@clr/angular/accordion/enums/accordion-status.enum.ts","ng://@clr/angular/accordion/models/accordion.model.ts","ng://@clr/angular/accordion/providers/accordion.service.ts","ng://@clr/angular/utils/animations/constants.ts","ng://@clr/angular/accordion/utils/animation.ts","ng://@clr/angular/accordion/accordion-description.ts","ng://@clr/angular/accordion/accordion-panel.ts","ng://@clr/angular/accordion/accordion-title.ts","ng://@clr/angular/accordion/accordion.ts","ng://@clr/angular/accordion/accordion-content.ts","ng://@clr/angular/accordion/chocolate/accordion-willy-wonka.ts","ng://@clr/angular/accordion/chocolate/accordion-oompa-loompa.ts","ng://@clr/angular/accordion/accordion.module.ts","ng://@clr/angular/accordion/stepper/models/stepper.model.ts","ng://@clr/angular/accordion/stepper/providers/stepper.service.ts","ng://@clr/angular/utils/forms/validation.ts","ng://@clr/angular/accordion/stepper/stepper-panel.ts","ng://@clr/angular/accordion/stepper/step-button.ts","ng://@clr/angular/accordion/stepper/stepper.ts","ng://@clr/angular/accordion/stepper/chocolate/stepper-willy-wonka.ts","ng://@clr/angular/accordion/stepper/chocolate/stepper-oompa-loompa.ts","ng://@clr/angular/accordion/stepper/stepper.module.ts","ng://@clr/angular/progress/progress-bars/progress-bar.ts","ng://@clr/angular/progress/progress-bars/progress-bar.module.ts","ng://@clr/angular/timeline/enums/timeline-layout.enum.ts","ng://@clr/angular/timeline/enums/timeline-step-state.enum.ts","ng://@clr/angular/timeline/providers/timeline-icon-attribute.service.ts","ng://@clr/angular/timeline/timeline.ts","ng://@clr/angular/timeline/timeline-step-title.ts","ng://@clr/angular/timeline/timeline-step.ts","ng://@clr/angular/timeline/timeline-step-description.ts","ng://@clr/angular/timeline/timeline-step-header.ts","ng://@clr/angular/timeline/timeline.module.ts","ng://@clr/angular/clr-angular.module.ts","ng://@clr/angular/button/button-group/index.ts","ng://@clr/angular/button/button-loading/index.ts","ng://@clr/angular/button/index.ts","ng://@clr/angular/data/datagrid/index.ts","ng://@clr/angular/data/tree-view/index.ts","ng://@clr/angular/data/stack-view/index.ts","ng://@clr/angular/data/index.ts","ng://@clr/angular/emphasis/alert/index.ts","ng://@clr/angular/emphasis/index.ts","ng://@clr/angular/forms/common/index.ts","ng://@clr/angular/forms/checkbox/index.ts","ng://@clr/angular/forms/datalist/index.ts","ng://@clr/angular/forms/datepicker/index.ts","ng://@clr/angular/forms/input/index.ts","ng://@clr/angular/forms/password/index.ts","ng://@clr/angular/forms/radio/index.ts","ng://@clr/angular/forms/select/index.ts","ng://@clr/angular/forms/textarea/index.ts","ng://@clr/angular/forms/range/index.ts","ng://@clr/angular/forms/index.ts","ng://@clr/angular/icon/index.ts","ng://@clr/angular/layout/main-container/index.ts","ng://@clr/angular/layout/nav/chocolate/index.ts","ng://@clr/angular/layout/nav/index.ts","ng://@clr/angular/layout/tabs/index.ts","ng://@clr/angular/layout/vertical-nav/index.ts","ng://@clr/angular/layout/index.ts","ng://@clr/angular/modal/index.ts","ng://@clr/angular/popover/dropdown/menu-positions.ts","ng://@clr/angular/popover/dropdown/index.ts","ng://@clr/angular/popover/signpost/index.ts","ng://@clr/angular/popover/tooltip/index.ts","ng://@clr/angular/popover/index.ts","ng://@clr/angular/utils/animations/collapse/collapse.ts","ng://@clr/angular/utils/animations/collapse/index.ts","ng://@clr/angular/utils/animations/fade/fade.ts","ng://@clr/angular/utils/animations/fade/index.ts","ng://@clr/angular/utils/animations/fade-slide/fade-slide.ts","ng://@clr/angular/utils/animations/fade-slide/index.ts","ng://@clr/angular/utils/animations/slide/slide.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-icon' })\nexport class ClrIconCustomTag {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrIconCustomTag } from './icon';\n\nexport const CLR_ICON_DIRECTIVES: Type<any>[] = [ClrIconCustomTag];\n\n@NgModule({ imports: [CommonModule], declarations: [CLR_ICON_DIRECTIVES], exports: [CLR_ICON_DIRECTIVES] })\nexport class ClrIconModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class ClrPopoverToggleService {\n  /**\n   *  Popovers might need to ignore click events on an element\n   *  (eg: popover opens on focus on an input field. Clicks should be ignored in this case)\n   */\n  private _open: boolean = false;\n  private _openChange: Subject<boolean> = new Subject<boolean>();\n  private _openEvent: Event;\n  private _openEventChange: Subject<Event> = new Subject<Event>();\n\n  public get openChange(): Observable<boolean> {\n    return this._openChange.asObservable();\n  }\n\n  public set openEvent(event: Event) {\n    this._openEvent = event;\n    this._openEventChange.next(event);\n  }\n\n  public get openEvent(): Event {\n    return this._openEvent;\n  }\n\n  public getEventChange(): Observable<Event> {\n    return this._openEventChange.asObservable();\n  }\n\n  public set open(value: boolean) {\n    value = !!value;\n    if (this._open !== value) {\n      this._open = value;\n      this._openChange.next(value);\n    }\n  }\n\n  public get open(): boolean {\n    return this._open;\n  }\n\n  get originalEvent(): Event {\n    return this._openEvent;\n  }\n\n  /**\n   * Sometimes, we need to remember the event that triggered the toggling to avoid loops.\n   * This is for instance the case of components that open on a click, but close on a click outside.\n   */\n  public toggleWithEvent(event: any) {\n    this.openEvent = event;\n    this.open = !this.open;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { ElementRef, Injectable, Renderer2, Inject, OnDestroy } from '@angular/core';\nimport { ClrPopoverToggleService } from './popover-toggle.service';\nimport { Observable, fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n// https://github.com/angular/angular/issues/20351#issuecomment-344009887\n/** @dynamic */\n@Injectable()\nexport class ClrPopoverEventsService implements OnDestroy {\n  public outsideClickClose = true;\n  public scrollToClose = true;\n  private documentClickListener: () => void;\n  public ignoredEvent: any;\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private renderer: Renderer2,\n    private smartOpenService: ClrPopoverToggleService,\n    @Inject(DOCUMENT) private document: HTMLDocument\n  ) {\n    this.subscriptions.push(\n      smartOpenService.openChange.subscribe(open => {\n        if (open) {\n          this.addEscapeListener();\n          this.addClickListener();\n          this.addScrollListener();\n        } else {\n          this.removeAllEventListeners();\n        }\n      }),\n      smartOpenService.getEventChange().subscribe(event => {\n        // Remember the event that was used to open the content\n        this.ignoredEvent = event;\n      })\n    );\n  }\n\n  private scrollSubscription: Subscription;\n  public addScrollListener() {\n    if (this.scrollToClose) {\n      this.documentScroller = fromEvent(this.document, 'scroll', { capture: true });\n      this.scrollSubscription = this.documentScroller\n        .pipe(filter(this.testForSmartPopoverContentContainer))\n        .subscribe(() => {\n          this.smartOpenService.open = false;\n          this.setAnchorFocus();\n        });\n    } else {\n      // I think this is where dynamic re-positioning will be added\n      // Instead of testing like we do in the close pipe below\n      // we need to switch positioning to use an observable and then\n      // debounce the scroll events to recalculate content position in a performant way\n      // For now, ignore scrolling events.\n      return;\n    }\n  }\n\n  public removeScrollListener() {\n    if (this.documentScroller) {\n      this.scrollSubscription.unsubscribe();\n      delete this.documentScroller;\n    }\n  }\n\n  private testForSmartPopoverContentContainer(event: Event): boolean {\n    // Filter for the documentScroller observable event targets\n    let target: Element = <Element>event.target;\n\n    // Walk up the DOM tree until we get to the element that is a direct child of the body.\n    while (target.classList && target.parentElement.localName !== 'body') {\n      target = target.parentElement;\n    }\n\n    // Target is the child element of body where the scroll events originated.\n    // Return false and prevent the popover content container from closing for any scroll events inside a popover\n    // content container.\n    if (target.classList) {\n      // check scroll events to see if they are happening in popover content or elsewhere\n      return target.classList.contains('clr-popover-content') ? false : true;\n    } else {\n      // prevents it from closing right after first opening\n      return false;\n    }\n  }\n\n  public addClickListener() {\n    if (this.outsideClickClose) {\n      this.documentClickListener = this.renderer.listen(this.document, 'click', (event: MouseEvent) => {\n        if (event === this.ignoredEvent) {\n          // Here we ignore the opening click event (w/o this content opens and immediately closes.\n          delete this.ignoredEvent;\n        } else {\n          this.smartOpenService.open = false;\n          // Rather than a complex change to the focus trap I put focus on the element that was clicked\n          const clickedElement: HTMLElement = <HTMLElement>event.target;\n          clickedElement.focus();\n        }\n      });\n    }\n  }\n\n  public removeClickListener() {\n    if (this.outsideClickClose) {\n      delete this.ignoredEvent;\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        delete this.documentClickListener;\n      }\n    }\n  }\n\n  private escapeListener: () => void;\n  public addEscapeListener() {\n    this.escapeListener = this.renderer.listen(this.document, 'keydown.escape', event => {\n      this.smartOpenService.open = false;\n      this.setAnchorFocus();\n    });\n  }\n\n  public removeEscapeListener() {\n    if (this.escapeListener) {\n      this.escapeListener();\n      delete this.escapeListener;\n    }\n  }\n\n  private _anchorButtonRef: ElementRef;\n  public set anchorButtonRef(ref: ElementRef) {\n    this._anchorButtonRef = ref;\n  }\n  public get anchorButtonRef(): ElementRef {\n    return this._anchorButtonRef;\n  }\n\n  private _closeButtonRef: ElementRef;\n  public set closeButtonRef(ref: ElementRef) {\n    this._closeButtonRef = ref;\n  }\n  public get closeButtonRef(): ElementRef {\n    return this._closeButtonRef;\n  }\n\n  public setCloseFocus(): void {\n    this._closeButtonRef.nativeElement.focus();\n  }\n\n  public setAnchorFocus(): void {\n    this.anchorButtonRef.nativeElement.focus();\n  }\n\n  private _contentRef: ElementRef;\n  public set contentRef(host: ElementRef) {\n    this._contentRef = host;\n  }\n  public get contentRef(): ElementRef {\n    return this._contentRef;\n  }\n\n  private documentScroller: Observable<Event>;\n\n  private removeAllEventListeners() {\n    this.removeScrollListener();\n    this.removeClickListener();\n    this.removeEscapeListener();\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.removeAllEventListeners();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrViewportViolation {\n  BOTTOM = 0,\n  LEFT = 1,\n  RIGHT = 2,\n  TOP = 3,\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrAlignment {\n  START = 0,\n  CENTER = 0.5,\n  END = 1,\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { ClrPopoverPosition } from './interfaces/popover-position.interface';\nimport { ClrPopoverContentOffset } from './interfaces/popover-content-offset.interface';\nimport { ClrViewportViolation } from './enums/viewport-violation.enum';\nimport { ClrVisibilityCoords } from './interfaces/visibility-coords.interface';\nimport { ClrAlignment } from './enums/alignment.enum';\n\n// Put the forward arg here but it is only needed when nudging content or anchors.\nexport type ClrTransform = (position: ClrPopoverPosition, back?: boolean) => ClrPopoverPosition;\n\nexport const flipSides: ClrTransform = position => {\n  return {\n    ...position,\n    side: -1 * position.side,\n  };\n};\n\n// This could be used in more advanced positioning algorithms.\n// flipAxisFlipSideAndNudgeContent(flipAxis, flipSide, nudge, nudgeForward?): ClrTransform {...}\n// I would like to keep it for now.\nexport const flipAxis: ClrTransform = position => {\n  return {\n    ...position,\n    axis: position.axis === 0 ? 1 : 0,\n  };\n};\n\nexport const nudgeContent: ClrTransform = (position, forward) => {\n  const nextAlignment = position.content + (forward ? 0.5 : -0.5);\n  if (nextAlignment < 0 || nextAlignment > 1) {\n    return position;\n  } else {\n    return {\n      ...position,\n      content: nextAlignment,\n    };\n  }\n};\n\nexport function flipSidesAndNudgeContent(flip: ClrTransform, nudge: ClrTransform, nudgeBack?: boolean): ClrTransform {\n  return (position: ClrPopoverPosition): ClrPopoverPosition => nudge(flip(position), nudgeBack);\n}\n\nexport function align(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): ClrPopoverContentOffset {\n  let xDiff = anchor.left;\n  let yDiff = anchor.top;\n\n  // When ClrAxis is VERTICAL BEFORE = left, AFTER = right\n  // When ClrAxis is HORIZONTAL BEFORE is top, AFTER is bottom\n  switch (position.axis + position.side) {\n    case -1: {\n      // ClrAxis.VERTICAL + ClrSide.BEFORE\n      xDiff += alignHorizontal(position, anchor, content);\n      yDiff -= content.height; // pull content up to the top of the anchor\n      break;\n    }\n    case 1: {\n      // ClrAxis.VERTICAL + ClrSide.AFTER\n      xDiff += alignHorizontal(position, anchor, content);\n      yDiff += anchor.height; // push the content down to below the anchor\n      break;\n    }\n    case 0: {\n      // ClrAxis.HORIZONTAL + ClrSide.BEFORE\n      xDiff -= content.width; // pull the content left of the anchor\n      yDiff += alignVertical(position, anchor, content);\n      break;\n    }\n    case 2: {\n      // ClrAxis.HORIZONTAL + ClrSide.AFTER\n      xDiff += anchor.width; // push the content right of of the anchor\n      yDiff += alignVertical(position, anchor, content);\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n  return { xOffset: xDiff, yOffset: yDiff };\n}\n\nfunction alignHorizontal(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): number {\n  let horizontalOffset = 0;\n  // horizontal offset for the anchor position\n  switch (position.anchor /*calculate for the anchor alignment*/) {\n    case ClrAlignment.START: {\n      // nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      horizontalOffset += anchor.width / 2; // push content over 1/2 anchor width\n      break;\n    }\n    case ClrAlignment.END: {\n      horizontalOffset += anchor.width; //  push content over width of the anchor\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  // horizontal offsets for anchor alignment\n  switch (\n    position.content // calculate for the content alignment\n  ) {\n    case ClrAlignment.START: {\n      // Nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      horizontalOffset -= content.width / 2; // pull content left by a value of 1/2 content width\n      break;\n    }\n    case ClrAlignment.END: {\n      // subtract the width of currentContent from horizontalOffset to pull it back\n      horizontalOffset -= content.width;\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  return horizontalOffset;\n}\n\nfunction alignVertical(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): number {\n  // y axis offsets for anchor alignment\n  let verticalOffset = 0;\n\n  // Calculate y offset for anchor position\n  switch (position.anchor) {\n    case ClrAlignment.START: {\n      // nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      verticalOffset += anchor.height / 2; // push content down to the middle of the anchor rect\n      break;\n    }\n    case ClrAlignment.END: {\n      verticalOffset += anchor.height; // push content down to the bottom of the anchor\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  // Calculate y offsets for content alignment\n  switch (position.content) {\n    case ClrAlignment.START: {\n      // aligned to the top of the content rect\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      verticalOffset -= content.height / 2; // pull content back up to the middle of the content rect\n      break;\n    }\n    case ClrAlignment.END: {\n      verticalOffset -= content.height; // pull content back up to the bottom of the content rect\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n  return verticalOffset;\n}\n\nexport function testVisibility(offset: ClrPopoverContentOffset, content: ClientRect): ClrViewportViolation[] {\n  const violations: ClrViewportViolation[] = [];\n  const mockCoords: ClrVisibilityCoords = {\n    bottom: offset.yOffset + content.height,\n    left: offset.xOffset,\n    right: offset.xOffset + content.width,\n    top: offset.yOffset,\n  };\n\n  if (!(mockCoords.top >= 0)) {\n    violations.push(ClrViewportViolation.TOP);\n  }\n  if (!(mockCoords.left >= 0)) {\n    violations.push(ClrViewportViolation.LEFT);\n  }\n  if (!(mockCoords.bottom <= (window.innerHeight || document.documentElement.clientHeight))) {\n    violations.push(ClrViewportViolation.BOTTOM);\n  }\n  if (!(mockCoords.right <= (window.innerWidth || document.documentElement.clientWidth))) {\n    violations.push(ClrViewportViolation.RIGHT);\n  }\n\n  return violations;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrAxis {\n  VERTICAL,\n  HORIZONTAL,\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport { Injectable, PLATFORM_ID, Inject } from '@angular/core';\n\nimport { ClrPopoverEventsService } from './popover-events.service';\nimport { ClrPopoverPosition } from '../interfaces/popover-position.interface';\nimport { ClrPopoverContentOffset } from '../interfaces/popover-content-offset.interface';\nimport { ClrViewportViolation } from '../enums/viewport-violation.enum';\nimport { align, flipSidesAndNudgeContent, flipSides, nudgeContent, testVisibility } from '../position-operators';\nimport { ClrAxis } from '../enums/axis.enum';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable()\nexport class ClrPopoverPositionService {\n  private currentAnchorCoords: ClientRect;\n  private currentContentCoords: ClientRect;\n  private contentOffsets: ClrPopoverContentOffset;\n  private _position: ClrPopoverPosition;\n\n  private _shouldRealign: Subject<void> = new Subject();\n  shouldRealign: Observable<void> = this._shouldRealign.asObservable();\n\n  realign() {\n    this._shouldRealign.next();\n  }\n\n  set position(position: ClrPopoverPosition) {\n    this._position = position;\n  }\n  get position(): ClrPopoverPosition {\n    return this._position;\n  }\n\n  constructor(private eventService: ClrPopoverEventsService, @Inject(PLATFORM_ID) public platformId: Object) {}\n\n  public alignContent(content: HTMLElement): ClrPopoverContentOffset {\n    if (!isPlatformBrowser(this.platformId)) {\n      // Only position when in a browser.\n      // Default to the browser origin and prevent getBoundingClientRect from running.\n      return {\n        xOffset: 0,\n        yOffset: 0,\n      };\n    }\n\n    this.currentAnchorCoords = this.eventService.anchorButtonRef.nativeElement.getBoundingClientRect();\n    this.currentContentCoords = content.getBoundingClientRect();\n    this.contentOffsets = align(this.position, this.currentAnchorCoords, this.currentContentCoords);\n\n    const visibilityViolations: ClrViewportViolation[] = testVisibility(this.contentOffsets, this.currentContentCoords);\n    /**\n     * Calculate the sum of viewport errors. This calculation is used below with the provided Axis in the given\n     * ClrPopoverPosition. Its worth putting the ClrViewportViolation enum values here:\n     *\n     *   BOTTOM = 0,\n     *   LEFT = 1,\n     *   RIGHT = 2,\n     *   TOP = 3,\n     *\n     *   So, this.visibilityViolations.length tells us how many sides of the viewport that the popover content was\n     *   clipped on. We can only help when the content has an issue on one or two sides.\n     *   errorSum is calculated to determine _how_ to change the position. Looking at both the axis and the number\n     *   of violations I can use the errorSum to determine how to transform the position (on the fly) and adjust\n     *   where it can be improved.\n     *\n     *   Note, more than 3 viewport violations and there isn't anything we can do to help. Also when there are two\n     *   violations, we can't help if the violations are TOP+BOTTOM || LEFT+RIGHT => There is no transformation we\n     *   can make to the postion that will help.\n     *\n     *   Some examples:\n     *   There is only one error and Primary axis is VERTICAL\n     *   - this.handleVerticalAxisOneViolation has a switch that will use the error sum to apply the correct\n     *   transform to the postion based on the reduction of visibilityViolations.\n     *\n     *   There are two errors and Primary axis is HORIZONTAL\n     *   - handleHorizontalAxisTwoViolations has a switch that uses the error sum to apply both transforms needed to\n     *   improve the content position based on the reduction of visibilityViolations.\n     */\n\n    const errorSum = visibilityViolations.reduce((count, current) => {\n      return count + current;\n    }, 0);\n\n    if (visibilityViolations.length === 1 && this.position.axis === ClrAxis.VERTICAL) {\n      // When primary axis is VERTICAL and there is one viewport violation\n      this.handleVerticalAxisOneViolation(errorSum);\n    } else if (visibilityViolations.length === 1 && this.position.axis === ClrAxis.HORIZONTAL) {\n      // When primary axis is HORIZONTAL and there is one viewport violation\n      this.handleHorizontalAxisOneViolation(errorSum);\n    } else if (visibilityViolations.length === 2 && this.position.axis === ClrAxis.VERTICAL) {\n      // When primary axis is VERTICAL and there are two viewport violations\n      this.handleVerticalAxisTwoViolations(errorSum);\n    } else if (visibilityViolations.length === 2 && this.position.axis === ClrAxis.HORIZONTAL) {\n      // When primary axis is HORIZONTAL and there are two viewport violations\n      this.handleHorizontalAxisTwoViolations(errorSum);\n    }\n    return this.contentOffsets;\n  }\n\n  private handleVerticalAxisOneViolation(errorSum: number): void {\n    switch (errorSum) {\n      case 0:\n      case 3: {\n        // BOTTOM(0) or TOP(3) are primary violations and we can just flip sides\n        this.contentOffsets = align(flipSides(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 1: {\n        // LEFT(1) is secondary and needs to nudge content right\n        this.contentOffsets = align(nudgeContent(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 2: {\n        // RIGHT(2) is secondary and  needs to nudge content left\n        this.contentOffsets = align(\n          nudgeContent(this.position, true),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleVerticalAxisTwoViolations(errorSum: number): void {\n    switch (errorSum) {\n      // We know there are two violations. We can use the errorSum to determine which combination of sides were\n      // violated and handle appropriately.\n      case 5: {\n        // TOP(3)+RIGHT(2) is case 5. We need to flip sides and nudge the content to the left\n        const flipAndNudgeLeft = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(\n          flipAndNudgeLeft(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 4: {\n        //TOP(3)+LEFT(1) is case 4, we need to flip sides and nudge content to the right\n        const flipAndNudgeRight = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeRight(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3)+BOTTOM(0) || left(1)+RIGHT(2) is case 3. There is nothing we can do position wise to improve the\n        // placement for this content.\n        break;\n      }\n      case 2: {\n        // BOTTOM(0)+RIGHT(2) is case 2. We need to flip sides and nudge the content to the left\n        const flipAndNudgeLeft = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(\n          flipAndNudgeLeft(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 1: {\n        // BOTTOM(0)+LEFT(1) is case 1. We need to flip sides and nudge to the right\n        const flipAndNudgeRight = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeRight(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleHorizontalAxisOneViolation(errorSum: number): void {\n    switch (errorSum) {\n      case 1:\n      case 2: {\n        // LEFT(1) and RIGHT(2) are primary violations so we can flip sides\n        this.contentOffsets = align(flipSides(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 0: {\n        // BOTTOM(0) is a secondary violation and we need to nudge content up\n        this.contentOffsets = align(\n          nudgeContent(this.position, true),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3) is a secondary violation and we need to nudge content down\n        this.contentOffsets = align(nudgeContent(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleHorizontalAxisTwoViolations(errorSum: number): void {\n    switch (errorSum) {\n      case 5:\n      case 4: {\n        // TOP(3)+LEFT(1) is case 4.\n        // TOP(3)+RIGHT(2) is case 5.\n        // In both of these cases we need to flip sides and nudge content down\n        const flipAndNudgeDown = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeDown(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3)+BOTTOM(0) || left(1)+RIGHT(2) is case 3. There is nothing we can do position wise to improve the\n        // placement for this content.\n        break;\n      }\n      case 2:\n      case 1: {\n        // BOTTOM(0)+RIGHT(2) is case 2.\n        // BOTTOM(0)+LEFT(1) is case 1.\n        // In both cases we  need to flip sides and nudge content up\n        const flipAndNudgeUp = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(flipAndNudgeUp(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport {\n  Directive,\n  EmbeddedViewRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  AfterContentChecked,\n  EventEmitter,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Subscription } from 'rxjs';\n\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\nimport { ClrPopoverPositionService } from './providers/popover-position.service';\nimport { ClrPopoverPosition } from './interfaces/popover-position.interface';\nimport { debounceTime } from 'rxjs/operators';\n\n// https://github.com/angular/angular/issues/20351#issuecomment-344009887\n/** @dynamic */\n@Directive({ selector: '[clrPopoverContent]' })\nexport class ClrPopoverContent implements AfterContentChecked, OnDestroy {\n  private view: EmbeddedViewRef<void>;\n  private subscriptions: Subscription[] = [];\n\n  @Input('clrPopoverContent')\n  public set open(value: boolean) {\n    this.smartOpenService.open = !!value;\n  }\n\n  @Input('clrPopoverContentAt')\n  set contentAt(position: ClrPopoverPosition) {\n    this.smartPositionService.position = position;\n  }\n\n  @Input('clrPopoverContentOutsideClickToClose')\n  set outsideClickClose(clickToClose) {\n    this.smartEventsService.outsideClickClose = !!clickToClose;\n  }\n\n  @Input('clrPopoverContentScrollToClose')\n  set scrollToClose(scrollToClose) {\n    this.smartEventsService.scrollToClose = !!scrollToClose;\n  }\n\n  constructor(\n    @Inject(DOCUMENT) private document: HTMLDocument,\n    private container: ViewContainerRef,\n    private template: TemplateRef<any>,\n    private renderer: Renderer2,\n    private smartPositionService: ClrPopoverPositionService,\n    private smartEventsService: ClrPopoverEventsService,\n    private smartOpenService: ClrPopoverToggleService\n  ) {}\n\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.smartOpenService.openChange.subscribe(change => {\n        if (change) {\n          this.addContent();\n        } else {\n          this.removeContent();\n        }\n      }),\n      this.smartPositionService.shouldRealign.subscribe(() => {\n        this.shouldRealign = true;\n        // Avoid flickering on initialization, caused by the asynchronous nature of the\n        // check-collector pattern.\n        if (this.view) {\n          this.renderer.setStyle(this.view.rootNodes[0], 'opacity', '0');\n        }\n      }),\n      // Here we collect subsequent synchronously received content-check events and only take action\n      // at the end of the cycle. See below for details on the check-collector pattern.\n      this.checkCollector.pipe(debounceTime(0)).subscribe(() => {\n        this.alignContent();\n        this.shouldRealign = false;\n        if (this.view) {\n          this.renderer.setStyle(this.view.rootNodes[0], 'opacity', '1');\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.removeContent();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private removeContent(): void {\n    if (!this.view) {\n      return;\n    }\n    this.view.rootNodes.forEach(node => this.renderer.removeChild(this.document.body, node));\n    this.container.clear();\n    delete this.view;\n  }\n\n  /**\n   * TODO(matt): investigate why DebugElement retains a reference to the nodes and causes a memory leak.\n   * A note about the use of appendChild/removeChild\n   * The DebugElement is keeping a reference to the detached node and its unclear why.\n   * This does warrant further investigation. But, since it doesn't happen in production mode\n   * it is a low priority issue for now.\n   */\n  private addContent() {\n    // Create the view container\n    this.view = this.container.createEmbeddedView(this.template);\n    this.smartEventsService.contentRef = this.view.rootNodes[0]; // So we know where/what to set close focus on\n    this.renderer.addClass(this.view.rootNodes[0], 'clr-popover-content');\n    // Reset to the begining of the document to be available for sizing/positioning calculations.\n    // If we add new content to the bottom it triggers changes in the layout that may lead to false anchor\n    // coordinates values.\n    this.renderer.setStyle(this.view.rootNodes[0], 'top', '0px');\n    this.renderer.setStyle(this.view.rootNodes[0], 'left', '0px');\n    // We need to hide it during the calculation phase, while it's not yet finally positioned.\n    this.renderer.setStyle(this.view.rootNodes[0], 'opacity', '0');\n    this.renderer.listen(this.view.rootNodes[0], 'click', event => {\n      this.smartOpenService.openEvent = event;\n    });\n    this.view.rootNodes.forEach(node => {\n      this.renderer.appendChild(this.document.body, node);\n    });\n    // Mark for realingment on the next content-check cycle.\n    this.shouldRealign = true;\n  }\n\n  private shouldRealign = false;\n\n  // Check-collector pattern:\n  // In order to get accurate content height/width values, we cannot calculate alignment offsets until\n  // after the projected content has stabilized.\n  // As multiple check events may happen in the same rendering cycle, we need to collect all events\n  // and only act after the content is really stable. Or we may get wrong intermediate positioning values.\n  // We will channel subsequent content check events through this observable.\n  private checkCollector: EventEmitter<void> = new EventEmitter();\n\n  ngAfterContentChecked(): void {\n    if (this.smartOpenService.open && this.view && this.shouldRealign) {\n      // Channel content-check event through the check-collector\n      this.checkCollector.emit();\n    }\n  }\n\n  private alignContent() {\n    if (!this.view) {\n      return;\n    }\n    const positionCoords = this.smartPositionService.alignContent(this.view.rootNodes[0]);\n    this.renderer.setStyle(this.view.rootNodes[0], 'top', `${positionCoords.yOffset}px`);\n    this.renderer.setStyle(this.view.rootNodes[0], 'left', `${positionCoords.xOffset}px`);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, EventEmitter, HostListener, OnDestroy, Output } from '@angular/core';\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrPopoverOpenCloseButton]',\n  host: {\n    '[class.clr-smart-open-close]': 'true',\n  },\n})\nexport class ClrPopoverOpenCloseButton implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  constructor(private smartOpenService: ClrPopoverToggleService) {\n    this.subscriptions.push(\n      this.smartOpenService.openChange.subscribe(change => {\n        this.openCloseChange.next(change);\n      })\n    );\n  }\n\n  @Output('clrPopoverOpenCloseChange') openCloseChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  @HostListener('click', ['$event'])\n  handleClick(event: MouseEvent) {\n    this.smartOpenService.toggleWithEvent(event);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, ElementRef, EventEmitter, Output, HostListener, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { filter } from 'rxjs/operators';\n\n@Directive({\n  selector: '[clrPopoverCloseButton]',\n  host: {\n    '[class.clr-smart-close-button]': 'true',\n  },\n})\nexport class ClrPopoverCloseButton implements OnDestroy, AfterViewInit {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private elementRef: ElementRef,\n    private smartEventsService: ClrPopoverEventsService,\n    private smartOpenService: ClrPopoverToggleService\n  ) {\n    this.subscriptions.push(\n      smartOpenService.openChange.pipe(filter(value => !value)).subscribe(() => {\n        this.closeChange.next();\n      })\n    );\n  }\n\n  @Output('clrPopoverOnCloseChange') closeChange: EventEmitter<void> = new EventEmitter<void>();\n\n  @HostListener('click', ['$event'])\n  handleClick(event: MouseEvent) {\n    this.smartOpenService.toggleWithEvent(event);\n    this.smartEventsService.setAnchorFocus();\n  }\n\n  ngAfterViewInit() {\n    this.smartEventsService.closeButtonRef = this.elementRef;\n    this.smartEventsService.setCloseFocus();\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, ElementRef } from '@angular/core';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\n\n@Directive({\n  selector: '[clrPopoverAnchor]',\n  host: {\n    '[class.clr-anchor]': 'true',\n  },\n})\nexport class ClrPopoverAnchor {\n  constructor(smartEventService: ClrPopoverEventsService, element: ElementRef) {\n    smartEventService.anchorButtonRef = element;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClrPopoverContent } from './popover-content';\nimport { ClrPopoverOpenCloseButton } from './popover-open-close-button';\nimport { ClrPopoverCloseButton } from './popover-close-button';\nimport { ClrPopoverAnchor } from './popover-anchor';\n\n@NgModule({\n  imports: [],\n  declarations: [ClrPopoverAnchor, ClrPopoverCloseButton, ClrPopoverOpenCloseButton, ClrPopoverContent],\n  exports: [ClrPopoverAnchor, ClrPopoverCloseButton, ClrPopoverOpenCloseButton, ClrPopoverContent],\n})\nexport class ClrPopoverModuleNext {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrLoadingState } from './loading';\n\n/**\n * This is an abstract class because we need it to still be a valid token for dependency injection after transpiling.\n * This does not mean you should extend it, simply implementing it is fine.\n */\nexport abstract class LoadingListener {\n  abstract loadingStateChange(state: ClrLoadingState): void;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, OnDestroy, Optional } from '@angular/core';\n\nimport { LoadingListener } from './loading-listener';\n\nexport enum ClrLoadingState {\n  DEFAULT,\n  LOADING,\n  SUCCESS,\n  ERROR,\n}\n\n@Directive({ selector: '[clrLoading]' })\nexport class ClrLoading implements OnDestroy {\n  // We find the first parent that handles something loading\n  constructor(@Optional() private listener: LoadingListener) {}\n\n  private _loadingState: ClrLoadingState = ClrLoadingState.DEFAULT;\n\n  public get loadingState() {\n    return this._loadingState;\n  }\n\n  @Input('clrLoading')\n  public set loadingState(value: boolean | ClrLoadingState) {\n    if (value === true) {\n      value = ClrLoadingState.LOADING;\n    } else if (!value) {\n      value = ClrLoadingState.DEFAULT;\n    }\n\n    if (value === this._loadingState) {\n      return;\n    }\n\n    this._loadingState = value;\n    if (this.listener) {\n      this.listener.loadingStateChange(value);\n    }\n  }\n\n  ngOnDestroy() {\n    this.loadingState = ClrLoadingState.DEFAULT;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrButton } from '../button-group/button';\n\n@Injectable()\nexport class ButtonInGroupService {\n  private _changes: Subject<ClrButton> = new Subject<ClrButton>();\n\n  get changes(): Observable<ClrButton> {\n    return this._changes.asObservable();\n  }\n\n  updateButtonGroup(button: ClrButton): void {\n    this._changes.next(button);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Optional, Output, SkipSelf, TemplateRef, ViewChild } from '@angular/core';\n\nimport { ClrLoadingState } from '../../utils/loading/loading';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\nimport { ButtonInGroupService } from '../providers/button-in-group.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-button',\n  template: `\n        <ng-template #buttonProjectedRef>\n            <button\n                [class]=\"classNames\"\n                (click)=\"emitClick($event)\"\n                [attr.type]=\"type\"\n                [attr.name]=\"name\"\n                [attr.disabled]=\"disabled\"\n                [attr.id]=\"id\">\n                <span class=\"spinner spinner-inline\" *ngIf=\"loading\"></span>\n                <ng-content></ng-content>\n            </button>\n        </ng-template>\n    `,\n  providers: [{ provide: LoadingListener, useExisting: ClrButton }],\n})\nexport class ClrButton implements LoadingListener {\n  private _enableService: boolean = false;\n\n  @ViewChild('buttonProjectedRef', { static: true })\n  templateRef: TemplateRef<ClrButton>;\n\n  constructor(\n    @SkipSelf()\n    @Optional()\n    public buttonInGroupService: ButtonInGroupService,\n    private toggleService: ClrPopoverToggleService\n  ) {}\n\n  private _inMenu: boolean = false;\n\n  get inMenu(): boolean {\n    return this._inMenu;\n  }\n\n  @Input('clrInMenu')\n  set inMenu(value: boolean) {\n    value = !!value;\n    if (this._inMenu !== value) {\n      this._inMenu = value;\n      // We check if the service flag is enabled\n      // and if the service exists because the service is optional\n      if (this._enableService && this.buttonInGroupService) {\n        this.buttonInGroupService.updateButtonGroup(this);\n      }\n    }\n  }\n\n  private _classNames: string = 'btn';\n\n  get classNames(): string {\n    return this._classNames;\n  }\n\n  @Input('class')\n  set classNames(value: string) {\n    if (typeof value === 'string') {\n      const classNames: string[] = value.split(' ');\n      if (classNames.indexOf('btn') === -1) {\n        classNames.push('btn');\n      }\n      this._classNames = classNames.join(' ');\n    }\n  }\n\n  private _name: string = null;\n\n  get name(): string {\n    return this._name;\n  }\n\n  @Input('name')\n  set name(value: string) {\n    if (typeof value === 'string') {\n      this._name = value;\n    }\n  }\n\n  private _type: string = null;\n\n  get type(): string {\n    return this._type;\n  }\n\n  @Input('type')\n  set type(value: string) {\n    if (typeof value === 'string') {\n      this._type = value;\n    }\n  }\n\n  private _id: string = null;\n\n  get id(): string {\n    return this._id;\n  }\n\n  @Input('id')\n  set id(value: string) {\n    if (typeof value === 'string') {\n      this._id = value;\n    }\n  }\n\n  private _disabled: any = null;\n\n  get disabled(): any {\n    return this._disabled;\n  }\n\n  @Input('disabled')\n  set disabled(value: any) {\n    if (value !== null && value !== false) {\n      this._disabled = '';\n    } else {\n      this._disabled = null;\n    }\n  }\n\n  public loading: boolean;\n\n  loadingStateChange(state: ClrLoadingState): void {\n    this.loading = state === ClrLoadingState.LOADING;\n  }\n\n  @Output('click') _click: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  emitClick($event): void {\n    if (this.inMenu) {\n      this.toggleService.toggleWithEvent($event);\n    }\n    this._click.emit(true);\n  }\n\n  ngAfterViewInit() {\n    this._enableService = true;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrCommonStrings } from './common-strings.interface';\n\nexport const commonStringsDefault: ClrCommonStrings = {\n  open: 'Open',\n  close: 'Close',\n  show: 'Show',\n  hide: 'Hide',\n  expand: 'Expand',\n  collapse: 'Collapse',\n  more: 'More',\n  select: 'Select',\n  selectAll: 'Select All',\n  previous: 'Previous',\n  next: 'Next',\n  current: 'Jump to current',\n  info: 'Info',\n  success: 'Success',\n  warning: 'Warning',\n  danger: 'Error',\n  rowActions: 'Available actions',\n  pickColumns: 'Show or hide columns',\n  showColumns: 'Show Columns',\n  sortColumn: 'Sort Column',\n  firstPage: 'First Page',\n  lastPage: 'Last Page',\n  nextPage: 'Next Page',\n  previousPage: 'Previous Page',\n  currentPage: 'Current Page',\n  totalPages: 'Total Pages',\n  minValue: 'Min value',\n  maxValue: 'Max value',\n  modalContentStart: 'Beginning of Modal Content',\n  modalContentEnd: 'End of Modal Content',\n  showColumnsMenuDescription: 'Show or hide columns menu',\n  allColumnsSelected: 'All columns selected',\n  signpostToggle: 'Signpost Toggle',\n  signpostClose: 'Signpost Close',\n  loading: 'Loading',\n  // Datagrid\n  detailPaneStart: 'Start of row details',\n  detailPaneEnd: 'End of row details',\n  singleSelectionAriaLabel: 'Single selection header',\n  singleActionableAriaLabel: 'Single actionable header',\n  detailExpandableAriaLabel: 'Toggle more row content',\n  datagridFilterAriaLabel: 'Toggle column filter',\n  // Alert\n  alertCloseButtonAriaLabel: 'Close alert',\n  // Date Picker\n  datepickerToggle: 'Toggle datepicker',\n  datepickerPreviousMonth: 'Previous month',\n  datepickerCurrentMonth: 'Current month',\n  datepickerNextMonth: 'Next month',\n  datepickerPreviousDecade: 'Previous decade',\n  datepickerNextDecade: 'Next decade',\n  datepickerCurrentDecade: 'Current decade',\n  datepickerSelectMonthText: 'Select month, the current month is {CALENDAR_MONTH}',\n  datepickerSelectYearText: 'Select year, the current year is {CALENDAR_YEAR}',\n  daypickerSRCurrentMonthPhrase: 'The current month is {CURRENT_MONTH}',\n  daypickerSRCurrentYearPhrase: 'The current year is {CURRENT_YEAR}',\n  daypickerSRCurrentDecadePhrase: 'The current decade is {DECADE_RANGE}',\n  // Stack View\n  stackViewChanged: 'Value changed.',\n  // Forms\n  formErrorSummary: 'The form has {ERROR_NUMBER} errors.',\n  //Vertical Nav\n  verticalNavToggle: 'Toggle vertical navigation',\n  verticalNavGroupToggle: 'Toggle vertical navigation group',\n  // Timeline steps\n  timelineStepNotStarted: 'Not started',\n  timelineStepCurrent: 'Current',\n  timelineStepSuccess: 'Completed',\n  timelineStepError: 'Error',\n  timelineStepProcessing: 'In progress',\n\n  // Datagrid expandable rows\n  dategridExpandableBeginningOf: 'Beginning of',\n  dategridExpandableEndOf: 'End of',\n  dategridExpandableRowContent: 'Expandable row content',\n  dategridExpandableRowsHelperText: `Screen reader table commands may not work for viewing expanded content, please use your screen reader's browse mode to read the content exposed by this button`,\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { commonStringsDefault } from './../../utils/i18n/common-strings.default';\nimport { ClrCommonStrings } from './../../utils/i18n/common-strings.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClrCommonStringsService {\n  private _strings = commonStringsDefault;\n\n  /**\n   * Allows you to pass in new overrides for localization\n   */\n  localize(overrides: Partial<ClrCommonStrings>) {\n    this._strings = { ...this._strings, ...overrides };\n  }\n\n  /**\n   * Access to all of the keys as strings\n   */\n  get keys(): Readonly<ClrCommonStrings> {\n    return this._strings;\n  }\n\n  /**\n   * Parse a string with a set of tokens to replace\n   */\n  parse(source: string, tokens: { [key: string]: string } = {}) {\n    const names = Object.keys(tokens);\n    let output = source;\n    if (names.length) {\n      names.forEach(name => {\n        output = output.replace(`{${name}}`, tokens[name]);\n      });\n    }\n    return output;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nlet NB_INSTANCES = 0;\n\nexport const UNIQUE_ID = new InjectionToken<string>('UNIQUE_ID');\n\nexport function uniqueIdFactory() {\n  return 'clr-id-' + NB_INSTANCES++;\n}\n\nexport const UNIQUE_ID_PROVIDER = {\n  provide: UNIQUE_ID,\n  useFactory: uniqueIdFactory,\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrSide {\n  BEFORE = -1,\n  AFTER = 1,\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { ClrAxis } from './axis.enum';\nimport { ClrSide } from './side.enum';\nimport { ClrAlignment } from './alignment.enum';\n\ninterface ClrPopoverPositionsInterface {\n  axis: ClrAxis;\n  side: ClrSide;\n  anchor: ClrAlignment;\n  content: ClrAlignment;\n}\n\nexport class ClrPopoverPositions {\n  static 'top-right': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.END,\n    content: ClrAlignment.END,\n  };\n\n  static 'top-left': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n\n  static 'bottom-right': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.END,\n    content: ClrAlignment.END,\n  };\n\n  static 'bottom-left': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n\n  static 'right-top': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.CENTER,\n    content: ClrAlignment.END,\n  };\n\n  static 'right-bottom': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n\n  static 'left-top': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.CENTER,\n    content: ClrAlignment.END,\n  };\n\n  static 'left-bottom': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Inject, ContentChildren, Input, QueryList } from '@angular/core';\n\nimport { ButtonInGroupService } from '../providers/button-in-group.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ClrPopoverPositions } from '../../utils/popover/enums/positions.enum';\n\nimport { ClrButton } from './button';\n\n@Component({\n  selector: 'clr-button-group',\n  templateUrl: 'button-group.html',\n  providers: [\n    ButtonInGroupService,\n    UNIQUE_ID_PROVIDER,\n    ClrPopoverToggleService,\n    ClrPopoverEventsService,\n    ClrPopoverPositionService,\n  ],\n  host: { '[class.btn-group]': 'true' },\n})\nexport class ClrButtonGroup {\n  @ContentChildren(ClrButton) buttons: QueryList<ClrButton>;\n\n  constructor(\n    public buttonGroupNewService: ButtonInGroupService,\n    private toggleService: ClrPopoverToggleService,\n    @Inject(UNIQUE_ID) public popoverId: string,\n    public commonStrings: ClrCommonStringsService\n  ) {}\n\n  public popoverPosition: ClrPopoverPosition = ClrPopoverPositions['bottom-left'];\n\n  public get open() {\n    return this.toggleService.open;\n  }\n\n  inlineButtons: ClrButton[] = [];\n  menuButtons: ClrButton[] = [];\n\n  /**\n   * 1. Initializes the initial Button Group View\n   * 2. Subscribes to changes on the ContentChildren\n   *    in case the user content projection changes\n   */\n  ngAfterContentInit() {\n    this.initializeButtons();\n    this.buttonGroupNewService.changes.subscribe(button => this.rearrangeButton(button));\n    this.buttons.changes.subscribe(() => {\n      this.initializeButtons();\n    });\n  }\n\n  /**\n   * Moves the button into the other ViewContainer\n   * when an update is received.\n   *\n   * @param button\n   */\n  rearrangeButton(button: ClrButton): void {\n    let fromView: ClrButton[];\n    let toView: ClrButton[];\n    if (button.inMenu) {\n      fromView = this.inlineButtons;\n      toView = this.menuButtons;\n    } else {\n      fromView = this.menuButtons;\n      toView = this.inlineButtons;\n    }\n    const index: number = fromView.indexOf(button);\n    if (index > -1) {\n      fromView.splice(index, 1);\n      const moveIndex = this.getMoveIndex(button);\n      if (moveIndex <= toView.length) {\n        toView.splice(moveIndex, 0, button);\n      }\n    }\n  }\n\n  /**\n   * Author: Eudes\n   *\n   * Finds the order of a button w.r.t other buttons\n   *\n   * @param buttonToMove\n   * @returns\n   */\n  getMoveIndex(buttonToMove: ClrButton): number {\n    const tempArr: ClrButton[] = this.buttons.filter(button => button.inMenu === buttonToMove.inMenu);\n    return tempArr.indexOf(buttonToMove);\n  }\n\n  initializeButtons(): void {\n    const tempInlineButtons: ClrButton[] = [];\n    const tempInMenuButtons: ClrButton[] = [];\n    this.buttons.forEach(button => {\n      if (button.inMenu) {\n        tempInMenuButtons.push(button);\n      } else {\n        tempInlineButtons.push(button);\n      }\n    });\n    this.inlineButtons = tempInlineButtons;\n    this.menuButtons = tempInMenuButtons;\n  }\n\n  /**\n   * Overflow Menu\n   *\n   */\n\n  // Indicates the position of the overflow menu\n  private _menuPosition: string;\n\n  get menuPosition(): string {\n    return this._menuPosition;\n  }\n\n  @Input('clrMenuPosition')\n  set menuPosition(pos: string) {\n    if (pos && ClrPopoverPositions[pos]) {\n      this._menuPosition = pos;\n    } else {\n      this._menuPosition = 'bottom-left';\n    }\n\n    this.popoverPosition = ClrPopoverPositions[this._menuPosition];\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrPopoverModuleNext } from '../../utils/popover/popover.module';\n\nimport { ClrButton } from './button';\nimport { ClrButtonGroup } from './button-group';\n\nexport const CLR_BUTTON_GROUP_DIRECTIVES: Type<any>[] = [ClrButton, ClrButtonGroup];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrPopoverModuleNext],\n  declarations: [CLR_BUTTON_GROUP_DIRECTIVES],\n  exports: [CLR_BUTTON_GROUP_DIRECTIVES],\n})\nexport class ClrButtonGroupModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, keyframes, style, transition, trigger } from '@angular/animations';\nimport { Component, ElementRef, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\nimport { ClrLoadingState } from '../../utils/loading/loading';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\n\n@Component({\n  selector: 'button[clrLoading]',\n  template: `\n        <ng-container [ngSwitch]=\"state\">\n            <span *ngSwitchCase=\"buttonState.LOADING\">\n                <span @spinner class=\"spinner spinner-inline\"></span>\n            </span>\n            <span *ngSwitchCase=\"buttonState.SUCCESS\">\n                <span @validated (@validated.done)=\"this.loadingStateChange(this.buttonState.DEFAULT)\" class=\"spinner spinner-inline spinner-check\"></span>\n            </span>\n            <span *ngSwitchCase=\"buttonState.DEFAULT\" @defaultButton>\n                <ng-content></ng-content>\n            </span>\n        </ng-container>\n    `,\n  providers: [{ provide: LoadingListener, useExisting: ClrLoadingButton }],\n  animations: [\n    trigger('defaultButton', [\n      transition(':enter', [style({ opacity: 0 }), animate('200ms 100ms ease-in', style({ opacity: 1 }))]),\n      // TODO: see if we can get leave animation to work before spinner's enter animation\n      transition(':leave', [style({ opacity: 0 })]),\n    ]),\n    trigger('spinner', [\n      transition(':enter', [style({ opacity: 0 }), animate('200ms 100ms ease-in', style({ opacity: 1 }))]),\n      transition(':leave', [style({ opacity: 1 }), animate('100ms ease-out', style({ opacity: 0 }))]),\n    ]),\n    trigger('validated', [\n      transition(':enter', [\n        animate(\n          '600ms',\n          keyframes([\n            style({ transform: 'scale(0,0)', offset: 0 }),\n            style({ opacity: 1, offset: 0.2 }),\n            style({ transform: 'scale(1.2,1.2)', offset: 0.4 }),\n            style({ transform: 'scale(.9,.9)', offset: 0.6 }),\n            style({ transform: 'scale(1,1)', offset: 1 }),\n          ])\n        ),\n      ]),\n      transition(':leave', [style({ opacity: 1 }), animate('100ms ease-out', style({ opacity: 0 }))]),\n    ]),\n  ],\n  host: { '[attr.disabled]': \"disabled? '' : null\" },\n})\nexport class ClrLoadingButton implements LoadingListener {\n  public buttonState = ClrLoadingState;\n  public state: ClrLoadingState = ClrLoadingState.DEFAULT;\n\n  @Input('disabled') public disabled: boolean;\n\n  @Output('clrLoadingChange')\n  public clrLoadingChange: EventEmitter<ClrLoadingState> = new EventEmitter<ClrLoadingState>(false);\n\n  constructor(public el: ElementRef, private renderer: Renderer2) {}\n\n  loadingStateChange(state: ClrLoadingState): void {\n    if (state === this.state) {\n      return;\n    }\n    this.state = state;\n\n    switch (state) {\n      case ClrLoadingState.DEFAULT:\n        this.renderer.removeStyle(this.el.nativeElement, 'width');\n        this.renderer.removeStyle(this.el.nativeElement, 'transform'); // for chromium render bug see issue https://github.com/vmware/clarity/issues/2700\n        if (!this.disabled) {\n          this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\n        }\n        break;\n      case ClrLoadingState.LOADING:\n        this.setExplicitButtonWidth();\n        this.renderer.setStyle(this.el.nativeElement, 'transform', 'translatez(0)'); // for chromium render bug see issue https://github.com/vmware/clarity/issues/2700\n        this.renderer.setAttribute(this.el.nativeElement, 'disabled', '');\n        break;\n      case ClrLoadingState.SUCCESS:\n        this.setExplicitButtonWidth();\n        break;\n      case ClrLoadingState.ERROR:\n        this.loadingStateChange(ClrLoadingState.DEFAULT);\n        break;\n      default:\n        break;\n    }\n    this.clrLoadingChange.emit(state);\n  }\n\n  private setExplicitButtonWidth() {\n    if (this.el.nativeElement && this.el.nativeElement.getBoundingClientRect) {\n      const boundingClientRect = this.el.nativeElement.getBoundingClientRect();\n      this.renderer.setStyle(this.el.nativeElement, 'width', `${boundingClientRect.width}px`);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrLoadingButton } from './loading-button';\n\nexport const CLR_LOADING_BUTTON_DIRECTIVES: Type<any>[] = [ClrLoadingButton];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_LOADING_BUTTON_DIRECTIVES],\n  exports: [CLR_LOADING_BUTTON_DIRECTIVES],\n})\nexport class ClrLoadingButtonModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { ClrButtonGroupModule } from './button-group/button-group.module';\nimport { ClrLoadingButtonModule } from './button-loading/loading-button.module';\n\n@NgModule({\n  exports: [ClrLoadingButtonModule, ClrButtonGroupModule],\n})\nexport class ClrButtonModule {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  template: '',\n})\nexport class EmptyAnchor {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { EmptyAnchor } from './empty-anchor';\n\n/**\n * Internal module, please do not export!\n */\n@NgModule({ declarations: [EmptyAnchor], exports: [EmptyAnchor], entryComponents: [EmptyAnchor] })\nexport class ClrHostWrappingModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\n\nlet counter = 0;\n\n@Injectable()\nexport class ControlIdService {\n  private _id = 'clr-form-control-' + ++counter;\n  get id(): string {\n    return this._id;\n  }\n  set id(value: string) {\n    this._id = value;\n    this._idChange.next(value);\n  }\n\n  private _idChange: BehaviorSubject<string> = new BehaviorSubject(this._id);\n  public get idChange(): Observable<string> {\n    return this._idChange.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { PLATFORM_ID } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, NgZone, OnDestroy } from '@angular/core';\nimport { uniqueIdFactory } from '../id-generator/id-generator.service';\n\nexport enum ClrAriaLivePoliteness {\n  off = 'off',\n  polite = 'polite',\n  assertive = 'assertive',\n}\n\n/**\n * Time in milliseconds before inserting the content into the container\n */\nconst ARIA_LIVE_TICK: number = 100;\n\n/**\n * This service handle `aria-live` accessibility attribute. The issue is that you need\n * to have the DOM Element with attribute `aria-live` before you could insert content\n * and SR (Screen Reader) pick the change and announce it.\n *\n * ```typescript\n * import { ClrAriaLiveService } from 'src/clr-angular/utils/a11y/aria-live.service';\n *\n * @Component({\n * selector: 'clr-demo-component',\n * providers: [ClrAriaLiveService],\n * template: `\n *   <ng-content></ng-content>\n * `,\n * })\n * export class DemoComponent {\n *  constructor(ariaLiveService: ClrAriaLiveService) {}\n *\n *  public actionThatWillTriggerChange() {\n *    this.ariaLiveService.announce('message that I want to announce to SR');\n *  }\n * }\n * ```\n *\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClrAriaLiveService implements OnDestroy {\n  private ariaLiveElement: HTMLElement;\n  private document: Document;\n  private previousTimeout: ReturnType<typeof setTimeout>;\n\n  constructor(\n    private ngZone: NgZone,\n    @Inject(DOCUMENT) _document: any,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.document = _document;\n  }\n\n  private _id: string = `clr-aria-live-element-${uniqueIdFactory()}`;\n  /**\n   * get access to the internal HTML `id` that gonna be used for the AriaLive container.\n   * @return ID of the DOM Element as string.\n   */\n  public get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Append text content inside the AriaLive Container. This method will check if the\n   * DOM Element is existing if not it will create one for us and the will apply the text.\n   *\n   * ```typescript\n   * this.ariaLiveService.announce(this.el.nativeElement);\n   * // or\n   * this.ariaLiveService.announce('Message to announce to SR');\n   * ```\n   *\n   * @remark\n   * When second argument is `AriaLivePoliteness.off` we won't create aria container or update it.\n   * The reason for that is that we don't want to do additional work if the SR will ignore it.\n   *\n   * @param message - This could be simple string or HTMLElement\n   * @param politeness - 'polite', 'assertive' or 'off'\n   */\n  public announce(\n    message: string | HTMLElement,\n    politeness: ClrAriaLivePoliteness = ClrAriaLivePoliteness.polite\n  ): void {\n    if (politeness === ClrAriaLivePoliteness.off) {\n      return;\n    }\n\n    if (!this.ariaLiveElement && isPlatformBrowser(this.platformId)) {\n      this.ariaLiveElement = this.createContainer();\n    }\n\n    message = typeof message !== 'string' && isPlatformBrowser(this.platformId) ? message.textContent : message;\n\n    // when there is no message do NOTHING!\n    if (!message) {\n      return;\n    }\n\n    this.ariaLiveElement.setAttribute('aria-live', politeness);\n\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n    //   second time without clearing and then using a non-zero delay.\n    // (using JAWS 17 at time of this writing).\n    this.ngZone.runOutsideAngular(() => {\n      // This clearTimeout will stop all older messages from announcing\n      // in the case where the messages are comming too fast we gonna try to append only\n      // the last one. That's what the SR will try to do anyway.\n      clearTimeout(this.previousTimeout);\n      this.previousTimeout = setTimeout(() => {\n        this.ariaLiveElement.textContent = <string>message;\n      }, ARIA_LIVE_TICK);\n    });\n  }\n\n  /**\n   * onDestroy life cycle - must stop all active setTimeouts and remove the AriaLive\n   * container from the document.\n   */\n  public ngOnDestroy() {\n    clearTimeout(this.previousTimeout);\n    if (isPlatformBrowser(this.platformId) && this.ariaLiveElement) {\n      this.document.body.removeChild(this.ariaLiveElement);\n      this.ariaLiveElement = null;\n    }\n  }\n\n  /**\n   * Create AriaLive DOM element as a last child of the document.\n   * After the element is created, we gonna apply Clarity class to hide it from\n   * the screen and set the `aria-live` politness.\n   *\n   * `clr-sr-only` is the CSS class that is used to hide the element from the screen.\n   *\n   * @remark\n   * Calling this method multiple times will create multiple DOM Elements, that\n   * won't be tracked and will be GC after the service is destroyed.\n   *\n   * @return AriaLive container as HTMLElement\n   *\n   */\n  private createContainer(): HTMLElement {\n    const ariaLiveElement = this.document.createElement('div');\n\n    ariaLiveElement.setAttribute('id', this.id);\n    // Use clarity screen reader class to hide the dom element\n    // and fix the scrollbar shake\n    ariaLiveElement.classList.add('clr-sr-only');\n\n    ariaLiveElement.setAttribute('aria-atomic', 'true');\n    ariaLiveElement.setAttribute('aria-live', ClrAriaLivePoliteness.polite);\n\n    this.document.body.appendChild(ariaLiveElement);\n\n    return ariaLiveElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nexport enum Layouts {\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n  COMPACT = 'compact',\n}\n\n@Injectable()\nexport class LayoutService {\n  readonly minLabelSize = 1;\n  readonly maxLabelSize = 12;\n  layout: Layouts = Layouts.HORIZONTAL;\n\n  // This is basically a replacement for Object.values(), which IE11 and Node <9 don't support :(\n  // String enums cannot be reverse-mapped, meaning Layouts['COMPACT'] does not return 'compact' so\n  // this exists to deal with this little caveat to get the list of the values as an array.\n  private layoutValues: string[] = Object.keys(Layouts).map(key => Layouts[key]);\n  private _labelSize: number = 2;\n\n  set labelSize(size: number) {\n    if (this.labelSizeIsValid(size)) {\n      this._labelSize = size;\n    }\n  }\n\n  get labelSize(): number {\n    return this._labelSize;\n  }\n\n  isVertical(): boolean {\n    return this.layout === Layouts.VERTICAL;\n  }\n\n  isHorizontal(): boolean {\n    return this.layout === Layouts.HORIZONTAL;\n  }\n\n  isCompact(): boolean {\n    return this.layout === Layouts.COMPACT;\n  }\n\n  get layoutClass(): string {\n    return `clr-form-${this.layout}`;\n  }\n\n  isValid(layout: string): boolean {\n    return this.layoutValues.indexOf(layout) > -1;\n  }\n\n  labelSizeIsValid(labelSize: number): boolean {\n    return Number.isInteger(labelSize) && labelSize >= this.minLabelSize && labelSize <= this.maxLabelSize;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, Optional } from '@angular/core';\nimport { LayoutService } from './layout.service';\n\n@Injectable()\nexport class ControlClassService {\n  className = '';\n\n  constructor(@Optional() private layoutService: LayoutService) {}\n\n  controlClass(invalid = false, grid = false, additional = '') {\n    const controlClasses = [this.className, additional];\n    if (invalid) {\n      controlClasses.push('clr-error');\n    }\n    if (grid && this.layoutService && this.className.indexOf('clr-col') === -1) {\n      controlClasses.push(`clr-col-md-${this.layoutService.maxLabelSize - this.layoutService.labelSize} clr-col-12`);\n    }\n    return controlClasses.join(' ').trim();\n  }\n\n  // We want to remove the column classes from the input up to the container\n  initControlClass(renderer, element: HTMLElement) {\n    if (element && element.className) {\n      this.className = element.className;\n      const klasses = element.className.split(' ');\n      klasses.forEach(klass => {\n        if (klass.startsWith('clr-col')) {\n          renderer.removeClass(element, klass);\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional, ElementRef, AfterViewInit } from '@angular/core';\nimport { ControlIdService } from './providers/control-id.service';\nimport { ClrAriaLiveService } from '../../utils/a11y/aria-live.service';\nimport { ControlClassService } from './providers/control-class.service';\n\n@Component({\n  providers: [ClrAriaLiveService],\n  selector: 'clr-control-error',\n  template: `\n    <ng-content></ng-content>\n    `,\n  host: {\n    '[class.clr-subtext]': 'true',\n    '[id]': 'controlIdService?.id + \"-error\"',\n  },\n})\nexport class ClrControlError implements AfterViewInit {\n  constructor(\n    @Optional() public controlIdService: ControlIdService,\n    @Optional() public controlClassService: ControlClassService,\n    private ariaLiveService: ClrAriaLiveService,\n    private el: ElementRef\n  ) {}\n\n  /** @deprecated since 3.0, remove in 4.0 - ariaLiveService */\n  ngAfterViewInit() {\n    /**\n     * The way we render elements inside the `clr-control-container make this\n     * component announce itself without been visible on the screen.\n     *\n     * The check below try to guess is clr-controll-error used in some of the\n     * cases mention above and prevent us from announcing without the need of that.\n     *\n     * This change won't create breaking change - but will make aria live announcment\n     * work only when the component is used outside forms or some of the components.\n     *\n     * This is temporary solution - until better is found.\n     *\n     */\n    if (this.controlClassService === null) {\n      this.ariaLiveService.announce(this.el.nativeElement);\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional } from '@angular/core';\nimport { ControlIdService } from './providers/control-id.service';\n\n@Component({\n  selector: 'clr-control-helper',\n  template: `\n    <ng-content></ng-content>\n    `,\n  host: {\n    '[class.clr-subtext]': 'true',\n    '[id]': 'controlIdService?.id + \"-helper\"',\n  },\n})\nexport class ClrControlHelper {\n  constructor(@Optional() public controlIdService: ControlIdService) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class NgControlService {\n  // Observable to subscribe to the control, since its not available immediately for projected content\n  private _controlChanges: Subject<NgControl> = new Subject<NgControl>();\n  get controlChanges(): Observable<NgControl> {\n    return this._controlChanges.asObservable();\n  }\n\n  setControl(control: NgControl) {\n    this._controlChanges.next(control);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { NgControlService } from '../providers/ng-control.service';\n\n@Injectable()\nexport class IfErrorService implements OnDestroy {\n  // Implement our own status changes observable, since Angular controls don't\n  // fire on events like blur, and we want to return the boolean state instead of a string\n  private _statusChanges: Subject<boolean> = new Subject();\n  get statusChanges(): Observable<boolean> {\n    return this._statusChanges.asObservable();\n  }\n\n  private subscriptions: Subscription[] = [];\n  private control: NgControl;\n\n  constructor(private ngControlService: NgControlService) {\n    // Wait for the control to be available\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        if (control) {\n          this.control = control;\n          this.listenForChanges();\n        }\n      })\n    );\n  }\n\n  // Subscribe to the status change events, only after touched and emit the control\n  private listenForChanges() {\n    this.subscriptions.push(\n      this.control.statusChanges.subscribe(() => {\n        this.sendValidity();\n      })\n    );\n  }\n\n  private sendValidity() {\n    if (this.control.touched && this.control.invalid) {\n      this._statusChanges.next(true);\n    } else {\n      this._statusChanges.next(false);\n    }\n  }\n\n  // Allows a control to push a status check upstream, such as on blur\n  triggerStatusChange() {\n    if (this.control) {\n      this.sendValidity();\n    }\n  }\n\n  // Clean up subscriptions\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, Optional, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfErrorService } from './if-error.service';\nimport { NgControlService } from '../providers/ng-control.service';\nimport { NgControl } from '@angular/forms';\n\n@Directive({ selector: '[clrIfError]' })\nexport class ClrIfError {\n  constructor(\n    @Optional() private ifErrorService: IfErrorService,\n    @Optional() private ngControlService: NgControlService,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    if (!this.ifErrorService) {\n      throw new Error('clrIfError can only be used within a form control container element like clr-input-container');\n    } else {\n      this.displayError(false);\n    }\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      })\n    );\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        // If there is a specific error to track, check it, otherwise check overall validity\n        if (this.error && this.control) {\n          this.displayError(this.control.hasError(this.error));\n        } else {\n          this.displayError(invalid);\n        }\n      })\n    );\n  }\n\n  @Input('clrIfError') error: string;\n\n  private subscriptions: Subscription[] = [];\n  private displayed: boolean = false;\n  private control: NgControl;\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private displayError(invalid: boolean) {\n    if (invalid && !this.displayed) {\n      this.container.createEmbeddedView(this.template, { error: this.control.getError(this.error) });\n      this.displayed = true;\n    } else if (!invalid) {\n      this.container.clear();\n      this.displayed = false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostBinding, Input, OnDestroy, OnInit, Optional, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ControlIdService } from './providers/control-id.service';\nimport { LayoutService } from './providers/layout.service';\nimport { NgControlService } from './providers/ng-control.service';\n\n@Directive({ selector: 'label' })\nexport class ClrLabel implements OnInit, OnDestroy {\n  constructor(\n    @Optional() private controlIdService: ControlIdService,\n    @Optional() private layoutService: LayoutService,\n    @Optional() private ngControlService: NgControlService,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  @HostBinding('attr.for')\n  @Input('for')\n  forAttr: string;\n\n  private subscriptions: Subscription[] = [];\n  private enableGrid = true;\n\n  get labelText(): string {\n    return this.el.nativeElement && this.el.nativeElement.textContent;\n  }\n\n  ngOnInit() {\n    // Only add the clr-control-label if it is inside a control container\n    if (this.controlIdService || this.ngControlService) {\n      this.renderer.addClass(this.el.nativeElement, 'clr-control-label');\n    }\n    // Only set the grid column classes if we are in the right context and if they aren't already set\n    if (\n      this.enableGrid &&\n      this.layoutService &&\n      !this.layoutService.isVertical() &&\n      this.el.nativeElement &&\n      this.el.nativeElement.className.indexOf('clr-col') < 0\n    ) {\n      this.renderer.addClass(this.el.nativeElement, 'clr-col-12');\n      this.renderer.addClass(this.el.nativeElement, `clr-col-md-${this.layoutService.labelSize}`);\n    }\n    if (this.controlIdService && !this.forAttr) {\n      this.subscriptions.push(this.controlIdService.idChange.subscribe(id => (this.forAttr = id)));\n    }\n  }\n\n  disableGrid() {\n    this.enableGrid = false;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable()\nexport class MarkControlService {\n  private _touched: Subject<void> = new Subject();\n\n  get touchedChange(): Observable<void> {\n    return this._touched.asObservable();\n  }\n\n  markAsTouched() {\n    this._touched.next();\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  ContentChildren,\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  PLATFORM_ID,\n  QueryList,\n  Input,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { LayoutService } from './providers/layout.service';\nimport { MarkControlService } from './providers/mark-control.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrLabel } from './label';\nimport { ClrAriaLiveService } from '../../utils/a11y/aria-live.service';\n\n@Directive({\n  selector: '[clrForm]',\n  providers: [LayoutService, MarkControlService, ClrAriaLiveService],\n  host: {\n    '[class.clr-form]': 'true',\n    '[class.clr-form-horizontal]': 'layoutService.isHorizontal()',\n    '[class.clr-form-compact]': 'layoutService.isCompact()',\n  },\n})\nexport class ClrForm {\n  private invalidControls = [];\n\n  @Input('clrLabelSize')\n  set labelSize(size: number) {\n    this.layoutService.labelSize = size;\n  }\n\n  constructor(\n    public layoutService: LayoutService,\n    private markControlService: MarkControlService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private el: ElementRef,\n    private commonStrings: ClrCommonStringsService,\n    private ariaLiveService: ClrAriaLiveService\n  ) {}\n\n  /** @deprecated since 2.0 */\n  markAsDirty(updateAriaLiveText?: boolean) {\n    this.markAsTouched((updateAriaLiveText = true));\n  }\n\n  // Trying to avoid adding an input and keep this backwards compatible at the same time\n  markAsTouched(updateAriaLiveText?: boolean) {\n    this.markControlService.markAsTouched();\n\n    // I don't think consumers will call this with undefined, null or other values but\n    // want to make sure this only guards against when this is called with false\n    if (updateAriaLiveText !== false && isPlatformBrowser(this.platformId)) {\n      this.invalidControls = Array.from(this.el.nativeElement.querySelectorAll('.ng-invalid'));\n      if (this.invalidControls.length > 0) {\n        this.invalidControls[0].focus();\n        this.updateAriaLive();\n      }\n    }\n  }\n\n  @ContentChildren(ClrLabel, { descendants: true })\n  labels: QueryList<ClrLabel>;\n\n  @HostListener('submit')\n  onFormSubmit() {\n    this.markAsTouched();\n  }\n\n  /** @deprecated since 3.0, remove in 4.0 */\n  private updateAriaLive(): void {\n    if (this.invalidControls.length === 0) {\n      return;\n    }\n\n    const errorList = this.labels.filter(label => this.invalidControls.find(control => label.forAttr === control.id));\n\n    this.ariaLiveService.announce(\n      this.commonStrings.parse(this.commonStrings.keys.formErrorSummary, { ERROR_NUMBER: errorList.length.toString() })\n    );\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Input, OnInit } from '@angular/core';\nimport { Layouts, LayoutService } from './providers/layout.service';\n\n@Directive({\n  selector: '[clrForm][clrLayout]',\n})\nexport class ClrLayout implements OnInit {\n  @Input('clrLayout') layout: Layouts;\n\n  constructor(public layoutService: LayoutService) {}\n\n  ngOnInit() {\n    // Only set the layout if it is a valid option\n    if (this.layout && this.layoutService.isValid(this.layout)) {\n      this.layoutService.layout = this.layout;\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ContentChild, Directive, OnDestroy, Optional } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { IfErrorService } from './if-error/if-error.service';\nimport { NgControlService } from './providers/ng-control.service';\nimport { LayoutService } from './providers/layout.service';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ClrLabel } from './label';\nimport { ControlClassService } from './providers/control-class.service';\n\n@Directive()\nexport abstract class ClrAbstractContainer implements DynamicWrapper, OnDestroy {\n  protected subscriptions: Subscription[] = [];\n  invalid = false;\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: false })\n  label: ClrLabel;\n  control: NgControl;\n\n  constructor(\n    protected ifErrorService: IfErrorService,\n    @Optional() protected layoutService: LayoutService,\n    protected controlClassService: ControlClassService,\n    protected ngControlService: NgControlService\n  ) {\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        this.invalid = invalid;\n      })\n    );\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      })\n    );\n  }\n\n  controlClass() {\n    return this.controlClassService.controlClass(this.invalid, this.addGrid());\n  }\n\n  addGrid() {\n    return this.layoutService && !this.layoutService.isVertical();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.map(sub => sub.unsubscribe());\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { ClrAbstractContainer } from '../common/abstract-container';\nimport { IfErrorService } from './if-error/if-error.service';\nimport { NgControlService } from './providers/ng-control.service';\nimport { ControlIdService } from './providers/control-id.service';\nimport { ControlClassService } from './providers/control-class.service';\n\n@Component({\n  selector: 'clr-control-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-input-wrapper\">\n                <ng-content></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrControlContainer extends ClrAbstractContainer {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ElementRef,\n  InjectionToken,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { DynamicWrapper } from './dynamic-wrapper';\nimport { EmptyAnchor } from './empty-anchor';\n\n/**\n * HostWrapper must be called in OnInit to ensure that the Views are ready. If its called in a constructor the view is\n * still undefined.\n * TODO - make sure these comment annotations do not break ng-packgr.\n */\nexport class HostWrapper<W extends DynamicWrapper> implements Injector {\n  constructor(containerType: Type<W>, vcr: ViewContainerRef, index: number = 0) {\n    this.injector = vcr.injector;\n    // If the host is already wrapped, we don't do anything\n    if (!this.injector.get(containerType, null)) {\n      const cfr = this.injector.get(ComponentFactoryResolver);\n      const el = this.injector.get(ElementRef);\n\n      // We need a new anchor, since we're projecting the current one.\n      vcr.createComponent(cfr.resolveComponentFactory(EmptyAnchor));\n      const factory: ComponentFactory<W> = cfr.resolveComponentFactory(containerType);\n      // Craft the element array based on what slot to use. Angular only uses the index to determine\n      // which ng-content to project into, so if you have more than one ng-content you'll need to set\n      // the index in the constructor appropriately\n      const element = [];\n      element[index] = [el.nativeElement];\n      // We're assuming only one projection slot, but in more complex cases we might want to provide\n      // a different array of projected elements.\n      const containerRef = vcr.createComponent(factory, undefined, undefined, element);\n      // We can now remove the useless anchor\n      vcr.remove(0);\n\n      // We note that the container was dynamically created\n      containerRef.instance._dynamic = true;\n\n      // We keep the wrapper's injector to access the dependencies that weren't available before.\n      this.injector = containerRef.injector;\n    }\n  }\n\n  private injector: Injector;\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T): T {\n    return this.injector.get(token, notFoundValue);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  HostBinding,\n  InjectionToken,\n  HostListener,\n  Injector,\n  Input,\n  OnInit,\n  Type,\n  ViewContainerRef,\n  Renderer2,\n  ElementRef,\n  OnDestroy,\n  Directive,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter, distinctUntilChanged, startWith } from 'rxjs/operators';\n\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\nimport { ControlIdService } from './providers/control-id.service';\nimport { NgControlService } from './providers/ng-control.service';\nimport { IfErrorService } from './if-error/if-error.service';\nimport { NgControl } from '@angular/forms';\nimport { ControlClassService } from './providers/control-class.service';\nimport { MarkControlService } from './providers/mark-control.service';\n\n@Directive()\nexport class WrappedFormControl<W extends DynamicWrapper> implements OnInit, OnDestroy {\n  protected ngControlService: NgControlService;\n  private ifErrorService: IfErrorService;\n  private controlClassService: ControlClassService;\n  private markControlService: MarkControlService;\n  protected renderer: Renderer2;\n  protected el: ElementRef<any>;\n\n  protected subscriptions: Subscription[] = [];\n  protected index = 0;\n  protected controlIdService: ControlIdService;\n\n  _id: string;\n\n  // I lost way too much time trying to make this work without injecting the ViewContainerRef and the Injector,\n  // I'm giving up. So we have to inject these two manually for now.\n  constructor(\n    protected vcr: ViewContainerRef,\n    protected wrapperType: Type<W>,\n    injector: Injector,\n    private ngControl: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    this.renderer = renderer;\n    this.el = el;\n    try {\n      this.ngControlService = injector.get(NgControlService);\n      this.ifErrorService = injector.get(IfErrorService);\n      this.controlClassService = injector.get(ControlClassService);\n      this.markControlService = injector.get(MarkControlService);\n    } catch (e) {}\n\n    if (this.controlClassService) {\n      this.controlClassService.initControlClass(renderer, el.nativeElement);\n    }\n    if (this.markControlService) {\n      this.subscriptions.push(\n        this.markControlService.touchedChange.subscribe(() => {\n          this.ngControl.control.markAsTouched();\n          this.ngControl.control.updateValueAndValidity();\n        })\n      );\n    }\n  }\n\n  @HostBinding()\n  @Input()\n  get id() {\n    return this._id;\n  }\n  set id(value: string) {\n    this._id = value;\n    if (this.controlIdService) {\n      this.controlIdService.id = value;\n    }\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    if (this.ifErrorService) {\n      this.ifErrorService.triggerStatusChange();\n    }\n  }\n\n  private _containerInjector: Injector;\n\n  // @TODO This method has a try/catch due to an unknown issue that came when building the clrToggle feature\n  // We need to figure out why this fails for the ClrToggle scenario but works for Date picker...\n  // To see the error, remove the try/catch here and run the ClrToggle suite to see issues getting the container\n  // injector in time, and this ONLY HAPPENS in tests and not in dev/prod mode.\n  protected getProviderFromContainer<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T): T {\n    try {\n      return this._containerInjector.get(token, notFoundValue);\n    } catch (e) {\n      return notFoundValue;\n    }\n  }\n\n  ngOnInit() {\n    this._containerInjector = new HostWrapper(this.wrapperType, this.vcr, this.index);\n    this.controlIdService = this._containerInjector.get(ControlIdService);\n\n    if (this._id) {\n      this.controlIdService.id = this._id;\n    } else {\n      this._id = this.controlIdService.id;\n    }\n\n    if (this.ngControlService) {\n      this.ngControlService.setControl(this.ngControl);\n    }\n\n    this.listenForErrorStateChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private listenForErrorStateChanges() {\n    if (this.ifErrorService) {\n      this.subscriptions.push(\n        this.ifErrorService.statusChanges\n          .pipe(startWith(false), filter(() => this.renderer && !!this.el), distinctUntilChanged())\n          .subscribe(error => this.setAriaDescribedBy(error))\n      );\n    }\n  }\n\n  private setAriaDescribedBy(error: boolean) {\n    this.renderer.setAttribute(this.el.nativeElement, 'aria-describedby', this.getAriaDescribedById(error));\n  }\n\n  private getAriaDescribedById(error: boolean): string {\n    return this.controlIdService.id.concat(error ? '-error' : '-helper');\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, Injector, Optional, Renderer2, Self, ViewContainerRef } from '@angular/core';\nimport { WrappedFormControl } from './wrapped-control';\nimport { ClrControlContainer } from './control-container';\nimport { NgControl } from '@angular/forms';\n\n@Directive({ selector: '[clrControl]', host: { '[class.clr-input]': 'true' } })\nexport class ClrControl extends WrappedFormControl<ClrControlContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrControlContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrControlError } from './error';\nimport { ClrControlHelper } from './helper';\nimport { ClrIfError } from './if-error/if-error';\nimport { ClrLabel } from './label';\nimport { ClrForm } from './form';\nimport { ClrLayout } from './layout';\nimport { ClrControlContainer } from './control-container';\nimport { ClrControl } from './control';\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule],\n  declarations: [\n    ClrLabel,\n    ClrControlError,\n    ClrControlHelper,\n    ClrIfError,\n    ClrForm,\n    ClrLayout,\n    ClrControlContainer,\n    ClrControl,\n  ],\n  exports: [\n    ClrLabel,\n    ClrControlError,\n    ClrControlHelper,\n    ClrIfError,\n    ClrForm,\n    ClrLayout,\n    ClrControlContainer,\n    ClrControl,\n  ],\n  entryComponents: [ClrControlContainer],\n})\nexport class ClrCommonFormsModule {}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, OnInit, ContentChild, Inject, InjectionToken, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ClrLabel } from '../common/label';\n\nexport const IS_TOGGLE = new InjectionToken<BehaviorSubject<boolean>>('IS_TOGGLE');\nexport function isToggleFactory() {\n  return new BehaviorSubject<boolean>(false);\n}\nexport const IS_TOGGLE_PROVIDER = { provide: IS_TOGGLE, useFactory: isToggleFactory };\n\n@Component({\n  selector: 'clr-checkbox-wrapper,clr-toggle-wrapper',\n  template: `\n    <ng-content select=\"[clrCheckbox],[clrToggle]\"></ng-content>\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label\"></label>\n  `,\n  host: {\n    '[class.clr-checkbox-wrapper]': '!toggle',\n    '[class.clr-toggle-wrapper]': 'toggle',\n  },\n  providers: [ControlIdService, IS_TOGGLE_PROVIDER],\n})\nexport class ClrCheckboxWrapper implements DynamicWrapper, OnInit, OnDestroy {\n  // We need both _dynamic for HostWrapper and ContentChild(ClrLabel) in cases where\n  // the user puts a radio inside a wrapper without a label, host wrapping doesn't apply\n  // but we'd still need to insert a label\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: true })\n  label: ClrLabel;\n  toggle = false;\n  private subscriptions: Subscription[] = [];\n\n  constructor(@Inject(IS_TOGGLE) toggleService: BehaviorSubject<boolean>) {\n    this.subscriptions.push(\n      toggleService.subscribe(state => {\n        this.toggle = state;\n      })\n    );\n  }\n\n  ngOnInit() {\n    if (this.label) {\n      this.label.disableGrid();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Renderer2, ElementRef, Injector, Self, Optional, ViewContainerRef, Attribute } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { ClrCheckboxWrapper, IS_TOGGLE } from './checkbox-wrapper';\nimport { WrappedFormControl } from '../common/wrapped-control';\n\n/**\n * This implements both the clrCheckbox and clrToggle functionality, since they are both just checkboxes with different\n * visual styling. The challenge is that the container needs to know which selector was used, which the @Attribute\n * decorator gets for us to determine if the toggle is used, and emits a value to the wrapper container to tell it\n * there is a toggle switch instead.\n */\n@Directive({ selector: '[clrCheckbox],[clrToggle]' })\nexport class ClrCheckbox extends WrappedFormControl<ClrCheckboxWrapper> {\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef,\n    @Attribute('clrToggle') private toggle: string\n  ) {\n    super(vcr, ClrCheckboxWrapper, injector, control, renderer, el);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    const toggleService = this.getProviderFromContainer<BehaviorSubject<boolean>>(IS_TOGGLE, null);\n\n    if (toggleService && this.toggle !== null) {\n      toggleService.next(true);\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-checkbox-container,clr-toggle-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [class.clr-control-inline]=\"clrInline\" [ngClass]=\"controlClass()\">\n      <ng-content select=\"clr-checkbox-wrapper,clr-toggle-wrapper\"></ng-content>\n      <div class=\"clr-subtext-wrapper\">\n        <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n        <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n      </div>\n    </div>\n  `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [NgControlService, ControlClassService, IfErrorService],\n})\nexport class ClrCheckboxContainer extends ClrAbstractContainer {\n  private inline = false;\n  // private formGroup: AbstractControl;\n\n  /*\n   * Here we want to support the following cases\n   * clrInline - true by presence\n   * clrInline=\"true|false\" - unless it is explicitly false, strings are considered true\n   * [clrInline]=\"true|false\" - expect a boolean\n   */\n  @Input()\n  set clrInline(value: boolean | string) {\n    if (typeof value === 'string') {\n      this.inline = value === 'false' ? false : true;\n    } else {\n      this.inline = !!value;\n    }\n  }\n  get clrInline() {\n    return this.inline;\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrCheckbox } from './checkbox';\nimport { ClrCheckboxContainer } from './checkbox-container';\nimport { ClrCheckboxWrapper } from './checkbox-wrapper';\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrCommonFormsModule, ClrHostWrappingModule],\n  declarations: [ClrCheckbox, ClrCheckboxContainer, ClrCheckboxWrapper],\n  exports: [ClrCommonFormsModule, ClrCheckbox, ClrCheckboxContainer, ClrCheckboxWrapper],\n  entryComponents: [ClrCheckboxWrapper],\n})\nexport class ClrCheckboxModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nlet activeCounter = 0;\n\nexport const IF_ACTIVE_ID = new InjectionToken<number>('IF_ACTIVE_ID');\n\nexport function tokenFactory() {\n  return ++activeCounter;\n}\n\nexport const IF_ACTIVE_ID_PROVIDER = {\n  provide: IF_ACTIVE_ID,\n  useFactory: tokenFactory,\n};\n\n@Injectable()\n\n/*********\n * @class IfActiveService\n *\n * @description\n * An injectable service used by IfActive structural directives and the components that implement IfActive in their\n * templates. It holds the value of the current state and provides an Observable that both the directive and the\n * implementing component can subscribe to in order to take action on current value changes.\n *\n */\nexport class IfActiveService {\n  /********\n   * @property _currentChange\n   *\n   * @description\n   * A RXJS Subject that updates and provides subscriptions to for the current current state of a component template\n   * implemting the IfActive structural directive.\n   *\n   */\n  private _currentChange: Subject<number> = new Subject<number>();\n\n  /*********\n   * @property _current\n   *\n   * @description\n   * A property holding the current value for current/closed state of an IfActive structural directive.\n   */\n  private _current: number;\n\n  /*********\n   *\n   * @description\n   * A getter function that provides an observable for the _current Subject.\n   *\n   */\n  public get currentChange(): Observable<number> {\n    return this._currentChange.asObservable();\n  }\n\n  /*********\n   *\n   * @description\n   * A setter function that updates the current state of _current for this instance of IfActive structural directive.\n   * And, broadcasts the new value to all subscribers.\n   *\n   * @param value\n   */\n  public set current(value: number) {\n    if (this._current !== value) {\n      this._current = value;\n      this._currentChange.next(value);\n    }\n  }\n\n  /*********\n   *\n   * @description\n   * A getter that returns the current value of this IfActive instance.\n   * @returns\n   */\n  public get current(): number {\n    return this._current;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IF_ACTIVE_ID, IfActiveService } from './if-active.service';\n\n@Directive({ selector: '[clrIfActive]' })\n\n/**********\n *\n * @class ClrIfActive\n *\n * @description\n * A structural directive that controls whether or not the associated TemplateRef is instantiated or not.\n * It makes use of a Component instance level service: IfActiveService to maintain state between itself and\n * the component using it in the component template.\n *\n */\nexport class ClrIfActive implements OnDestroy {\n  private subscription: Subscription;\n  private wasActive: boolean = false;\n\n  constructor(\n    private ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) private id: number,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    this.checkAndUpdateView(ifActiveService.current);\n\n    this.subscription = this.ifActiveService.currentChange.subscribe(newCurrentId => {\n      this.checkAndUpdateView(newCurrentId);\n    });\n  }\n\n  private checkAndUpdateView(currentId: number) {\n    const isNowActive = currentId === this.id;\n    // only emit if the new active state is changed since last time.\n    if (isNowActive !== this.wasActive) {\n      this.updateView(isNowActive);\n      this.activeChange.emit(isNowActive);\n      this.wasActive = isNowActive;\n    }\n  }\n\n  /*********\n   *\n   * @description\n   * A setter that updates IfActiveService.active with value.\n   *\n   * @param value\n   */\n  @Input('clrIfActive')\n  public set active(value: boolean) {\n    if (value) {\n      this.ifActiveService.current = this.id;\n    }\n  }\n\n  /**********\n   * @property activeChange\n   *\n   * @description\n   * An event emitter that emits when the active property is set to allow for 2way binding when the directive is\n   * used with de-structured / de-sugared syntax.\n   *\n   */\n  @Output('clrIfActiveChange') activeChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /********\n   *\n   * @description\n   * A getter that returns the current IfActiveService.active value.\n   */\n  public get active() {\n    return this.ifActiveService.current === this.id;\n  }\n\n  /*********\n   *\n   * @description\n   * Function that takes a any value and either created an embedded view for the associated ViewContainerRef or,\n   * Clears all views from the ViewContainerRef\n   * @param value\n   */\n  public updateView(value: boolean) {\n    if (value) {\n      this.container.createEmbeddedView(this.template);\n    } else {\n      this.container.clear();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, EventEmitter, Input, OnDestroy, Output, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrPopoverToggleService } from '../popover/providers/popover-toggle.service';\n\n@Directive({ selector: '[clrIfOpen]' })\n\n/**********\n *\n * @class ClrIfOpen\n *\n * @description\n * A structural directive that controls whether or not the associated TemplateRef is instantiated or not.\n * It makes use of a Component instance level service: ClrPopoverToggleService to maintain state between itself and the component\n * using it in the component template.\n *\n */\nexport class ClrIfOpen implements OnDestroy {\n  private subscription: Subscription;\n\n  /*********\n   *\n   * @description\n   * A setter that updates ClrPopoverToggleService.open with value.\n   *\n   * @param value\n   */\n  @Input('clrIfOpen')\n  public set open(value: boolean) {\n    this.toggleService.open = value;\n  }\n\n  /**********\n   * @property openChange\n   *\n   * @description\n   * An event emitter that emits when the open property is set to allow for 2way binding when the directive is\n   * used with de-structured / de-sugared syntax.\n   */\n  @Output('clrIfOpenChange') openChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /********\n   *\n   * @description\n   * A getter that returns the current ClrPopoverToggleService.open value.\n   *\n   */\n  public get open() {\n    return this.toggleService.open;\n  }\n\n  constructor(\n    private toggleService: ClrPopoverToggleService,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    this.subscription = this.toggleService.openChange.subscribe(change => {\n      this.updateView(change);\n      this.openChange.emit(change);\n    });\n  }\n\n  /*********\n   *\n   * @description\n   * Function that takes a boolean value and either created an embedded view for the associated ViewContainerRef or,\n   * Clears all views from the ViewContainerRef\n   * @param value\n   */\n  public updateView(value: boolean) {\n    if (value) {\n      this.container.createEmbeddedView(this.template);\n    } else {\n      this.container.clear();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { LoadingListener } from '../loading/loading-listener';\nimport { ClrLoadingState } from '../loading/loading';\n\n@Injectable()\nexport class IfExpandService implements LoadingListener {\n  public expandable: number = 0;\n\n  protected _loading: boolean = false;\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  set loading(value: boolean) {\n    value = !!value;\n    if (value !== this._loading) {\n      this._loading = value;\n    }\n  }\n\n  protected _expanded: boolean = false;\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  set expanded(value: boolean) {\n    value = !!value;\n    if (value !== this._expanded) {\n      this._expanded = value;\n      this._expandChange.next(value);\n    }\n  }\n\n  public toggle() {\n    this.expanded = !this._expanded;\n  }\n\n  protected _expandChange: Subject<boolean> = new Subject<boolean>();\n  public get expandChange(): Observable<boolean> {\n    return this._expandChange.asObservable();\n  }\n\n  loadingStateChange(state: ClrLoadingState): void {\n    switch (state) {\n      case ClrLoadingState.LOADING:\n        this.loading = true;\n        break;\n      default:\n        this.loading = false;\n        break;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from './if-expanded.service';\n\n@Directive({ selector: '[clrIfExpanded]' })\nexport class ClrIfExpanded implements OnInit, OnDestroy {\n  private _expanded: boolean = false;\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  @Input('clrIfExpanded')\n  set expanded(value: boolean) {\n    if (typeof value === 'boolean') {\n      this.expand.expanded = value;\n      this._expanded = value;\n    }\n  }\n\n  @Output('clrIfExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  constructor(\n    @Optional() private template: TemplateRef<any>,\n    private container: ViewContainerRef,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private expand: IfExpandService\n  ) {\n    expand.expandable++;\n    this._subscriptions.push(\n      expand.expandChange.subscribe(() => {\n        this.updateView();\n        this.expandedChange.emit(this.expand.expanded);\n      })\n    );\n  }\n\n  /**\n   * Subscriptions to all the services and queries changes\n   */\n  private _subscriptions: Subscription[] = [];\n\n  private updateView() {\n    if (this.expand.expanded && this.container.length !== 0) {\n      return;\n    }\n    if (this.template) {\n      if (this.expand.expanded) {\n        // Should we pass a context? I don't see anything useful to pass right now,\n        // but we can come back to it in the future as a solution for additional features.\n        this.container.createEmbeddedView(this.template);\n      } else {\n        // TODO: Move when we move the animation logic to Datagrid Row Expand\n        // We clear before the animation is over. Not ideal, but doing better would involve a much heavier\n        // process for very little gain. Once Angular animations are dynamic enough, we should be able to\n        // get the optimal behavior.\n        this.container.clear();\n      }\n    } else {\n      try {\n        // If we don't have a template ref, we fallback to a crude display: none for now.\n        if (this.expand.expanded) {\n          this.renderer.setStyle(this.el.nativeElement, 'display', null);\n        } else {\n          this.renderer.setStyle(this.el.nativeElement, 'display', 'none');\n        }\n      } catch (e) {\n        // We catch the case where clrIfExpanded was put on a non-DOM element, and we just do nothing\n      }\n    }\n  }\n\n  ngOnInit() {\n    this.updateView();\n  }\n\n  ngOnDestroy() {\n    this.expand.expandable--;\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIfActive } from './if-active.directive';\nimport { ClrIfOpen } from './if-open.directive';\nimport { ClrIfExpanded } from './if-expanded.directive';\n\nexport const CONDITIONAL_DIRECTIVES: Type<any>[] = [ClrIfActive, ClrIfOpen, ClrIfExpanded];\n\n@NgModule({ imports: [CommonModule], declarations: [CONDITIONAL_DIRECTIVES], exports: [CONDITIONAL_DIRECTIVES] })\nexport class ClrConditionalModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { FocusTrapDirective } from './focus-trap.directive';\n\n@Injectable({ providedIn: 'root' })\nexport class FocusTrapTracker {\n  private _previousFocusTraps: FocusTrapDirective[] = [];\n  private _current: FocusTrapDirective;\n\n  get current(): FocusTrapDirective {\n    return this._current;\n  }\n\n  set current(value: FocusTrapDirective) {\n    this._previousFocusTraps.push(this._current);\n    this._current = value;\n  }\n\n  get nbFocusTrappers(): number {\n    return this._previousFocusTraps.length;\n  }\n\n  activatePreviousTrapper() {\n    this._current = this._previousFocusTraps.pop();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  PLATFORM_ID,\n  Renderer2,\n} from '@angular/core';\n\nimport { FocusTrapTracker } from './focus-trap-tracker.service';\n\ninterface FocusTrapConfig {\n  strict: boolean;\n}\n\n@Directive({ selector: '[clrFocusTrap]' })\nexport class FocusTrapDirective implements AfterViewInit, OnDestroy {\n  private previousActiveElement: any;\n  private previousTrappedActiveElement: any;\n  private localFocusEscaped = false;\n  private document: Document;\n  private parentElement: Element;\n\n  private topReboundEl: any;\n  private bottomReboundEl: any;\n\n  constructor(\n    private el: ElementRef,\n    private injector: Injector,\n    private focusTrapsTracker: FocusTrapTracker,\n    private renderer: Renderer2,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.document = this.injector.get(DOCUMENT);\n    this.focusTrapsTracker.current = this;\n\n    this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n  }\n\n  private _config: FocusTrapConfig = {\n    strict: true,\n  };\n  @Input('clrFocusTrap')\n  set config(config: FocusTrapConfig) {\n    this._config = Object.assign(this._config, config);\n  }\n\n  @HostListener('document:focusin', ['$event'])\n  onFocusIn(event: any) {\n    if (this.focusTrapsTracker.current !== this || !isPlatformBrowser(this.platformId) || this.localFocusEscaped) {\n      return;\n    }\n    const nativeElement: HTMLElement = this.el.nativeElement;\n    if (this._config.strict && event.target && !nativeElement.contains(event.target)) {\n      // When the focus trap is global, always steal focus back if it goes outside\n      nativeElement.focus();\n    } else if (event.target === this.bottomReboundEl && nativeElement.contains(this.previousTrappedActiveElement)) {\n      // When the focus trap is local, if the user navigates via keyboard to the end element from within the trap, move to top\n      nativeElement.focus();\n    } else if (event.target === this.topReboundEl) {\n      // When the focus trap is local, if the user navigates via keyboard back to start element from within the trap, move to bottom\n      // @TODO implement an acceptable solution to SHIFT+TAB navigation\n    } else if (event.target !== nativeElement && !nativeElement.contains(event.target)) {\n      // If a user has escaped the trap using the mouse\n      // relax, don't do it, when you want to go to it, living those dreams, scheme those schemes, hit me with those laser beams\n      this.localFocusEscaped = true;\n    }\n    // Track the last focused item, so we can check\n    this.previousTrappedActiveElement = event.target;\n  }\n\n  private createFocusableOffScreenEl(): any {\n    // Not using Renderer2's createElement method because that leads to DOM leakage.\n    // https://github.com/angular/angular/issues/26954\n    const offScreenSpan = this.document.createElement('span');\n    this.renderer.setAttribute(offScreenSpan, 'tabindex', '0');\n    this.renderer.addClass(offScreenSpan, 'offscreen-focus-rebounder');\n\n    return offScreenSpan;\n  }\n\n  private addReboundEls() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.topReboundEl = this.createFocusableOffScreenEl();\n      this.bottomReboundEl = this.createFocusableOffScreenEl();\n      const hostElement = this.el.nativeElement;\n      // Add reboundBeforeTrapEl right outside of host element\n      this.renderer.insertBefore(hostElement.parentElement, this.topReboundEl, hostElement);\n      // Add reboundAfterTrapEl right after host element\n      if (hostElement.nextSibling) {\n        this.renderer.insertBefore(hostElement.parentNode, this.bottomReboundEl, hostElement.nextSibling);\n      } else {\n        this.renderer.appendChild(hostElement.parentNode, this.bottomReboundEl);\n      }\n    }\n  }\n\n  private removeReboundEls() {\n    if (isPlatformBrowser(this.platformId) && this.topReboundEl && this.bottomReboundEl) {\n      this.parentElement.removeChild(this.topReboundEl);\n      this.parentElement.removeChild(this.bottomReboundEl);\n      // These are here to to make sure that\n      // we completely delete all traces of the removed DOM objects.\n      delete this.topReboundEl;\n      delete this.bottomReboundEl;\n    }\n  }\n\n  public setPreviousFocus(): void {\n    if (this.previousActiveElement && this.previousActiveElement.focus) {\n      this.previousActiveElement.focus();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.previousActiveElement = <HTMLElement>this.document.activeElement;\n      this.parentElement = this.el.nativeElement.parentElement;\n    }\n\n    this.addReboundEls();\n  }\n\n  ngOnDestroy() {\n    this.removeReboundEls();\n    this.setPreviousFocus();\n    this.focusTrapsTracker.activatePreviousTrapper();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FocusTrapDirective } from './focus-trap.directive';\n\nexport const FOCUS_TRAP_DIRECTIVES: Type<any>[] = [FocusTrapDirective];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FOCUS_TRAP_DIRECTIVES],\n  exports: [FOCUS_TRAP_DIRECTIVES],\n})\nexport class ClrFocusTrapModule {}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport const UP_ARROW: number = 38;\nexport const DOWN_ARROW: number = 40;\nexport const RIGHT_ARROW: number = 39;\nexport const LEFT_ARROW: number = 37;\nexport const ENTER: number = 13;\nexport const SPACE: number = 32;\nexport const TAB: number = 9;\nexport const ESC: number = 27;\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * This is the en-001 short locale date format. Setting as default.\n */\nexport const DEFAULT_LOCALE_FORMAT: string = 'dd/MM/y';\n\n// https://en.wikipedia.org/wiki/Date_format_by_country\nexport const LITTLE_ENDIAN_REGEX: RegExp = /d+.+m+.+y+/i;\nexport const MIDDLE_ENDIAN_REGEX: RegExp = /m+.+d+.+y+/i;\n// No need for BIG_ENDIAN_REGEX because anything that doesn't satisfy the above 2\n// is automatically BIG_ENDIAN\n\nexport const DELIMITER_REGEX: RegExp = /d+|m+|y+/i;\n\nexport const USER_INPUT_REGEX: RegExp = /\\d+/g;\n\nexport const MOBILE_USERAGENT_REGEX: RegExp = /Mobi/i;\n\nexport const RTL_REGEX: RegExp = /\\u200f/g;\n\nexport const YEAR: string = 'YYYY';\nexport const MONTH: string = 'MM';\nexport const DATE: string = 'DD';\n\nexport type FormatType = 'LITTLE_ENDIAN' | 'MIDDLE_ENDIAN' | 'BIG_ENDIAN';\n\nexport type InputDateDisplayFormat = {\n  readonly name: FormatType;\n  readonly format: [string, string, string];\n};\n\nexport const LITTLE_ENDIAN: InputDateDisplayFormat = {\n  name: 'LITTLE_ENDIAN',\n  format: [DATE, MONTH, YEAR],\n};\n\nexport const MIDDLE_ENDIAN: InputDateDisplayFormat = {\n  name: 'MIDDLE_ENDIAN',\n  format: [MONTH, DATE, YEAR],\n};\n\nexport const BIG_ENDIAN: InputDateDisplayFormat = {\n  name: 'BIG_ENDIAN',\n  format: [YEAR, MONTH, DATE],\n};\n\nexport const NO_OF_DAYS_IN_A_WEEK: number = 7;\nexport const NO_OF_ROWS_IN_CALENDAR_VIEW: number = 6;\nexport const TOTAL_DAYS_IN_DAYS_VIEW: number = NO_OF_DAYS_IN_A_WEEK * NO_OF_ROWS_IN_CALENDAR_VIEW;\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { WeekDay } from '@angular/common';\n\n/**\n * Returns the number of days in a month.\n */\nexport function getNumberOfDaysInTheMonth(year: number, month: number): number {\n  // If we go to the next month, but use a day of 0, it returns the last day from the previous month\n  return new Date(year, month + 1, 0).getDate();\n}\n\n/**\n * Returns the day for the corresponding date where 0 represents Sunday.\n */\nexport function getDay(year: number, month: number, date: number): WeekDay {\n  return new Date(year, month, date).getDay();\n}\n\n/**\n * Takes in a year and if it is a 2 digit year, returns the corresponding 4 digit year.\n * Window of 80 years before and 20 years after the present year.\n * Credit: https://github.com/globalizejs/globalize/blob/e1b31cd6a4f1cff75b185b68b7a32220aac5196f/src/date/parse.js\n */\nexport function parseToFourDigitYear(year: number): number {\n  if (year > 9999 || (year > 100 && year < 999) || year < 10) {\n    return -1;\n  }\n  if (year > 999) {\n    return year;\n  }\n  const currYear: number = new Date().getFullYear();\n  const century: number = Math.floor(currYear / 100) * 100;\n  let result: number = year + century;\n  if (result > currYear + 20) {\n    result = result - 100;\n  }\n  return result;\n}\n\nexport function datesAreEqual(date1: Date, date2: Date) {\n  if (date1 instanceof Date && date2 instanceof Date) {\n    return (\n      date1.getFullYear() === date2.getFullYear() &&\n      date1.getMonth() === date2.getMonth() &&\n      date1.getDate() === date2.getDate()\n    );\n  } else {\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DayModel } from './day.model';\n\nexport class DayViewModel {\n  constructor(\n    public dayModel: DayModel,\n    public isTodaysDate: boolean = false,\n    public isExcluded: boolean = false,\n    public isDisabled: boolean = false,\n    public isSelected: boolean = false,\n    public isFocusable: boolean = false\n  ) {}\n\n  /**\n   * Gets the tab index based on the isFocusable flag.\n   */\n  get tabIndex(): number {\n    return this.isFocusable ? 0 : -1;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class DayModel {\n  constructor(public readonly year: number, public readonly month: number, public readonly date: number) {}\n\n  /**\n   * Checks if the passed CalendarDate is equal to itself.\n   */\n  isEqual(day: DayModel) {\n    if (day) {\n      return this.year === day.year && this.month === day.month && this.date === day.date;\n    }\n    return false;\n  }\n\n  toDate(): Date {\n    return new Date(this.year, this.month, this.date);\n  }\n\n  /**\n   * Returns a new DayModel which is incremented based on the value passed.\n   */\n  incrementBy(value: number): DayModel {\n    // Creating new Javascript Date object to increment because\n    // it will automatically take care of switching to next or previous\n    // months & years without we having to worry about it.\n    const date: Date = new Date(this.year, this.month, this.date + value);\n    return new DayModel(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  /**\n   * Clones the current day model.\n   */\n  clone(): DayModel {\n    return new DayModel(this.year, this.month, this.date);\n  }\n\n  toComparisonString(): string {\n    return `${this.year}${this.pad(this.month)}${this.pad(this.date)}`;\n  }\n\n  private pad(num: number): string {\n    return num < 10 ? `0${num}` : `${num}`;\n  }\n\n  public toDateString(): string {\n    return this.toDate().toLocaleDateString();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NO_OF_DAYS_IN_A_WEEK, NO_OF_ROWS_IN_CALENDAR_VIEW, TOTAL_DAYS_IN_DAYS_VIEW } from '../utils/constants';\nimport { getDay } from '../utils/date-utils';\n\nimport { CalendarModel } from './calendar.model';\nimport { DayViewModel } from './day-view.model';\nimport { DayModel } from './day.model';\nimport { DateRange } from '../interfaces/date-range.interface';\n\nexport class CalendarViewModel {\n  constructor(\n    public calendar: CalendarModel,\n    private selectedDay: DayModel,\n    private focusableDay: DayModel,\n    private today: DayModel,\n    public firstDayOfWeek: number,\n    private excludedDates: DateRange\n  ) {\n    this.initializeCalendarView();\n  }\n\n  private currMonthDayViews: DayViewModel[] = [];\n\n  private _calendarView: DayViewModel[][];\n\n  /**\n   * DayViewModel matrix. Size 6x7\n   */\n  get calendarView(): DayViewModel[][] {\n    return this._calendarView;\n  }\n\n  /**\n   * Generates a 6x7 matrix of DayViewModel based on the Calendar.\n   * The 6x7 matrix is structured according to the first day of the week.\n   * 6 rows to accommodate months which might have dates spanning over 6 weeks.\n   * 7 columns because there are 7 days in a week :P :D\n   */\n  private initializeCalendarView(): void {\n    // Generate prev and next month calendar models.\n    const prevMonthCalendar: CalendarModel = this.calendar.previousMonth();\n    const nextMonthCalendar: CalendarModel = this.calendar.nextMonth();\n\n    // Get no of days from prev and next months.\n    const daysFromPrevMonthInCalView: number = this.numDaysFromPrevMonthInCalView(\n      this.calendar.year,\n      this.calendar.month\n    );\n    const daysFromNextMonthInCalView: number =\n      TOTAL_DAYS_IN_DAYS_VIEW - (this.calendar.days.length + daysFromPrevMonthInCalView);\n\n    // Generate prev, curr and next day view models\n    let prevMonthDayViews: DayViewModel[] = [];\n    let nextMonthDayViews: DayViewModel[] = [];\n\n    if (daysFromPrevMonthInCalView > 0) {\n      prevMonthDayViews = this.generateDayViewModels(\n        prevMonthCalendar.days.slice(-1 * daysFromPrevMonthInCalView),\n        true,\n        false\n      );\n    }\n\n    this.currMonthDayViews = this.generateDayViewModels(this.calendar.days, false, true);\n\n    if (daysFromNextMonthInCalView > 0) {\n      nextMonthDayViews = this.generateDayViewModels(\n        nextMonthCalendar.days.slice(0, daysFromNextMonthInCalView),\n        true,\n        false\n      );\n    }\n\n    // Generate calendar view and initialize flags\n    this._calendarView = this.generateCalendarView(prevMonthDayViews, this.currMonthDayViews, nextMonthDayViews);\n    this.initializeSelectedDay();\n    this.initializeFocusableDay();\n  }\n\n  private isDateExcluded(date: DayModel) {\n    const { minDate, maxDate }: DateRange = this.excludedDates;\n    const from = minDate.toComparisonString();\n    const to = maxDate.toComparisonString();\n    const today = date.toComparisonString();\n\n    return !(today >= from && today <= to);\n  }\n\n  /**\n   * Generates a DayViewModel array based on the DayModel passed\n   */\n  private generateDayViewModels(days: DayModel[], isExcluded: boolean, isCurrentCalendar: boolean): DayViewModel[] {\n    const dayViews: DayViewModel[] = days.map(day => {\n      return new DayViewModel(day, false, isExcluded, this.isDateExcluded(day), false, false);\n    });\n    if (isCurrentCalendar && this.calendar.isDayInCalendar(this.today)) {\n      dayViews[this.today.date - 1].isTodaysDate = true;\n    }\n    return dayViews;\n  }\n\n  /**\n   * Gets the first day of the current month to figure out how many dates of previous month\n   * are needed to complete the Calendar View based on the first day of the week.\n   * eg: Assuming locale en-US, the first day of the week is Sunday,\n   * if first day of the current month lands on Wednesday, then\n   * (this.getDay function would return 3 since\n   * first day of the week is 0), we need the 3 days from the previous month.\n   */\n  private numDaysFromPrevMonthInCalView(currentYear: number, currentMonth: number): number {\n    const firstDayOfCurrMonth: number = getDay(currentYear, currentMonth, 1);\n\n    if (firstDayOfCurrMonth >= this.firstDayOfWeek) {\n      return firstDayOfCurrMonth - this.firstDayOfWeek;\n    } else {\n      return NO_OF_DAYS_IN_A_WEEK + firstDayOfCurrMonth - this.firstDayOfWeek;\n    }\n  }\n\n  /**\n   * Checks if the Day passed is in the CalendarView.\n   */\n  private isDayInCalendarView(day: DayModel): boolean {\n    if (!this.calendar.isDayInCalendar(day)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Using the DayViewModels from the previous, current and next month, this function\n   * generates the CalendarView.\n   */\n  private generateCalendarView(prev: DayViewModel[], curr: DayViewModel[], next: DayViewModel[]): DayViewModel[][] {\n    const combinationArr: DayViewModel[] = [...prev, ...curr, ...next];\n\n    const calendarView: DayViewModel[][] = [];\n    for (let i = 0; i < NO_OF_ROWS_IN_CALENDAR_VIEW; i++) {\n      calendarView[i] = combinationArr.slice(i * NO_OF_DAYS_IN_A_WEEK, (i + 1) * NO_OF_DAYS_IN_A_WEEK);\n    }\n    return calendarView;\n  }\n\n  /**\n   * Initialize the selected day if the day is in the calendar.\n   */\n  private initializeSelectedDay(): void {\n    if (this.selectedDay && this.isDayInCalendarView(this.selectedDay)) {\n      this.currMonthDayViews[this.selectedDay.date - 1].isSelected = true;\n    }\n  }\n\n  /**\n   * Initializes the focusable day if the day is in the calendar. If focusable day is not set, then\n   * we check for the selected day. If selected day is not set then check if today is in the current\n   * calendar. If not then just set the 15th of the current calendar month.\n   */\n  private initializeFocusableDay(): void {\n    if (this.focusableDay && this.isDayInCalendarView(this.focusableDay)) {\n      this.setFocusableFlag(this.focusableDay, true);\n    } else if (this.selectedDay && this.isDayInCalendarView(this.selectedDay)) {\n      this.setFocusableFlag(this.selectedDay, true);\n      this.focusableDay = this.selectedDay.clone();\n    } else if (this.isDayInCalendarView(this.today)) {\n      this.setFocusableFlag(this.today, true);\n      this.focusableDay = this.today.clone();\n    } else {\n      this.focusableDay = new DayModel(this.calendar.year, this.calendar.month, 15);\n      this.setFocusableFlag(this.focusableDay, true);\n    }\n  }\n\n  private setFocusableFlag(day: DayModel, flag: boolean): void {\n    if (day) {\n      this.currMonthDayViews[day.date - 1].isFocusable = flag;\n    }\n  }\n\n  /**\n   * Updates the focusable day in the calendar.\n   */\n  updateFocusableDay(day: DayModel): void {\n    this.setFocusableFlag(this.focusableDay, false);\n    this.setFocusableFlag(day, true);\n    this.focusableDay = day;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { getNumberOfDaysInTheMonth } from '../utils/date-utils';\n\nimport { DayModel } from './day.model';\n\nexport class CalendarModel {\n  constructor(public readonly year: number, public readonly month: number) {\n    this.initializeDaysInCalendar();\n  }\n\n  days: DayModel[];\n\n  /**\n   * Populates the days array with the DayModels in the current Calendar.\n   */\n  private initializeDaysInCalendar(): void {\n    const noOfDaysInCalendar: number = getNumberOfDaysInTheMonth(this.year, this.month);\n    this.days = Array(noOfDaysInCalendar)\n      .fill(null)\n      .map((date, index) => {\n        return new DayModel(this.year, this.month, index + 1);\n      });\n  }\n\n  /**\n   * Checks if the calendar passed is equal to the current calendar.\n   */\n  isEqual(calendar: CalendarModel) {\n    if (calendar) {\n      return this.year === calendar.year && this.month === calendar.month;\n    }\n    return false;\n  }\n\n  /**\n   * Checks if a DayModel is in the Calendar\n   */\n  isDayInCalendar(day: DayModel): boolean {\n    if (day) {\n      return this.year === day.year && this.month === day.month;\n    }\n    return false;\n  }\n\n  /**\n   * Returns CalendarModel of the previous month.\n   */\n  previousMonth(): CalendarModel {\n    if (this.month === 0) {\n      return new CalendarModel(this.year - 1, 11);\n    } else {\n      return new CalendarModel(this.year, this.month - 1);\n    }\n  }\n\n  /**\n   * Returns CalendarModel of the next month.\n   */\n  nextMonth(): CalendarModel {\n    if (this.month === 11) {\n      return new CalendarModel(this.year + 1, 0);\n    } else {\n      return new CalendarModel(this.year, this.month + 1);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { CalendarModel } from '../model/calendar.model';\nimport { DayModel } from '../model/day.model';\n\n/**\n * This service is responsible for:\n * 1. Initializing the displayed calendar.\n * 2. Moving the calendar to the next, previous or current months\n * 3. Managing the focused and selected day models.\n */\n@Injectable()\nexport class DateNavigationService {\n  private _displayedCalendar: CalendarModel;\n\n  get displayedCalendar(): CalendarModel {\n    return this._displayedCalendar;\n  }\n\n  // not a setter because i want this to remain private\n  private setDisplayedCalendar(value: CalendarModel) {\n    if (!this._displayedCalendar.isEqual(value)) {\n      this._displayedCalendar = value;\n      this._displayedCalendarChange.next();\n    }\n  }\n\n  /**\n   * Variable to store today's date.\n   */\n  private _todaysFullDate: Date = new Date();\n  private _today: DayModel;\n\n  private initializeTodaysDate(): void {\n    this._todaysFullDate = new Date();\n    this._today = new DayModel(\n      this._todaysFullDate.getFullYear(),\n      this._todaysFullDate.getMonth(),\n      this._todaysFullDate.getDate()\n    );\n  }\n\n  get today(): DayModel {\n    return this._today;\n  }\n\n  public selectedDay: DayModel;\n\n  private _selectedDayChange: Subject<DayModel> = new Subject<DayModel>();\n\n  get selectedDayChange(): Observable<DayModel> {\n    return this._selectedDayChange.asObservable();\n  }\n\n  /**\n   * Notifies that the selected day has changed so that the date can be emitted to the user.\n   * Note: Only to be called from day.ts\n   */\n  notifySelectedDayChanged(dayModel: DayModel) {\n    this.selectedDay = dayModel;\n    this._selectedDayChange.next(dayModel);\n  }\n\n  public focusedDay: DayModel;\n\n  /**\n   * Initializes the calendar based on the selected day.\n   */\n  initializeCalendar(): void {\n    this.focusedDay = null; // Can be removed later on the store focus\n    this.initializeTodaysDate();\n    if (this.selectedDay) {\n      this._displayedCalendar = new CalendarModel(this.selectedDay.year, this.selectedDay.month);\n    } else {\n      this._displayedCalendar = new CalendarModel(this.today.year, this.today.month);\n    }\n  }\n\n  changeMonth(month: number): void {\n    this.setDisplayedCalendar(new CalendarModel(this._displayedCalendar.year, month));\n  }\n\n  changeYear(year: number): void {\n    this.setDisplayedCalendar(new CalendarModel(year, this._displayedCalendar.month));\n  }\n\n  /**\n   * Moves the displayed calendar to the next month.\n   */\n  moveToNextMonth(): void {\n    this.setDisplayedCalendar(this._displayedCalendar.nextMonth());\n  }\n\n  /**\n   * Moves the displayed calendar to the previous month.\n   */\n  moveToPreviousMonth(): void {\n    this.setDisplayedCalendar(this._displayedCalendar.previousMonth());\n  }\n\n  /**\n   * Moves the displayed calendar to the current month and year.\n   */\n  moveToCurrentMonth(): void {\n    if (!this.displayedCalendar.isDayInCalendar(this.today)) {\n      this.setDisplayedCalendar(new CalendarModel(this.today.year, this.today.month));\n    }\n    this._focusOnCalendarChange.next();\n  }\n\n  incrementFocusDay(value: number): void {\n    this.focusedDay = this.focusedDay.incrementBy(value);\n    if (this._displayedCalendar.isDayInCalendar(this.focusedDay)) {\n      this._focusedDayChange.next(this.focusedDay);\n    } else {\n      this.setDisplayedCalendar(new CalendarModel(this.focusedDay.year, this.focusedDay.month));\n    }\n    this._focusOnCalendarChange.next();\n  }\n\n  private _displayedCalendarChange: Subject<void> = new Subject<void>();\n\n  /**\n   * This observable lets the subscriber know that the displayed calendar has changed.\n   */\n  get displayedCalendarChange(): Observable<void> {\n    return this._displayedCalendarChange.asObservable();\n  }\n\n  private _focusOnCalendarChange: Subject<void> = new Subject<void>();\n\n  /**\n   * This observable lets the subscriber know that the focus should be applied on the calendar.\n   */\n  get focusOnCalendarChange(): Observable<void> {\n    return this._focusOnCalendarChange.asObservable();\n  }\n\n  private _focusedDayChange: Subject<DayModel> = new Subject<DayModel>();\n\n  /**\n   * This observable lets the subscriber know that the focused day in the displayed calendar has changed.\n   */\n  get focusedDayChange(): Observable<DayModel> {\n    return this._focusedDayChange.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, NgZone, PLATFORM_ID } from '@angular/core';\nimport { first, filter } from 'rxjs/operators';\n\n/**\n * This service focuses the day that is focusable in the calendar.\n */\n@Injectable()\nexport class DatepickerFocusService {\n  constructor(private _ngZone: NgZone, @Inject(PLATFORM_ID) private platformId: Object) {}\n\n  focusCell(elRef: ElementRef): void {\n    this._ngZone.runOutsideAngular(() => {\n      this.ngZoneIsStableInBrowser().subscribe(() => {\n        const focusEl = elRef.nativeElement.querySelector('[tabindex=\"0\"]');\n        if (focusEl) {\n          focusEl.focus();\n        }\n      });\n    });\n  }\n\n  focusInput(element: HTMLInputElement): void {\n    this._ngZone.runOutsideAngular(() => this.ngZoneIsStableInBrowser().subscribe(() => element.focus()));\n  }\n\n  elementIsFocused(element: HTMLInputElement) {\n    return isPlatformBrowser(this.platformId) && document.activeElement === element;\n  }\n\n  private ngZoneIsStableInBrowser() {\n    // Credit: Material: https://github.com/angular/material2/blob/master/src/lib/datepicker/calendar.ts\n    return this._ngZone.onStable.asObservable().pipe(first(), filter(() => isPlatformBrowser(this.platformId)));\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  FormatWidth,\n  FormStyle,\n  getLocaleDateFormat,\n  getLocaleDayNames,\n  getLocaleFirstDayOfWeek,\n  getLocaleMonthNames,\n  TranslationWidth,\n} from '@angular/common';\nimport { Inject, Injectable, LOCALE_ID } from '@angular/core';\nimport { ClrDayOfWeek } from '../interfaces/day-of-week.interface';\n\n/**\n * This service extracts the Angular CLDR data needed by the datepicker.\n */\n@Injectable()\nexport class LocaleHelperService {\n  constructor(@Inject(LOCALE_ID) public locale: string) {\n    this.initializeLocaleData();\n  }\n\n  private _firstDayOfWeek: number = 0;\n  private _localeDays: ReadonlyArray<ClrDayOfWeek>;\n  private _localeMonthsAbbreviated: ReadonlyArray<string>;\n  private _localeMonthsWide: ReadonlyArray<string>;\n  private _localeDateFormat: string;\n\n  get firstDayOfWeek(): number {\n    return this._firstDayOfWeek;\n  }\n\n  get localeDays(): ReadonlyArray<ClrDayOfWeek> {\n    return this._localeDays;\n  }\n\n  // leave for backward compatibility\n  get localeDaysNarrow(): ReadonlyArray<string> {\n    return this._localeDays.map(day => day.narrow);\n  }\n\n  get localeMonthsAbbreviated(): ReadonlyArray<string> {\n    return this._localeMonthsAbbreviated;\n  }\n\n  get localeMonthsWide(): ReadonlyArray<string> {\n    return this._localeMonthsWide;\n  }\n\n  get localeDateFormat(): string {\n    return this._localeDateFormat;\n  }\n\n  /**\n   * Initializes the locale data.\n   */\n  private initializeLocaleData(): void {\n    // Order in which these functions is called is very important.\n    this.initializeFirstDayOfWeek();\n    this.initializeLocaleDateFormat();\n    this.initializeLocaleMonthsAbbreviated();\n    this.initializeLocaleMonthsWide();\n    this.initializeLocaleDays();\n  }\n\n  /**\n   * Initialize day names based on the locale.\n   * eg: [{day: Sunday, narrow: S}, {day: Monday, narrow: M}...] for en-US.\n   */\n  private initializeLocaleDays(): void {\n    // Get locale day names starting with Sunday\n    const tempArr = [];\n    const tempWideArr: string[] = getLocaleDayNames(this.locale, FormStyle.Standalone, TranslationWidth.Wide).slice();\n    const tempNarrowArr: string[] = getLocaleDayNames(\n      this.locale,\n      FormStyle.Standalone,\n      TranslationWidth.Narrow\n    ).slice();\n    // Get first day of the week based on the locale\n    const firstDayOfWeek: number = this.firstDayOfWeek;\n    for (let i = 0; i < 7; i++) {\n      tempArr.push({ day: tempWideArr[i], narrow: tempNarrowArr[i] });\n    }\n    // Rearrange the tempArr to start with the first day of the week based on the locale.\n    if (firstDayOfWeek > 0) {\n      const prevDays: string[] = tempArr.splice(0, firstDayOfWeek);\n      tempArr.push(...prevDays);\n    }\n    this._localeDays = tempArr;\n  }\n\n  /**\n   * Initializes the array of month names in the TranslationWidth.Abbreviated format.\n   * e.g. `[Jan, Feb, ...]` for en-US\n   */\n  private initializeLocaleMonthsAbbreviated(): void {\n    this._localeMonthsAbbreviated = getLocaleMonthNames(\n      this.locale,\n      FormStyle.Standalone,\n      TranslationWidth.Abbreviated\n    ).slice();\n  }\n\n  /**\n   * Initializes the array of month names in the TranslationWidth.Wide format.\n   * e.g. `[January, February, ...]` for en-US\n   */\n  private initializeLocaleMonthsWide(): void {\n    this._localeMonthsWide = getLocaleMonthNames(this.locale, FormStyle.Standalone, TranslationWidth.Wide).slice();\n  }\n\n  /**\n   * Initializes the first day of the week based on the locale.\n   */\n  private initializeFirstDayOfWeek(): void {\n    this._firstDayOfWeek = getLocaleFirstDayOfWeek(this.locale);\n  }\n\n  private initializeLocaleDateFormat(): void {\n    this._localeDateFormat = getLocaleDateFormat(this.locale, FormatWidth.Short);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport {\n  BIG_ENDIAN,\n  DEFAULT_LOCALE_FORMAT,\n  DELIMITER_REGEX,\n  InputDateDisplayFormat,\n  LITTLE_ENDIAN,\n  LITTLE_ENDIAN_REGEX,\n  MIDDLE_ENDIAN,\n  MIDDLE_ENDIAN_REGEX,\n  RTL_REGEX,\n  USER_INPUT_REGEX,\n} from '../utils/constants';\nimport { getNumberOfDaysInTheMonth, parseToFourDigitYear } from '../utils/date-utils';\n\nimport { LocaleHelperService } from './locale-helper.service';\nimport { DateRange } from '../interfaces/date-range.interface';\nimport { DayModel } from '../model/day.model';\n\n@Injectable()\nexport class DateIOService {\n  public disabledDates: DateRange = {\n    // This is the default range. It approximates the beginning of time to the end of time.\n    // Unless a minDate or maxDate is set with the native HTML5 api the range is all dates\n    // TODO: turn this into an Array of min/max ranges that allow configuration of multiple ranges.\n    minDate: new DayModel(0, 0, 1),\n    maxDate: new DayModel(9999, 11, 31),\n  };\n  public cldrLocaleDateFormat: string = DEFAULT_LOCALE_FORMAT;\n  private localeDisplayFormat: InputDateDisplayFormat = LITTLE_ENDIAN;\n  private delimiters: [string, string] = ['/', '/'];\n\n  constructor(private _localeHelperService: LocaleHelperService) {\n    this.cldrLocaleDateFormat = this._localeHelperService.localeDateFormat;\n    this.initializeLocaleDisplayFormat();\n  }\n\n  public setMinDate(date: string): void {\n    // NOTE: I'm expecting consumers to pass one of four things here:\n    //       A proper date string(2019-11-11), null, undefined or empty string ('')\n    if (!date) {\n      // attribute binding was removed, reset back to the beginning of time\n      this.disabledDates.minDate = new DayModel(0, 0, 1);\n    } else {\n      const [year, month, day] = date.split('-').map(n => parseInt(n, 10));\n      this.disabledDates.minDate = new DayModel(year, month - 1, day);\n    }\n  }\n\n  public setMaxDate(date: string): void {\n    // NOTE: I'm expecting consumers to pass one of four things here:\n    //       A proper date string(2019-11-11), null, undefined or empty string ('')\n    if (!date) {\n      // attribute binding was removed, reset forward to the end of time\n      this.disabledDates.maxDate = new DayModel(9999, 11, 31);\n    } else {\n      const [year, month, day] = date.split('-').map(n => parseInt(n, 10));\n      this.disabledDates.maxDate = new DayModel(year, month - 1, day);\n    }\n  }\n\n  private initializeLocaleDisplayFormat(): void {\n    const format: string = this.cldrLocaleDateFormat.toLocaleLowerCase();\n    if (LITTLE_ENDIAN_REGEX.test(format)) {\n      this.localeDisplayFormat = LITTLE_ENDIAN;\n    } else if (MIDDLE_ENDIAN_REGEX.test(format)) {\n      this.localeDisplayFormat = MIDDLE_ENDIAN;\n    } else {\n      // everything else is set to BIG-ENDIAN FORMAT\n      this.localeDisplayFormat = BIG_ENDIAN;\n    }\n    this.extractDelimiters();\n  }\n\n  private extractDelimiters(): void {\n    if (this.cldrLocaleDateFormat) {\n      // Sanitize Date Format. Remove RTL characters.\n      // FIXME: When we support RTL, remove this and handle it correctly.\n      const localeFormat: string = this.cldrLocaleDateFormat.replace(RTL_REGEX, '');\n      const delimiters: string[] = localeFormat.split(DELIMITER_REGEX);\n\n      // NOTE: The split from the CLDR date format should always result\n      // in an arary with 4 elements. The 1st and the 2nd values are the delimiters\n      // we will use in order.\n      // Eg: \"dd/MM/y\".split(/d+|m+|y+/i) results in [\"\", \"/\", \"/\", \"\"]\n      if (delimiters && delimiters.length === 4) {\n        this.delimiters = [delimiters[1], delimiters[2]];\n      } else {\n        console.error('Unexpected date format received. Delimiters extracted: ', delimiters);\n      }\n    }\n  }\n\n  toLocaleDisplayFormatString(date: Date): string {\n    if (date) {\n      if (isNaN(date.getTime())) {\n        return '';\n      }\n      const dateNo: number = date.getDate();\n      const monthNo: number = date.getMonth() + 1;\n      const dateStr: string = dateNo > 9 ? dateNo.toString() : '0' + dateNo;\n      const monthStr: string = monthNo > 9 ? monthNo.toString() : '0' + monthNo;\n      if (this.localeDisplayFormat === LITTLE_ENDIAN) {\n        return dateStr + this.delimiters[0] + monthStr + this.delimiters[1] + date.getFullYear();\n      } else if (this.localeDisplayFormat === MIDDLE_ENDIAN) {\n        return monthStr + this.delimiters[0] + dateStr + this.delimiters[1] + date.getFullYear();\n      } else {\n        return date.getFullYear() + this.delimiters[0] + monthStr + this.delimiters[1] + dateStr;\n      }\n    }\n    return '';\n  }\n\n  get placeholderText(): string {\n    const format: [string, string, string] = this.localeDisplayFormat.format;\n    return format[0] + this.delimiters[0] + format[1] + this.delimiters[1] + format[2];\n  }\n\n  /**\n   * Checks if the month entered by the user is valid or not.\n   * Note: Month is 0 based.\n   */\n  private isValidMonth(month: number): boolean {\n    return month > -1 && month < 12;\n  }\n\n  /**\n   * Checks if the date is valid depending on the year and month provided.\n   */\n  private isValidDate(year: number, month: number, date: number): boolean {\n    return date > 0 && date <= getNumberOfDaysInTheMonth(year, month);\n  }\n\n  /**\n   * Validates the parameters provided and returns the date.\n   * If the parameters are not\n   * valid then return null.\n   * NOTE: (Month here is 1 based since the user has provided that as an input)\n   */\n  private validateAndGetDate(year: string, month: string, date: string): Date {\n    // I don't know whats wrong with the TS compiler. It throws an error if I write\n    // the below if statement. The error is:\n    // Operator '!==' cannot be applied to types '2' and '4'\n    // More info here: https://github.com/Microsoft/TypeScript/issues/12794#issuecomment-270342936\n    /*\n        if (year.length !== 2 || year.length !== 4) {\n            return null;\n        }\n        */\n\n    // Instead I have to write the logic like this x-(\n    const y: number = +year;\n    const m: number = +month - 1; // month is 0 based\n    const d: number = +date;\n    if (!this.isValidMonth(m) || !this.isValidDate(y, m, d)) {\n      return null;\n    }\n    const result: number = parseToFourDigitYear(y);\n    return result !== -1 ? new Date(result, m, d) : null;\n  }\n\n  getDateValueFromDateString(date: string): Date {\n    if (!date) {\n      return null;\n    }\n    const dateParts: string[] = date.match(USER_INPUT_REGEX);\n    if (!dateParts || dateParts.length !== 3) {\n      return null;\n    }\n    const [firstPart, secondPart, thirdPart] = dateParts;\n    if (this.localeDisplayFormat === LITTLE_ENDIAN) {\n      // secondPart is month && firstPart is date\n      return this.validateAndGetDate(thirdPart, secondPart, firstPart);\n    } else if (this.localeDisplayFormat === MIDDLE_ENDIAN) {\n      // firstPart is month && secondPart is date\n      return this.validateAndGetDate(thirdPart, firstPart, secondPart);\n    } else {\n      // secondPart is month && thirdPart is date\n      return this.validateAndGetDate(firstPart, secondPart, thirdPart);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, HostListener, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { CalendarViewModel } from './model/calendar-view.model';\nimport { CalendarModel } from './model/calendar.model';\nimport { DayModel } from './model/day.model';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { NO_OF_DAYS_IN_A_WEEK } from './utils/constants';\nimport { ClrDayOfWeek } from './interfaces/day-of-week.interface';\nimport { DateIOService } from './providers/date-io.service';\n\n@Component({ selector: 'clr-calendar', templateUrl: './calendar.html' })\nexport class ClrCalendar implements OnDestroy {\n  private _subs: Subscription[] = [];\n  constructor(\n    private _localeHelperService: LocaleHelperService,\n    private _dateNavigationService: DateNavigationService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _dateIOService: DateIOService,\n    private _elRef: ElementRef\n  ) {\n    this.generateCalendarView();\n    this.initializeSubscriptions();\n  }\n\n  /**\n   * Calendar View Model to generate the Calendar.\n   */\n  calendarViewModel: CalendarViewModel;\n\n  /**\n   * Gets the locale days according to the TranslationWidth.Narrow format.\n   */\n  get localeDays(): ReadonlyArray<ClrDayOfWeek> {\n    return this._localeHelperService.localeDays;\n  }\n\n  get calendar(): CalendarModel {\n    return this._dateNavigationService.displayedCalendar;\n  }\n\n  get selectedDay(): DayModel {\n    return this._dateNavigationService.selectedDay;\n  }\n\n  get focusedDay(): DayModel {\n    return this._dateNavigationService.focusedDay;\n  }\n\n  get today(): DayModel {\n    return this._dateNavigationService.today;\n  }\n\n  /**\n   * Initialize subscriptions to:\n   * 1. update the calendar view model.\n   * 2. update the focusable day in the calendar view model.\n   * 3. focus on the focusable day in the calendar.\n   */\n  private initializeSubscriptions(): void {\n    this._subs.push(\n      this._dateNavigationService.displayedCalendarChange.subscribe(() => {\n        this.generateCalendarView();\n      })\n    );\n\n    this._subs.push(\n      this._dateNavigationService.focusedDayChange.subscribe((focusedDay: DayModel) => {\n        this.calendarViewModel.updateFocusableDay(focusedDay);\n      })\n    );\n\n    this._subs.push(\n      this._dateNavigationService.focusOnCalendarChange.subscribe(() => {\n        this._datepickerFocusService.focusCell(this._elRef);\n      })\n    );\n  }\n\n  /**\n   * Generates the Calendar View based on the calendar retrieved from the DateNavigationService.\n   */\n  private generateCalendarView(): void {\n    this.calendarViewModel = new CalendarViewModel(\n      this.calendar,\n      this.selectedDay,\n      this.focusedDay,\n      this.today,\n      this._localeHelperService.firstDayOfWeek,\n      this._dateIOService.disabledDates\n    );\n  }\n\n  /**\n   * Delegates Keyboard arrow navigation to the DateNavigationService.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    if (event && this.focusedDay) {\n      switch (event.keyCode) {\n        case UP_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(-1 * NO_OF_DAYS_IN_A_WEEK);\n          break;\n        case DOWN_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(NO_OF_DAYS_IN_A_WEEK);\n          break;\n        case LEFT_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(-1);\n          break;\n        case RIGHT_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(1);\n          break;\n        default:\n          break; // No default case. TSLint x-(\n      }\n    }\n  }\n\n  /**\n   * Focuses on the focusable day when the Calendar View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n\n  /**\n   * Unsubscribe from subscriptions.\n   */\n  ngOnDestroy(): void {\n    this._subs.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class FocusService {\n  private _focused: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  get focusChange(): Observable<boolean> {\n    return this._focused.asObservable();\n  }\n  set focused(state: boolean) {\n    this._focused.next(state);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class DateFormControlService {\n  private _touchedChange: Subject<void> = new Subject<void>();\n  public disabled;\n\n  get touchedChange(): Observable<void> {\n    return this._touchedChange.asObservable();\n  }\n\n  private _dirtyChange: Subject<void> = new Subject<void>();\n\n  get dirtyChange(): Observable<void> {\n    return this._dirtyChange.asObservable();\n  }\n\n  markAsTouched(): void {\n    this._touchedChange.next();\n  }\n\n  markAsDirty(): void {\n    this._dirtyChange.next();\n  }\n\n  // friendly wrapper\n  setDisabled(state: boolean) {\n    this.disabled = state;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// iPad mini screen width\n// http://stephen.io/mediaqueries/#iPadMini\nexport const DATEPICKER_ENABLE_BREAKPOINT: number = 768;\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\nimport { DATEPICKER_ENABLE_BREAKPOINT } from '../../../utils/breakpoints/breakpoints';\nimport { MOBILE_USERAGENT_REGEX } from '../utils/constants';\n\n@Injectable()\nexport class DatepickerEnabledService {\n  constructor(@Inject(DOCUMENT) private _document: any) {\n    if (this._document) {\n      this._isUserAgentMobile = MOBILE_USERAGENT_REGEX.test(_document.defaultView.navigator.userAgent);\n      this._innerWidth = _document.defaultView.innerWidth;\n    }\n  }\n\n  private _isUserAgentMobile: boolean = false;\n  private _innerWidth: number;\n\n  /**\n   * Returns if the calendar should be active or not.\n   * If the user agent is mobile and the screen width is less than DATEPICKER_ACTIVE_BREAKPOINT\n   * then the calendar is inactive.\n   */\n  get isEnabled(): boolean {\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent\n    // What they recommend is:\n    //\"In summary, we recommend looking for the string 'Mobi'\n    // anywhere in the User Agent to detect a mobile device.\"\n    if (this._document) {\n      if (this._innerWidth < DATEPICKER_ENABLE_BREAKPOINT && this._isUserAgentMobile) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ClrPopoverPositions } from '../../../utils/popover/enums/positions.enum';\nimport { ClrPopoverPosition } from '../../../utils/popover/interfaces/popover-position.interface';\n\nconst enum DatepickerViewEnum {\n  MONTHVIEW = 'MONTHVIEW',\n  YEARVIEW = 'YEARVIEW',\n  DAYVIEW = 'DAYVIEW',\n}\n\n/**\n * This service manages which view is visible in the datepicker popover.\n */\n@Injectable()\nexport class ViewManagerService {\n  private _currentView: DatepickerViewEnum = DatepickerViewEnum.DAYVIEW;\n  position: ClrPopoverPosition = ClrPopoverPositions['bottom-left'];\n\n  get isDayView(): boolean {\n    return this._currentView === DatepickerViewEnum.DAYVIEW;\n  }\n\n  get isYearView(): boolean {\n    return this._currentView === DatepickerViewEnum.YEARVIEW;\n  }\n\n  get isMonthView(): boolean {\n    return this._currentView === DatepickerViewEnum.MONTHVIEW;\n  }\n\n  changeToMonthView(): void {\n    this._currentView = DatepickerViewEnum.MONTHVIEW;\n  }\n\n  changeToYearView(): void {\n    this._currentView = DatepickerViewEnum.YEARVIEW;\n  }\n\n  changeToDayView(): void {\n    this._currentView = DatepickerViewEnum.DAYVIEW;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  OnDestroy,\n  Optional,\n  ContentChild,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  Input,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrLabel } from '../common/label';\n\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateIOService } from './providers/date-io.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerEnabledService } from './providers/datepicker-enabled.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrPopoverPositions } from '../../utils/popover/enums/positions.enum';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ViewManagerService } from './providers/view-manager.service';\n\n@Component({\n  selector: 'clr-date-container',\n  template: `\n      <ng-content select=\"label\"></ng-content>\n      <label *ngIf=\"!label && addGrid()\"></label>\n      <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n        <div class=\"clr-input-wrapper\" clrPopoverAnchor>\n          <div class=\"clr-input-group\" [class.clr-focus]=\"focus\">\n            <ng-content select=\"[clrDate]\"></ng-content>\n            <button #actionButton\n                    type=\"button\"\n                    clrPopoverOpenCloseButton\n                    class=\"clr-input-group-icon-action\"\n                    [attr.title]=\"commonStrings.keys.datepickerToggle\"\n                    [attr.aria-label]=\"commonStrings.keys.datepickerToggle\"\n                    [disabled]=\"isInputDateDisabled\"\n                    *ngIf=\"isEnabled\">\n              <clr-icon shape=\"calendar\"></clr-icon>\n            </button>\n            <clr-datepicker-view-manager *clrPopoverContent=\"open at popoverPosition; outsideClickToClose: true; scrollToClose: true\" clrFocusTrap></clr-datepicker-view-manager>\n          </div>\n          <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n        </div>\n        <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n        <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n      </div>\n    `,\n  providers: [\n    ControlIdService,\n    ClrPopoverToggleService,\n    ClrPopoverEventsService,\n    ClrPopoverPositionService,\n    LocaleHelperService,\n    IfErrorService,\n    ControlClassService,\n    FocusService,\n    NgControlService,\n    DateIOService,\n    DateNavigationService,\n    DatepickerEnabledService,\n    DateFormControlService,\n    ViewManagerService,\n  ],\n  host: {\n    '[class.clr-form-control-disabled]': 'isInputDateDisabled',\n    '[class.clr-form-control]': 'true',\n    '[class.clr-row]': 'addGrid()',\n  },\n})\nexport class ClrDateContainer implements DynamicWrapper, OnDestroy, AfterViewInit {\n  _dynamic: boolean = false;\n  invalid = false;\n  focus = false;\n  control: NgControl;\n  @ContentChild(ClrLabel) label: ClrLabel;\n  @Input('clrPosition')\n  set clrPosition(position: string) {\n    if (position && ClrPopoverPositions[position]) {\n      this.viewManagerService.position = ClrPopoverPositions[position];\n    }\n  }\n  get popoverPosition(): ClrPopoverPosition {\n    return this.viewManagerService.position;\n  }\n\n  public get open() {\n    return this.toggleService.open;\n  }\n\n  private toggleButton: ElementRef;\n  @ViewChild('actionButton')\n  set actionButton(button: ElementRef) {\n    this.toggleButton = button;\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private toggleService: ClrPopoverToggleService,\n    private dateNavigationService: DateNavigationService,\n    private datepickerEnabledService: DatepickerEnabledService,\n    private dateFormControlService: DateFormControlService,\n    public commonStrings: ClrCommonStringsService,\n    private ifErrorService: IfErrorService,\n    private focusService: FocusService,\n    private viewManagerService: ViewManagerService,\n    private controlClassService: ControlClassService,\n    @Optional() private layoutService: LayoutService,\n    private ngControlService: NgControlService\n  ) {\n    this.subscriptions.push(\n      this.focusService.focusChange.subscribe(state => {\n        this.focus = state;\n      }),\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      }),\n      this.toggleService.openChange.subscribe(state => {\n        this.dateFormControlService.markAsTouched();\n      })\n    );\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        this.invalid = invalid;\n      })\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.subscriptions.push(\n      this.toggleService.openChange.subscribe(open => {\n        if (open) {\n          this.initializeCalendar();\n        } else {\n          this.toggleButton.nativeElement.focus();\n        }\n      })\n    );\n  }\n\n  /**\n   * Returns the classes to apply to the control\n   */\n  controlClass() {\n    return this.controlClassService.controlClass(this.invalid, this.addGrid());\n  }\n\n  /**\n   * Determines if the control needs to add grid classes\n   */\n  addGrid() {\n    return this.layoutService && !this.layoutService.isVertical();\n  }\n\n  /**\n   * Returns if the Datepicker is enabled or not. If disabled, hides the datepicker trigger.\n   */\n  get isEnabled(): boolean {\n    return this.datepickerEnabledService.isEnabled;\n  }\n\n  /**\n   * Return if Datepicker is diabled or not as Form Control\n   */\n  get isInputDateDisabled(): boolean {\n    /* clrForm wrapper or without clrForm */\n    return (\n      (this.control && this.control.disabled) || (this.dateFormControlService && this.dateFormControlService.disabled)\n    );\n  }\n\n  /**\n   * Processes the user input and Initializes the Calendar everytime the datepicker popover is open.\n   */\n  private initializeCalendar(): void {\n    this.dateNavigationService.initializeCalendar();\n  }\n\n  /**\n   * Unsubscribe from subscriptions.\n   */\n  ngOnDestroy() {\n    this.subscriptions.map(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport function isBooleanAttributeSet(value: string | boolean): boolean {\n  // for null just return false no need to check anything\n  if (value === null) {\n    return false;\n  }\n  if (typeof value === 'string') {\n    // Empty string is valid, 'true' as string is also valid\n    return value.length >= 0;\n  }\n  // Boolean value will be read as it is, everything else is false\n  return typeof value === 'boolean' ? value : false;\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  PLATFORM_ID,\n  Renderer2,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { filter, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport { FocusService } from '../common/providers/focus.service';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrDateContainer } from './date-container';\nimport { DayModel } from './model/day.model';\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateIOService } from './providers/date-io.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerEnabledService } from './providers/datepicker-enabled.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { datesAreEqual } from './utils/date-utils';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\n\n// There are four ways the datepicker value is set\n// 1. Value set by user typing into text input as a string ex: '01/28/2015'\n// 2. Value set explicitly by Angular Forms APIs as a string ex: '01/28/2015'\n// 3. Value set by user via datepicker UI as a Date Object\n// 4. Value set via `clrDate` input as a Date Object\n\n@Directive({\n  selector: '[clrDate]',\n  host: {\n    '[class.clr-input]': 'true',\n  },\n  providers: [DatepickerFocusService],\n})\nexport class ClrDateInput extends WrappedFormControl<ClrDateContainer> implements OnInit, AfterViewInit, OnDestroy {\n  @Input() placeholder: string;\n  @Output('clrDateChange') dateChange: EventEmitter<Date> = new EventEmitter<Date>(false);\n  @Input('clrDate')\n  set date(date: Date) {\n    if (this.previousDateChange !== date) {\n      this.updateDate(this.getValidDateValueFromDate(date));\n    }\n\n    if (!this.initialClrDateInputValue) {\n      this.initialClrDateInputValue = date;\n    }\n  }\n\n  @Input()\n  set min(dateString: string) {\n    this.dateIOService.setMinDate(dateString);\n  }\n\n  @Input()\n  set max(dateString: string) {\n    this.dateIOService.setMaxDate(dateString);\n  }\n\n  protected index = 1;\n  private initialClrDateInputValue: Date;\n  private previousDateChange: Date;\n\n  constructor(\n    viewContainerRef: ViewContainerRef,\n    injector: Injector,\n    protected el: ElementRef,\n    protected renderer: Renderer2,\n    @Self()\n    @Optional()\n    protected control: NgControl,\n    @Optional() private container: ClrDateContainer,\n    @Optional() private dateIOService: DateIOService,\n    @Optional() private dateNavigationService: DateNavigationService,\n    @Optional() private datepickerEnabledService: DatepickerEnabledService,\n    @Optional() private dateFormControlService: DateFormControlService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() private focusService: FocusService,\n    private datepickerFocusService: DatepickerFocusService\n  ) {\n    super(viewContainerRef, ClrDateContainer, injector, control, renderer, el);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.populateServicesFromContainerComponent();\n\n    this.subscriptions.push(\n      this.listenForUserSelectedDayChanges(),\n      this.listenForControlValueChanges(),\n      this.listenForTouchChanges(),\n      this.listenForDirtyChanges(),\n      this.listenForInputRefocus()\n    );\n  }\n\n  ngAfterViewInit() {\n    // I don't know why I have to do this but after using the new HostWrapping Module I have to delay the processing\n    // of the initial Input set by the user to here. If I do not 2 issues occur:\n    // 1. The Input setter is called before ngOnInit. ngOnInit initializes the services without which the setter fails.\n    // 2. The Renderer doesn't work before ngAfterViewInit (It used to before the new HostWrapping Module for some reason).\n    // I need the renderer to set the value property on the input to make sure that if the user has supplied a Date\n    // input object, we reflect it with the right date on the input field using the IO service. I am not sure if\n    // these are major issues or not but just noting them down here.\n    this.processInitialInputs();\n  }\n\n  @HostListener('focus')\n  setFocusStates() {\n    this.setFocus(true);\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    super.triggerValidation();\n    this.setFocus(false);\n  }\n\n  @HostBinding('attr.placeholder')\n  get placeholderText(): string {\n    return this.placeholder ? this.placeholder : this.dateIOService.placeholderText;\n  }\n\n  @HostBinding('attr.type')\n  get inputType(): string {\n    return isPlatformBrowser(this.platformId) && this.usingNativeDatepicker() ? 'date' : 'text';\n  }\n\n  @HostListener('change', ['$event.target'])\n  onValueChange(target: HTMLInputElement) {\n    const validDateValue = this.dateIOService.getDateValueFromDateString(target.value);\n    if (this.usingClarityDatepicker() && validDateValue) {\n      this.updateDate(validDateValue, true);\n    } else if (this.usingNativeDatepicker()) {\n      const [year, month, day] = target.value.split('-');\n      this.updateDate(new Date(+year, +month - 1, +day), true);\n    } else {\n      this.emitDateOutput(null);\n    }\n  }\n\n  @HostBinding('disabled')\n  @Input('disabled')\n  set disabled(value: boolean | string) {\n    if (this.dateFormControlService) {\n      this.dateFormControlService.setDisabled(isBooleanAttributeSet(value));\n    }\n  }\n  get disabled() {\n    if (this.dateFormControlService) {\n      return this.dateFormControlService.disabled;\n    }\n    return null;\n  }\n\n  private usingClarityDatepicker() {\n    return this.datepickerEnabledService.isEnabled;\n  }\n\n  private usingNativeDatepicker() {\n    return !this.datepickerEnabledService.isEnabled;\n  }\n\n  private setFocus(focus: boolean) {\n    if (this.focusService) {\n      this.focusService.focused = focus;\n    }\n  }\n\n  private populateServicesFromContainerComponent() {\n    if (!this.container) {\n      this.dateIOService = this.getProviderFromContainer(DateIOService);\n      this.dateNavigationService = this.getProviderFromContainer(DateNavigationService);\n      this.datepickerEnabledService = this.getProviderFromContainer(DatepickerEnabledService);\n      this.dateFormControlService = this.getProviderFromContainer(DateFormControlService);\n    }\n  }\n\n  private processInitialInputs() {\n    if (this.datepickerHasFormControl()) {\n      this.updateDate(this.dateIOService.getDateValueFromDateString(this.control.value));\n    } else {\n      this.updateDate(this.initialClrDateInputValue);\n    }\n  }\n\n  private updateDate(value: Date, setByUserInteraction = false) {\n    const date = this.getValidDateValueFromDate(value);\n\n    if (setByUserInteraction) {\n      this.emitDateOutput(date);\n    } else {\n      this.previousDateChange = date;\n    }\n\n    if (this.dateNavigationService) {\n      this.dateNavigationService.selectedDay = date\n        ? new DayModel(date.getFullYear(), date.getMonth(), date.getDate())\n        : null;\n    }\n\n    this.updateInput(date);\n  }\n\n  private updateInput(date: Date) {\n    if (date) {\n      const dateString = this.dateIOService.toLocaleDisplayFormatString(date);\n      if (this.usingNativeDatepicker()) {\n        // valueAsDate expects UTC, date from input is time-zoned\n        date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n        this.renderer.setProperty(this.el.nativeElement, 'valueAsDate', date);\n      } else if (this.datepickerHasFormControl() && dateString !== this.control.value) {\n        this.control.control.setValue(dateString);\n      } else {\n        this.renderer.setProperty(this.el.nativeElement, 'value', dateString);\n      }\n    } else {\n      this.renderer.setProperty(this.el.nativeElement, 'value', '');\n    }\n  }\n\n  private getValidDateValueFromDate(date: Date) {\n    if (this.dateIOService) {\n      const dateString = this.dateIOService.toLocaleDisplayFormatString(date);\n      return this.dateIOService.getDateValueFromDateString(dateString);\n    } else {\n      return null;\n    }\n  }\n\n  private emitDateOutput(date: Date) {\n    if (!datesAreEqual(date, this.previousDateChange)) {\n      this.dateChange.emit(date);\n      this.previousDateChange = date;\n    } else if (!date && this.previousDateChange) {\n      this.dateChange.emit(null);\n      this.previousDateChange = null;\n    }\n  }\n\n  private datepickerHasFormControl() {\n    return !!this.control;\n  }\n\n  private listenForControlValueChanges() {\n    return of(this.datepickerHasFormControl())\n      .pipe(\n        filter(hasControl => hasControl),\n        switchMap(() => this.control.valueChanges),\n        // only update date value if not being set by user\n        filter(() => !this.datepickerFocusService.elementIsFocused(this.el.nativeElement))\n      )\n      .subscribe((value: string) => this.updateDate(this.dateIOService.getDateValueFromDateString(value)));\n  }\n\n  private listenForUserSelectedDayChanges() {\n    return this.dateNavigationService.selectedDayChange.subscribe(dayModel => this.updateDate(dayModel.toDate(), true));\n  }\n\n  private listenForTouchChanges() {\n    return this.dateFormControlService.touchedChange\n      .pipe(filter(() => this.datepickerHasFormControl()))\n      .subscribe(() => this.control.control.markAsTouched());\n  }\n\n  private listenForDirtyChanges() {\n    return this.dateFormControlService.dirtyChange\n      .pipe(filter(() => this.datepickerHasFormControl()))\n      .subscribe(() => this.control.control.markAsDirty());\n  }\n\n  private listenForInputRefocus() {\n    return this.dateNavigationService.selectedDayChange\n      .pipe(filter(date => !!date))\n      .subscribe(v => this.datepickerFocusService.focusInput(this.el.nativeElement));\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { ViewManagerService } from './providers/view-manager.service';\n\n@Component({\n  selector: 'clr-datepicker-view-manager',\n  templateUrl: './datepicker-view-manager.html',\n  providers: [DatepickerFocusService],\n  host: {\n    '[class.datepicker]': 'true',\n    '[attr.aria-modal]': 'true',\n  },\n})\nexport class ClrDatepickerViewManager {\n  constructor(private viewManagerService: ViewManagerService) {}\n\n  /**\n   * Returns if the current view is the monthpicker.\n   */\n  get isMonthView(): boolean {\n    return this.viewManagerService.isMonthView;\n  }\n\n  /**\n   * Returns if the current view is the yearpicker.\n   */\n  get isYearView(): boolean {\n    return this.viewManagerService.isYearView;\n  }\n\n  /**\n   * Returns if the current view is the daypicker.\n   */\n  get isDayView(): boolean {\n    return this.viewManagerService.isDayView;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\nimport { DayViewModel } from './model/day-view.model';\nimport { DayModel } from './model/day.model';\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\n\n@Component({\n  selector: 'clr-day',\n  template: `\n        <button\n            class=\"day-btn\"\n            type=\"button\"\n            [class.is-today]=\"dayView.isTodaysDate\"\n            [class.is-excluded]=\"dayView.isExcluded\"\n            [class.is-disabled]=\"dayView.isDisabled\"\n            [class.is-selected]=\"dayView.isSelected\"\n            [attr.tabindex]=\"dayView.tabIndex\"\n            (click)=\"selectDay()\"\n            (focus)=\"onDayViewFocus()\"\n            [attr.aria-label]=\"dayString\">\n            {{dayView.dayModel.date}}\n        </button>\n    `,\n  host: { '[class.day]': 'true' },\n})\nexport class ClrDay {\n  private _dayView: DayViewModel;\n  public dayString: string;\n\n  constructor(\n    private _dateNavigationService: DateNavigationService,\n    private _toggleService: ClrPopoverToggleService,\n    private dateFormControlService: DateFormControlService\n  ) {}\n\n  /**\n   * DayViewModel input which is used to build the Day View.\n   */\n\n  @Input('clrDayView')\n  public set dayView(day: DayViewModel) {\n    this._dayView = day;\n    this.dayString = this._dayView.dayModel.toDateString();\n  }\n\n  public get dayView(): DayViewModel {\n    return this._dayView;\n  }\n\n  /**\n   * Updates the focusedDay in the DateNavigationService when the ClrDay is focused.\n   */\n  onDayViewFocus() {\n    this._dateNavigationService.focusedDay = this.dayView.dayModel;\n  }\n\n  /**\n   * Updates the selectedDay when the ClrDay is selected and closes the datepicker popover.\n   */\n  selectDay(): void {\n    const day: DayModel = this.dayView.dayModel;\n    this._dateNavigationService.notifySelectedDayChanged(day);\n    this.dateFormControlService.markAsDirty();\n    this._toggleService.open = false;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, AfterViewInit } from '@angular/core';\n\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ViewManagerService } from './providers/view-manager.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAriaLiveService } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  selector: 'clr-daypicker',\n  providers: [ClrAriaLiveService],\n  templateUrl: './daypicker.html',\n  host: { '[class.daypicker]': 'true' },\n})\nexport class ClrDaypicker implements AfterViewInit {\n  constructor(\n    private _viewManagerService: ViewManagerService,\n    private _dateNavigationService: DateNavigationService,\n    private _localeHelperService: LocaleHelperService,\n    public commonStrings: ClrCommonStringsService,\n    private ariaLiveService: ClrAriaLiveService\n  ) {}\n\n  ngAfterViewInit() {\n    /** @deprecated since 3.0, remove in 4.0 */\n    this.ariaLiveService.announce(`${this.ariaLiveMonth} ${this.updateAriaLiveYear}`);\n  }\n\n  get monthAttrString(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.datepickerSelectMonthText, {\n      CALENDAR_MONTH: this.calendarMonth,\n    });\n  }\n\n  get yearAttrString(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.datepickerSelectYearText, {\n      CALENDAR_YEAR: this.calendarYear.toString(),\n    });\n  }\n\n  get ariaLiveMonth(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.daypickerSRCurrentMonthPhrase, {\n      CURRENT_MONTH: this.calendarMonth,\n    });\n  }\n\n  get updateAriaLiveYear(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.daypickerSRCurrentYearPhrase, {\n      CURRENT_YEAR: this.calendarYear.toString(),\n    });\n  }\n\n  /**\n   * Calls the ViewManagerService to change to the monthpicker view.\n   */\n  changeToMonthView(): void {\n    this._viewManagerService.changeToMonthView();\n  }\n\n  /**\n   * Calls the ViewManagerService to change to the yearpicker view.\n   */\n  changeToYearView(): void {\n    this._viewManagerService.changeToYearView();\n  }\n\n  /**\n   * Returns the month value of the calendar in the TranslationWidth.Abbreviated format.\n   */\n  get calendarMonth(): string {\n    return this._localeHelperService.localeMonthsAbbreviated[this._dateNavigationService.displayedCalendar.month];\n  }\n\n  /**\n   * Returns the year value of the calendar.\n   */\n  get calendarYear(): number {\n    return this._dateNavigationService.displayedCalendar.year;\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the next month.\n   */\n  nextMonth(): void {\n    this._dateNavigationService.moveToNextMonth();\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the previous month.\n   */\n  previousMonth(): void {\n    this._dateNavigationService.moveToPreviousMonth();\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the current month.\n   */\n  currentMonth(): void {\n    this._dateNavigationService.moveToCurrentMonth();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, HostListener } from '@angular/core';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ViewManagerService } from './providers/view-manager.service';\n\n@Component({\n  selector: 'clr-monthpicker',\n  template: `\n        <button\n            type=\"button\"\n            class=\"calendar-btn month\"\n            *ngFor=\"let month of monthNames; let monthIndex = index\"\n            (click)=\"changeMonth(monthIndex)\"\n            [class.is-selected]=\"monthIndex === calendarMonthIndex\"\n            [attr.tabindex]=\"getTabIndex(monthIndex)\">\n            {{month}}\n        </button>\n    `,\n  host: {\n    '[class.monthpicker]': 'true',\n  },\n})\nexport class ClrMonthpicker implements AfterViewInit {\n  constructor(\n    private _viewManagerService: ViewManagerService,\n    private _localeHelperService: LocaleHelperService,\n    private _dateNavigationService: DateNavigationService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _elRef: ElementRef\n  ) {\n    this._focusedMonthIndex = this.calendarMonthIndex;\n  }\n\n  /**\n   * Keeps track of the current focused month.\n   */\n  private _focusedMonthIndex: number;\n\n  /**\n   * Gets the months array which is used to rendered the monthpicker view.\n   * Months are in the TranslationWidth.Wide format.\n   */\n  get monthNames(): ReadonlyArray<string> {\n    return this._localeHelperService.localeMonthsWide;\n  }\n\n  /**\n   * Gets the month value of the Calendar.\n   */\n  get calendarMonthIndex(): number {\n    return this._dateNavigationService.displayedCalendar.month;\n  }\n\n  /**\n   * Calls the DateNavigationService to update the month value of the calendar.\n   * Also changes the view to the daypicker.\n   */\n  changeMonth(monthIndex: number) {\n    this._dateNavigationService.changeMonth(monthIndex);\n    this._viewManagerService.changeToDayView();\n  }\n\n  /**\n   * Compares the month passed to the focused month and returns the tab index.\n   */\n  getTabIndex(monthIndex: number): number {\n    return monthIndex === this._focusedMonthIndex ? 0 : -1;\n  }\n\n  /**\n   * Handles the Keyboard arrow navigation for the monthpicker.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // NOTE: Didn't move this to the date navigation service because\n    // the logic is fairly simple and it didn't make sense for me\n    // to create extra observables just to move this logic to the service.\n    if (event) {\n      const keyCode: number = event.keyCode;\n      if (keyCode === UP_ARROW && this._focusedMonthIndex > 0) {\n        event.preventDefault();\n        this._focusedMonthIndex--;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === DOWN_ARROW && this._focusedMonthIndex < 11) {\n        event.preventDefault();\n        this._focusedMonthIndex++;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === RIGHT_ARROW && this._focusedMonthIndex < 6) {\n        event.preventDefault();\n        this._focusedMonthIndex = this._focusedMonthIndex + 6;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === LEFT_ARROW && this._focusedMonthIndex > 5) {\n        event.preventDefault();\n        this._focusedMonthIndex = this._focusedMonthIndex - 6;\n        this._datepickerFocusService.focusCell(this._elRef);\n      }\n    }\n  }\n\n  /**\n   * Focuses on the current calendar month when the View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nconst YEARS_TO_DISPLAY: number = 10;\n\nexport class YearRangeModel {\n  constructor(private readonly year: number) {\n    this.generateYearRange();\n  }\n\n  yearRange: number[] = [];\n\n  /**\n   * Gets the number in the middle of the range.\n   */\n  get middleYear(): number {\n    return this.yearRange[Math.floor(this.yearRange.length / 2)];\n  }\n\n  /**\n   * Generates the year range based on the year parameter.\n   * eg: If 2018 is passed the output will be [2010, 2011, ..., 2019]\n   */\n  private generateYearRange() {\n    const remainder: number = this.year % YEARS_TO_DISPLAY;\n    const floor: number = this.year - remainder;\n    const ceil: number = floor + YEARS_TO_DISPLAY;\n    this.yearRange = this.generateRange(floor, ceil);\n  }\n\n  /**\n   * Function which generate a range of numbers from floor to ceil.\n   */\n  private generateRange(floor: number, ceil: number): number[] {\n    return Array.from({ length: ceil - floor }, (v, k) => k + floor);\n  }\n\n  /**\n   * Generates the YearRangeModel for the next decade.\n   */\n  nextDecade(): YearRangeModel {\n    return new YearRangeModel(this.year + 10);\n  }\n\n  /**\n   * Generates the YearRangeModel for the previous decade.\n   */\n  previousDecade(): YearRangeModel {\n    return new YearRangeModel(this.year - 10);\n  }\n\n  /**\n   * Generates the YearRangeModel for the current decade.\n   */\n  currentDecade(): YearRangeModel {\n    return new YearRangeModel(new Date().getFullYear());\n  }\n\n  /**\n   * Checks if the value is in the YearRangeModel.\n   */\n  inRange(value: number): boolean {\n    return this.yearRange.indexOf(value) > -1;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, HostListener } from '@angular/core';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { YearRangeModel } from './model/year-range.model';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { ViewManagerService } from './providers/view-manager.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAriaLiveService } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  selector: 'clr-yearpicker',\n  providers: [ClrAriaLiveService],\n  template: `\n        <div class=\"year-switchers\">\n          <button\n              class=\"calendar-btn switcher\"\n              type=\"button\"\n              (click)=\"previousDecade()\"\n              [attr.aria-label]=\"commonStrings.keys.datepickerPreviousDecade\">\n              <clr-icon shape=\"angle\" dir=\"left\" [attr.title]=\"commonStrings.keys.datepickerPreviousDecade\"></clr-icon>\n          </button>\n          <button\n              class=\"calendar-btn switcher\"\n              type=\"button\"\n              (click)=\"currentDecade()\"\n              [attr.aria-label]=\"commonStrings.keys.datepickerCurrentDecade\">\n              <clr-icon shape=\"event\" [attr.title]=\"commonStrings.keys.datepickerCurrentDecade\"></clr-icon>\n          </button>\n          <button\n              class=\"calendar-btn switcher\"\n              type=\"button\"\n              (click)=\"nextDecade()\"\n              [attr.aria-label]=\"commonStrings.keys.datepickerNextDecade\">\n              <clr-icon shape=\"angle\" dir=\"right\" [attr.title]=\"commonStrings.keys.datepickerNextDecade\"></clr-icon>\n          </button>\n        </div>\n        <div class=\"years\">\n            <button\n                *ngFor=\"let year of yearRangeModel.yearRange\"\n                type=\"button\"\n                class=\"calendar-btn year\"\n                [attr.tabindex]=\"getTabIndex(year)\"\n                [class.is-selected]=\"year === calendarYear\"\n                (click)=\"changeYear(year)\">\n                {{year}}\n            </button>\n        </div>\n    `,\n  host: {\n    '[class.yearpicker]': 'true',\n  },\n})\nexport class ClrYearpicker implements AfterViewInit {\n  constructor(\n    private _dateNavigationService: DateNavigationService,\n    private _viewManagerService: ViewManagerService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _elRef: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    private ariaLiveService: ClrAriaLiveService\n  ) {\n    this.yearRangeModel = new YearRangeModel(this.calendarYear);\n    this._focusedYear = this.calendarYear;\n    this.updateRange(this.yearRangeModel);\n  }\n\n  /** @deprecated since 3.0, remove in 4.0 */\n  get ariaLiveDecadeText(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.daypickerSRCurrentDecadePhrase, {\n      DECADE_RANGE: this.decadeRange,\n    });\n  }\n\n  private decadeRange;\n\n  /**\n   * YearRangeModel which is used to build the YearPicker view.\n   */\n  yearRangeModel: YearRangeModel;\n\n  /**\n   * Keeps track of the current focused year.\n   */\n  private _focusedYear: number;\n\n  /**\n   * Gets the year which the user is currently on.\n   */\n  get calendarYear(): number {\n    return this._dateNavigationService.displayedCalendar.year;\n  }\n\n  /**\n   * Increments the focus year by the value passed. Updates the YearRangeModel if the\n   * new value is not in the current decade.\n   */\n  private incrementFocusYearBy(value: number): void {\n    this._focusedYear = this._focusedYear + value;\n    if (!this.yearRangeModel.inRange(this._focusedYear)) {\n      if (value > 0) {\n        this.yearRangeModel = this.yearRangeModel.nextDecade();\n      } else {\n        this.yearRangeModel = this.yearRangeModel.previousDecade();\n      }\n    }\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n\n  /**\n   * Calls the DateNavigationService to update the year value of the calendar.\n   * Also changes the view to the daypicker.\n   */\n  changeYear(year: number): void {\n    this._dateNavigationService.changeYear(year);\n    this._viewManagerService.changeToDayView();\n  }\n\n  /**\n   * Updates the YearRangeModel to the previous decade.\n   */\n  previousDecade(): void {\n    this.yearRangeModel = this.yearRangeModel.previousDecade();\n    this.updateRange(this.yearRangeModel);\n    // Year in the yearpicker is not focused because while navigating to a different decade,\n    // you want the focus to remain on the decade switcher arrows.\n  }\n\n  /**\n   * Updates the YearRangeModel to the current decade.\n   */\n  currentDecade(): void {\n    if (!this.yearRangeModel.inRange(this._dateNavigationService.today.year)) {\n      this.yearRangeModel = this.yearRangeModel.currentDecade();\n    }\n    this._datepickerFocusService.focusCell(this._elRef);\n    this.updateRange(this.yearRangeModel);\n  }\n\n  /**\n   * Updates the YearRangeModel to the next decade.\n   */\n  nextDecade(): void {\n    this.yearRangeModel = this.yearRangeModel.nextDecade();\n    this.updateRange(this.yearRangeModel);\n    // Year in the yearpicker is not focused because while navigating to a different decade,\n    // you want the focus to remain on the decade switcher arrows.\n  }\n\n  /**\n   * Compares the year passed to the focused year and returns the tab index.\n   */\n  getTabIndex(year: number): number {\n    if (!this.yearRangeModel.inRange(this._focusedYear)) {\n      if (this.yearRangeModel.inRange(this.calendarYear)) {\n        this._focusedYear = this.calendarYear;\n      } else {\n        this._focusedYear = this.yearRangeModel.middleYear;\n      }\n    }\n    return this._focusedYear === year ? 0 : -1;\n  }\n\n  /**\n   * Handles the Keyboard arrow navigation for the yearpicker.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // NOTE: Didn't move this to the date navigation service because\n    // the logic is fairly simple and it didn't make sense for me\n    // to create extra observables just to move this logic to the service.\n    if (event) {\n      const keyCode: number = event.keyCode;\n      if (keyCode === UP_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(-1);\n      } else if (keyCode === DOWN_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(1);\n      } else if (keyCode === RIGHT_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(5);\n      } else if (keyCode === LEFT_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(-5);\n      }\n    }\n  }\n\n  private updateRange(yrm: YearRangeModel): void {\n    const floor = yrm.yearRange[0];\n    const ceil = yrm.yearRange[yrm.yearRange.length - 1];\n    this.decadeRange = `${floor} to ${ceil}`;\n    /** @deprecated since 3.0, remove in 4.0 */\n    this.ariaLiveService.announce(this.ariaLiveDecadeText);\n  }\n\n  /**\n   * Focuses on the current calendar year when the View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n    /** @deprecated since 3.0, remove in 4.0 */\n    this.ariaLiveService.announce(this.ariaLiveDecadeText);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrFocusTrapModule } from '../../utils/focus-trap/focus-trap.module';\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\nimport { ClrPopoverModuleNext } from '../../utils/popover/popover.module';\n\nimport { ClrCalendar } from './calendar';\nimport { ClrDateContainer } from './date-container';\nimport { ClrDateInput } from './date-input';\nimport { ClrDatepickerViewManager } from './datepicker-view-manager';\nimport { ClrDay } from './day';\nimport { ClrDaypicker } from './daypicker';\nimport { ClrMonthpicker } from './monthpicker';\nimport { ClrYearpicker } from './yearpicker';\n\nexport const CLR_DATEPICKER_DIRECTIVES: Type<any>[] = [\n  ClrDay,\n  ClrDateContainer,\n  ClrDateInput,\n  ClrDatepickerViewManager,\n  ClrMonthpicker,\n  ClrYearpicker,\n  ClrDaypicker,\n  ClrCalendar,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClrHostWrappingModule,\n    ClrConditionalModule,\n    ClrPopoverModuleNext,\n    ClrIconModule,\n    ClrFocusTrapModule,\n    ClrCommonFormsModule,\n  ],\n  declarations: [CLR_DATEPICKER_DIRECTIVES],\n  exports: [CLR_DATEPICKER_DIRECTIVES],\n  entryComponents: [ClrDateContainer],\n})\nexport class ClrDatepickerModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-input-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-input-wrapper\">\n                <ng-content select=\"[clrInput]\"></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrInputContainer extends ClrAbstractContainer {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Optional, ViewContainerRef, Renderer2, ElementRef, Injector, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { ClrInputContainer } from './input-container';\nimport { WrappedFormControl } from '../common/wrapped-control';\n\n@Directive({ selector: '[clrInput]', host: { '[class.clr-input]': 'true' } })\nexport class ClrInput extends WrappedFormControl<ClrInputContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrInputContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrInput } from './input';\nimport { ClrInputContainer } from './input-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrInput, ClrInputContainer],\n  exports: [ClrCommonFormsModule, ClrInput, ClrInputContainer],\n  entryComponents: [ClrInputContainer],\n})\nexport class ClrInputModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Inject, InjectionToken, Input, Optional } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\nexport const TOGGLE_SERVICE = new InjectionToken<BehaviorSubject<boolean>>(undefined);\nexport function ToggleServiceFactory() {\n  return new BehaviorSubject<boolean>(false);\n}\nexport const TOGGLE_SERVICE_PROVIDER = { provide: TOGGLE_SERVICE, useFactory: ToggleServiceFactory };\n\n@Component({\n  selector: 'clr-password-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n      <div class=\"clr-input-wrapper\">\n        <div class=\"clr-input-group\" [class.clr-focus]=\"focus\">\n          <ng-content select=\"[clrPassword]\"></ng-content>\n          <button\n            *ngIf=\"clrToggle\"\n            (click)=\"toggle()\"\n            [disabled]=\"control?.disabled\"\n            class=\"clr-input-group-icon-action\"\n            type=\"button\">\n            <clr-icon\n            [attr.shape]=\"show ? 'eye-hide' : 'eye'\"\n            [attr.title]=\"show ? commonStrings.keys.hide : commonStrings.keys.show\"></clr-icon>\n          </button>\n        </div>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n      </div>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n    </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [\n    IfErrorService,\n    NgControlService,\n    ControlIdService,\n    ControlClassService,\n    FocusService,\n    TOGGLE_SERVICE_PROVIDER,\n  ],\n})\nexport class ClrPasswordContainer extends ClrAbstractContainer {\n  show = false;\n  focus = false;\n  private _toggle = true;\n\n  @Input('clrToggle')\n  set clrToggle(state: boolean) {\n    this._toggle = state;\n    if (!state) {\n      this.show = false;\n    }\n  }\n  get clrToggle() {\n    return this._toggle;\n  }\n\n  constructor(\n    ifErrorService: IfErrorService,\n    @Optional() layoutService: LayoutService,\n    controlClassService: ControlClassService,\n    ngControlService: NgControlService,\n    public focusService: FocusService,\n    @Inject(TOGGLE_SERVICE) private toggleService: BehaviorSubject<boolean>,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    super(ifErrorService, layoutService, controlClassService, ngControlService);\n    this.subscriptions.push(\n      this.focusService.focusChange.subscribe(state => {\n        this.focus = state;\n      })\n    );\n  }\n\n  toggle() {\n    this.show = !this.show;\n    this.toggleService.next(this.show);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injector,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { ClrPasswordContainer, TOGGLE_SERVICE } from './password-container';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { FocusService } from '../common/providers/focus.service';\n\n@Directive({ selector: '[clrPassword]', host: { '[class.clr-input]': 'true' } })\nexport class ClrPassword extends WrappedFormControl<ClrPasswordContainer> implements OnInit, OnDestroy {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef,\n    @Optional() private focusService: FocusService,\n    @Optional()\n    @Inject(TOGGLE_SERVICE)\n    private toggleService: BehaviorSubject<boolean>\n  ) {\n    super(vcr, ClrPasswordContainer, injector, control, renderer, el);\n\n    if (!this.focusService) {\n      throw new Error('clrPassword requires being wrapped in <clr-password-container>');\n    }\n\n    this.subscriptions.push(\n      this.toggleService.subscribe(toggle => {\n        renderer.setProperty(el.nativeElement, 'type', toggle ? 'text' : 'password');\n      })\n    );\n  }\n\n  @HostListener('focus')\n  triggerFocus() {\n    if (this.focusService) {\n      this.focusService.focused = true;\n    }\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    super.triggerValidation();\n    if (this.focusService) {\n      this.focusService.focused = false;\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrPassword } from './password';\nimport { ClrPasswordContainer } from './password-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrPassword, ClrPasswordContainer],\n  exports: [ClrCommonFormsModule, ClrPassword, ClrPasswordContainer],\n  entryComponents: [ClrPasswordContainer],\n})\nexport class ClrPasswordModule {}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, OnInit } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ClrLabel } from '../common/label';\n\n@Component({\n  selector: 'clr-radio-wrapper',\n  template: `\n    <ng-content select=\"[clrRadio]\"></ng-content>\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label\"></label>\n  `,\n  host: {\n    '[class.clr-radio-wrapper]': 'true',\n  },\n  providers: [ControlIdService],\n})\nexport class ClrRadioWrapper implements DynamicWrapper, OnInit {\n  // We need both _dynamic for HostWrapper and ContentChild(ClrLabel) in cases where\n  // the user puts a radio inside a wrapper without a label, host wrapping doesn't apply\n  // but we'd still need to insert a label\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: true })\n  label: ClrLabel;\n\n  ngOnInit() {\n    if (this.label) {\n      this.label.disableGrid();\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Injector, Optional, Renderer2, Self, ViewContainerRef } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrRadioWrapper } from '../radio/radio-wrapper';\n\n@Directive({ selector: '[clrRadio]' })\nexport class ClrRadio extends WrappedFormControl<ClrRadioWrapper> {\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrRadioWrapper, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-radio-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [class.clr-control-inline]=\"clrInline\" [ngClass]=\"controlClass()\">\n      <ng-content select=\"clr-radio-wrapper\"></ng-content>\n      <div class=\"clr-subtext-wrapper\">\n        <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n        <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n      </div>\n    </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [NgControlService, ControlClassService, IfErrorService],\n})\nexport class ClrRadioContainer extends ClrAbstractContainer {\n  private inline = false;\n\n  /*\n   * Here we want to support the following cases\n   * clrInline - true by presence\n   * clrInline=\"true|false\" - unless it is explicitly false, strings are considered true\n   * [clrInline]=\"true|false\" - expect a boolean\n   */\n  @Input()\n  set clrInline(value: boolean | string) {\n    if (typeof value === 'string') {\n      this.inline = value === 'false' ? false : true;\n    } else {\n      this.inline = !!value;\n    }\n  }\n  get clrInline() {\n    return this.inline;\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrRadio } from './radio';\nimport { ClrRadioContainer } from './radio-container';\nimport { ClrRadioWrapper } from './radio-wrapper';\n\n@NgModule({\n  imports: [CommonModule, ClrCommonFormsModule, ClrHostWrappingModule, ClrIconModule],\n  declarations: [ClrRadio, ClrRadioContainer, ClrRadioWrapper],\n  exports: [ClrCommonFormsModule, ClrRadio, ClrRadioContainer, ClrRadioWrapper],\n  entryComponents: [ClrRadioWrapper],\n})\nexport class ClrRadioModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild } from '@angular/core';\nimport { SelectMultipleControlValueAccessor } from '@angular/forms';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-select-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div [ngClass]=\"wrapperClass()\">\n                <ng-content select=\"[clrSelect]\"></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrSelectContainer extends ClrAbstractContainer {\n  @ContentChild(SelectMultipleControlValueAccessor, { static: false })\n  multiple: SelectMultipleControlValueAccessor;\n  private multi = false;\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        if (control) {\n          this.multi = control.valueAccessor instanceof SelectMultipleControlValueAccessor;\n          this.control = control;\n        }\n      })\n    );\n  }\n\n  wrapperClass() {\n    return this.multi ? 'clr-multiselect-wrapper' : 'clr-select-wrapper';\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ViewContainerRef, Renderer2, ElementRef, Injector, Optional, Self } from '@angular/core';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrSelectContainer } from './select-container';\nimport { NgControl } from '@angular/forms';\n\n@Directive({ selector: '[clrSelect]', host: { '[class.clr-select]': 'true' } })\nexport class ClrSelect extends WrappedFormControl<ClrSelectContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrSelectContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrSelect } from './select';\nimport { ClrSelectContainer } from './select-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrSelect, ClrSelectContainer],\n  exports: [ClrCommonFormsModule, ClrSelect, ClrSelectContainer],\n  entryComponents: [ClrSelectContainer],\n})\nexport class ClrSelectModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-textarea-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-textarea-wrapper\">\n                <ng-content select=\"[clrTextarea]\"></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrTextareaContainer extends ClrAbstractContainer {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ViewContainerRef, Renderer2, ElementRef, Injector, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrTextareaContainer } from './textarea-container';\n\n@Directive({ selector: '[clrTextarea]', host: { '[class.clr-textarea]': 'true' } })\nexport class ClrTextarea extends WrappedFormControl<ClrTextareaContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrTextareaContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrTextarea } from './textarea';\nimport { ClrTextareaContainer } from './textarea-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrTextarea, ClrTextareaContainer],\n  exports: [ClrCommonFormsModule, ClrTextarea, ClrTextareaContainer],\n  entryComponents: [ClrTextareaContainer],\n})\nexport class ClrTextareaModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input, Optional, Renderer2 } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-range-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-range-wrapper\" [class.progress-fill]=\"hasProgress\">\n                <ng-content select=\"[clrRange]\"></ng-content>\n                <span\n                  *ngIf=\"hasProgress\"\n                  class=\"fill-input\"\n                  [style.width]=\"getRangeProgressFillWidth()\"\n                ></span>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrRangeContainer extends ClrAbstractContainer {\n  private _hasProgress: boolean = false;\n\n  @Input('clrRangeHasProgress')\n  set hasProgress(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._hasProgress) {\n      this._hasProgress = valBool;\n    }\n  }\n\n  get hasProgress() {\n    return this._hasProgress;\n  }\n\n  constructor(\n    ifErrorService: IfErrorService,\n    @Optional() layoutService: LayoutService,\n    controlClassService: ControlClassService,\n    ngControlService: NgControlService,\n    private renderer: Renderer2,\n    private idService: ControlIdService\n  ) {\n    super(ifErrorService, layoutService, controlClassService, ngControlService);\n  }\n\n  getRangeProgressFillWidth(): string {\n    const input = <HTMLInputElement>this.renderer.selectRootElement('[clrRange]#' + this.idService.id);\n\n    const inputWidth = input.offsetWidth;\n    const inputMinValue = +input.min;\n    let inputMaxValue = +input.max;\n\n    if (inputMinValue === 0 && inputMaxValue === 0) {\n      inputMaxValue = 100;\n    }\n\n    const inputMiddle = (inputMinValue + inputMaxValue) / 2;\n    const inputValue = !!this.control && this.control.value !== undefined ? this.control.value : inputMiddle;\n    const valueAsPercent = (inputValue - inputMinValue) * 100 / (inputMaxValue - inputMinValue);\n\n    return valueAsPercent * inputWidth / 100 + 'px';\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Optional, ViewContainerRef, Renderer2, ElementRef, Injector, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrRangeContainer } from './range-container';\n\n@Directive({ selector: '[clrRange]', host: { '[class.clr-range]': 'true' } })\nexport class ClrRange extends WrappedFormControl<ClrRangeContainer> {\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrRangeContainer, injector, control, renderer, el);\n  }\n\n  // Notes: We need an output here EventEmitter for the value\n  // Does this implementation also need a display for the value?\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\nimport { ClrRange } from './range';\nimport { ClrRangeContainer } from './range-container';\n\n@NgModule({\n  imports: [CommonModule, ClrCommonFormsModule, ClrHostWrappingModule, ClrIconModule],\n  declarations: [ClrRange, ClrRangeContainer],\n  exports: [ClrCommonFormsModule, ClrRange, ClrRangeContainer],\n  entryComponents: [ClrRangeContainer],\n})\nexport class ClrRangeModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nlet counter = 0;\n\n@Injectable()\nexport class DatalistIdService {\n  private _id = 'clr-datalist-' + ++counter;\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value;\n    this._idChange.next(value);\n  }\n\n  private _idChange: BehaviorSubject<string> = new BehaviorSubject(this._id);\n  public get idChange(): Observable<string> {\n    return this._idChange.asObservable();\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional } from '@angular/core';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { DatalistIdService } from './providers/datalist-id.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-datalist-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n      <div class=\"clr-input-wrapper\">\n        <div class=\"clr-input-group\" [class.clr-focus]=\"focus\">\n          <ng-content select=\"[clrDatalistInput]\"></ng-content>\n          <ng-content select=\"datalist\"></ng-content>\n        </div>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n      </div>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n    </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [\n    ControlClassService,\n    LayoutService,\n    ControlIdService,\n    FocusService,\n    IfErrorService,\n    NgControlService,\n    DatalistIdService,\n  ],\n})\nexport class ClrDatalistContainer extends ClrAbstractContainer {\n  focus: boolean = false;\n\n  constructor(\n    controlClassService: ControlClassService,\n    @Optional() layoutService: LayoutService,\n    ifErrorService: IfErrorService,\n    ngControlService: NgControlService,\n    private focusService: FocusService\n  ) {\n    super(ifErrorService, layoutService, controlClassService, ngControlService);\n\n    this.subscriptions.push(this.focusService.focusChange.subscribe(state => (this.focus = state)));\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Directive,\n  ViewContainerRef,\n  Injector,\n  Self,\n  Optional,\n  Renderer2,\n  ElementRef,\n  HostListener,\n  AfterContentInit,\n} from '@angular/core';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrDatalistContainer } from './datalist-container';\nimport { NgControl } from '@angular/forms';\nimport { FocusService } from '../common/providers/focus.service';\nimport { DatalistIdService } from './providers/datalist-id.service';\n\n@Directive({\n  selector: '[clrDatalistInput]',\n  host: {\n    '[class.clr-input]': 'true',\n    '[attr.list]': 'listValue',\n  },\n})\nexport class ClrDatalistInput extends WrappedFormControl<ClrDatalistContainer> implements AfterContentInit {\n  constructor(\n    @Optional() private focusService: FocusService,\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef,\n    private datalistIdService: DatalistIdService\n  ) {\n    super(vcr, ClrDatalistContainer, injector, control, renderer, el);\n\n    if (!this.focusService) {\n      throw new Error('clrDatalist requires being wrapped in <clr-datalist-container>');\n    }\n  }\n\n  listValue: string;\n\n  ngAfterContentInit() {\n    // Subscriptions is inherited from WrappedFormControl, unsubscribe is handled there\n    this.subscriptions.push(this.datalistIdService.idChange.subscribe(id => (this.listValue = id)));\n  }\n\n  @HostListener('focus')\n  triggerFocus() {\n    if (this.focusService) {\n      this.focusService.focused = true;\n    }\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    super.triggerValidation();\n    if (this.focusService) {\n      this.focusService.focused = false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Input, Directive, AfterContentInit, Optional } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { DatalistIdService } from './providers/datalist-id.service';\n\n@Directive({\n  selector: 'datalist',\n  host: {\n    '[id]': 'datalistId',\n  },\n})\nexport class ClrDatalist implements AfterContentInit {\n  private subscriptions: Subscription[] = [];\n  constructor(@Optional() private datalistIdService: DatalistIdService) {}\n  datalistId: string;\n\n  ngAfterContentInit() {\n    if (!this.datalistIdService) {\n      return;\n    }\n    this.subscriptions.push(this.datalistIdService.idChange.subscribe(id => (this.datalistId = id)));\n  }\n  @Input()\n  set id(idValue) {\n    if (!!idValue && this.datalistIdService) {\n      this.datalistId = idValue;\n      this.datalistIdService.id = idValue;\n    } else if (!!idValue) {\n      this.datalistId = idValue;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrDatalistInput } from './datalist-input';\nimport { ClrInputModule } from '../input/input.module';\nimport { ClrDatalistContainer } from './datalist-container';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrDatalist } from './datalist';\n\n@NgModule({\n  imports: [CommonModule, ClrInputModule, ClrIconModule],\n  declarations: [ClrDatalist, ClrDatalistInput, ClrDatalistContainer],\n  exports: [ClrDatalist, ClrDatalistInput, ClrDatalistContainer],\n})\nexport class ClrDatalistModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrCheckboxModule } from './checkbox/checkbox.module';\nimport { ClrCommonFormsModule } from './common/common.module';\nimport { ClrDatepickerModule } from './datepicker/datepicker.module';\nimport { ClrInputModule } from './input/input.module';\nimport { ClrPasswordModule } from './password/password.module';\nimport { ClrRadioModule } from './radio/radio.module';\nimport { ClrSelectModule } from './select/select.module';\nimport { ClrTextareaModule } from './textarea/textarea.module';\nimport { ClrRangeModule } from './range/range.module';\nimport { ClrDatalistModule } from './datalist/datalist.module';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    ClrCommonFormsModule,\n    ClrCheckboxModule,\n    ClrDatepickerModule,\n    ClrInputModule,\n    ClrPasswordModule,\n    ClrRadioModule,\n    ClrSelectModule,\n    ClrTextareaModule,\n    ClrRangeModule,\n    ClrDatalistModule,\n  ],\n})\nexport class ClrFormsModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrLoading } from './loading';\n\nexport const CLR_LOADING_DIRECTIVES: Type<any>[] = [ClrLoading];\n\n@NgModule({ imports: [CommonModule], declarations: [CLR_LOADING_DIRECTIVES], exports: [CLR_LOADING_DIRECTIVES] })\nexport class ClrLoadingModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';\n\n@Directive({ selector: '[clrOutsideClick]' })\nexport class OutsideClick {\n  constructor(private el: ElementRef) {}\n\n  @Input('clrStrict') strict = false;\n\n  @Output('clrOutsideClick') outsideClick = new EventEmitter<any>(false);\n\n  @HostListener('document:click', ['$event'])\n  documentClick(event: MouseEvent) {\n    const target = event.target; // Get the element in the DOM on which the mouse was clicked\n    const host = this.el.nativeElement; // Get the current actionMenu native HTML element\n\n    if (target === host) {\n      return;\n    }\n    if (!this.strict && host.contains(target)) {\n      return;\n    }\n    this.outsideClick.emit(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\nimport { OutsideClick } from './outside-click';\n\nexport * from './outside-click';\n\nexport const OUSTIDE_CLICK_DIRECTIVES: Type<any>[] = [OutsideClick];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OUSTIDE_CLICK_DIRECTIVES } from './index';\n\n@NgModule({ imports: [CommonModule], declarations: [OUSTIDE_CLICK_DIRECTIVES], exports: [OUSTIDE_CLICK_DIRECTIVES] })\nexport class ClrOutsideClickModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * If we someday want to be able to render the datagrid in a webworker,\n * this is where we would test if we're in headless mode. Right now it's not testing anything, but any access\n * to native DOM elements' methods and properties in the Datagrid happens here.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DomAdapter {\n  userDefinedWidth(element: HTMLElement): number {\n    element.classList.add('datagrid-cell-width-zero');\n    const userDefinedWidth = this.clientRect(element).width;\n    element.classList.remove('datagrid-cell-width-zero');\n    return userDefinedWidth;\n  }\n\n  scrollBarWidth(element: any) {\n    return element.offsetWidth - element.clientWidth;\n  }\n\n  scrollWidth(element: any) {\n    return element.scrollWidth || 0;\n  }\n\n  computedHeight(element: any): number {\n    return parseInt(getComputedStyle(element).getPropertyValue('height'), 10);\n  }\n\n  clientRect(element: any): ClientRect {\n    const elementClientRect = element.getBoundingClientRect();\n    return {\n      top: parseInt(elementClientRect.top, 10),\n      bottom: parseInt(elementClientRect.bottom, 10),\n      left: parseInt(elementClientRect.left, 10),\n      right: parseInt(elementClientRect.right, 10),\n      width: parseInt(elementClientRect.width, 10),\n      height: parseInt(elementClientRect.height, 10),\n    };\n  }\n\n  minWidth(element: any): number {\n    return parseInt(getComputedStyle(element).getPropertyValue('min-width'), 10);\n  }\n\n  focus(element: any): void {\n    element.focus();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DragEventInterface, DragPointPosition } from './interfaces/drag-event.interface';\n\n// This class is used to convert an internal event\n// to an external event to be emitted.\nexport class ClrDragEvent<T> {\n  public dragPosition: DragPointPosition;\n  public group: string | string[];\n  public dragDataTransfer: T;\n  public dropPointPosition: { pageX: number; pageY: number };\n\n  constructor(dragEvent: DragEventInterface<T>) {\n    this.dragPosition = dragEvent.dragPosition;\n    this.group = dragEvent.group;\n    this.dragDataTransfer = dragEvent.dragDataTransfer;\n    this.dropPointPosition = dragEvent.dropPointPosition;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport enum DragEventType {\n  DRAG_START,\n  DRAG_MOVE,\n  DRAG_END,\n  DRAG_ENTER,\n  DRAG_LEAVE,\n  DROP,\n}\n\nexport interface DragPointPosition {\n  pageX: number;\n  pageY: number;\n  moveX: number;\n  moveY: number;\n}\n\nexport interface DragEventInterface<T> {\n  type: DragEventType;\n  group?: string | string[];\n  ghostElement?: any;\n  dragPosition: DragPointPosition;\n  dragDataTransfer?: T;\n  // For default ghosts, this dropPointPosition denotes the center point of the ghost element.\n  // This center point is used to determine whether the ghost is over droppable elements or not.\n  dropPointPosition?: { pageX: number; pageY: number };\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { DragEventInterface, DragEventType } from '../interfaces/drag-event.interface';\n\n@Injectable({ providedIn: 'root' })\nexport class DragAndDropEventBusService<T> {\n  private dragStart: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragMove: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragEnd: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private drop: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n\n  get dragStarted(): Observable<DragEventInterface<T>> {\n    return this.dragStart.asObservable();\n  }\n\n  get dragMoved(): Observable<DragEventInterface<T>> {\n    return this.dragMove.asObservable();\n  }\n\n  get dragEnded(): Observable<DragEventInterface<T>> {\n    return this.dragEnd.asObservable();\n  }\n\n  get dropped(): Observable<DragEventInterface<T>> {\n    return this.drop.asObservable();\n  }\n\n  broadcast(event: DragEventInterface<T>): void {\n    switch (event.type) {\n      case DragEventType.DRAG_START:\n        this.dragStart.next(event);\n        break;\n      case DragEventType.DRAG_MOVE:\n        this.dragMove.next(event);\n        break;\n      case DragEventType.DRAG_END:\n        this.dragEnd.next(event);\n        break;\n      case DragEventType.DROP:\n        this.drop.next(event);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, NgZone, Renderer2 } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { DragEventInterface, DragEventType } from '../interfaces/drag-event.interface';\nimport { DragAndDropEventBusService } from './drag-and-drop-event-bus.service';\n\n@Injectable()\nexport class DragEventListenerService<T> {\n  private draggableEl: any;\n\n  // contains the starting events such as mousedown and touchstart\n  private listeners: (() => void)[];\n  // contains the nested events that happens after/inside the starting events\n  // such as selectstart, mousemove/touchmove, mouseup/touchend\n  private nestedListeners: (() => void)[];\n\n  private dragStart: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragMove: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragEnd: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n\n  private hasDragStarted: boolean = false;\n\n  get dragStarted(): Observable<DragEventInterface<T>> {\n    return this.dragStart.asObservable();\n  }\n\n  get dragMoved(): Observable<DragEventInterface<T>> {\n    return this.dragMove.asObservable();\n  }\n\n  get dragEnded(): Observable<DragEventInterface<T>> {\n    return this.dragEnd.asObservable();\n  }\n\n  constructor(private ngZone: NgZone, private renderer: Renderer2, private eventBus: DragAndDropEventBusService<T>) {}\n\n  private initialPosition: { pageX: number; pageY: number };\n\n  // Draggable component sets these properties:\n  public dragDataTransfer?: T;\n  public group?: string | string[];\n\n  // DraggableGhost component sets these properties:\n  public ghostElement?: any;\n  public dropPointPosition?: { pageX: number; pageY: number };\n\n  public attachDragListeners(draggableEl: Node) {\n    this.draggableEl = draggableEl;\n    this.listeners = [\n      this.customDragEvent(this.draggableEl, 'mousedown', 'mousemove', 'mouseup'),\n      this.customDragEvent(this.draggableEl, 'touchstart', 'touchmove', 'touchend'),\n    ];\n  }\n\n  public detachDragListeners() {\n    if (this.listeners) {\n      this.listeners.map(event => event());\n    }\n\n    // In most cases, once users start dragging with mousedown/touchstart events,\n    // they will end dragging at one point with mouseup/touchend.\n    // However, there might be a few cases where mousedown/touchstart events get registered,\n    // but the draggable element gets removed before user ends dragging.\n    // In that case, we need to remove the attached listeners that happened during the mousedown/touchstart events.\n    if (this.nestedListeners) {\n      this.nestedListeners.map(event => event());\n    }\n  }\n\n  private getNativeEventObject(event: MouseEvent | TouchEvent): any {\n    if ((<TouchEvent>event).hasOwnProperty('changedTouches')) {\n      return (<TouchEvent>event).changedTouches[0];\n    } else {\n      return event;\n    }\n  }\n\n  private customDragEvent(element: Node, startOnEvent: string, moveOnEvent: string, endOnEvent: string): () => void {\n    return this.renderer.listen(element, startOnEvent, (startEvent: MouseEvent | TouchEvent) => {\n      // save the initial point to initialPosition\n      // this will be used to calculate how far the draggable has been dragged from its initial position\n      this.initialPosition = {\n        pageX: this.getNativeEventObject(startEvent).pageX,\n        pageY: this.getNativeEventObject(startEvent).pageY,\n      };\n\n      // Initialize nested listeners' property with a new empty array;\n      this.nestedListeners = [];\n\n      // This is needed to disable selection during dragging (especially in EDGE/IE11).\n      this.nestedListeners.push(\n        this.renderer.listen('document', 'selectstart', (selectEvent: Event) => {\n          selectEvent.preventDefault();\n          selectEvent.stopImmediatePropagation();\n        })\n      );\n\n      // Listen to mousemove/touchmove events outside of angular zone.\n      this.nestedListeners.push(\n        this.ngZone.runOutsideAngular(() => {\n          return this.renderer.listen('document', moveOnEvent, (moveEvent: MouseEvent | TouchEvent) => {\n            // Event.stopImmediatePropagation() is needed here to prevent nested draggables from getting dragged\n            // altogether. We shouldn't use Event.stopPropagation() here as we are listening to the events\n            // on the global element level.\n\n            // With Event.stopImmediatePropagation(), it registers the events sent from the inner most draggable\n            // first. Then immediately after that, it stops listening to the same type of events on the same\n            // element. So this will help us to not register the same events that would come from the parent\n            // level draggables eventually.\n\n            moveEvent.stopImmediatePropagation();\n\n            if (!this.hasDragStarted) {\n              this.hasDragStarted = true;\n              // Fire \"dragstart\"\n              this.broadcast(moveEvent, DragEventType.DRAG_START);\n            } else {\n              // Fire \"dragmove\"\n              this.broadcast(moveEvent, DragEventType.DRAG_MOVE);\n            }\n          });\n        })\n      );\n\n      // Listen to mouseup/touchend events.\n      this.nestedListeners.push(\n        this.renderer.listen('document', endOnEvent, (endEvent: MouseEvent | TouchEvent) => {\n          if (this.hasDragStarted) {\n            // Fire \"dragend\" only if dragstart is registered\n            this.hasDragStarted = false;\n            this.broadcast(endEvent, DragEventType.DRAG_END);\n          }\n\n          // We must remove the the nested listeners every time drag completes.\n          if (this.nestedListeners) {\n            this.nestedListeners.map(event => event());\n          }\n        })\n      );\n    });\n  }\n\n  private broadcast(event: MouseEvent | TouchEvent, eventType: DragEventType): void {\n    const dragEvent: DragEventInterface<T> = this.generateDragEvent(event, eventType);\n\n    switch (dragEvent.type) {\n      case DragEventType.DRAG_START:\n        this.dragStart.next(dragEvent);\n        break;\n      case DragEventType.DRAG_MOVE:\n        this.dragMove.next(dragEvent);\n        break;\n      case DragEventType.DRAG_END:\n        this.dragEnd.next(dragEvent);\n        break;\n      default:\n        break;\n    }\n\n    // The following properties are set after they are broadcasted to the DraggableGhost component.\n    dragEvent.ghostElement = this.ghostElement;\n    dragEvent.dropPointPosition = this.dropPointPosition;\n\n    this.eventBus.broadcast(dragEvent);\n  }\n\n  private generateDragEvent(event: MouseEvent | TouchEvent, eventType: DragEventType): DragEventInterface<T> {\n    const nativeEvent: any = this.getNativeEventObject(event);\n\n    return {\n      type: eventType,\n      dragPosition: {\n        pageX: nativeEvent.pageX,\n        pageY: nativeEvent.pageY,\n        moveX: nativeEvent.pageX - this.initialPosition.pageX,\n        moveY: nativeEvent.pageY - this.initialPosition.pageY,\n      },\n      group: this.group,\n      dragDataTransfer: this.dragDataTransfer,\n      ghostElement: this.ghostElement,\n    };\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { DragEventInterface } from '../interfaces/drag-event.interface';\n\n// This service is used to capture the state of clrDraggable element\n// at a certain event and passes it to clrDraggableGhost component.\n@Injectable()\nexport class DraggableSnapshotService<T> {\n  constructor(private domAdapter: DomAdapter) {}\n\n  private draggableElClientRect: ClientRect;\n  private snapshotDragEvent: DragEventInterface<T>;\n\n  public capture(el: Node, event: DragEventInterface<T>): void {\n    this.draggableElClientRect = this.domAdapter.clientRect(el);\n    this.snapshotDragEvent = event;\n  }\n  public discard(): void {\n    delete this.draggableElClientRect;\n    delete this.snapshotDragEvent;\n  }\n  get hasDraggableState(): boolean {\n    return !!this.snapshotDragEvent && !!this.draggableElClientRect;\n  }\n  get clientRect(): ClientRect {\n    return this.draggableElClientRect;\n  }\n  get dragEvent(): DragEventInterface<T> {\n    return this.snapshotDragEvent;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { Component, ElementRef, HostBinding, NgZone, OnDestroy, Optional, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DragEventInterface } from './interfaces/drag-event.interface';\nimport { DragEventListenerService } from './providers/drag-event-listener.service';\nimport { DraggableSnapshotService } from './providers/draggable-snapshot.service';\n\ntype PagePosition = {\n  pageX: number;\n  pageY: number;\n};\ntype OffsetPosition = {\n  top: number;\n  left: number;\n};\n\n@Component({\n  selector: 'clr-draggable-ghost',\n  template: `<ng-content></ng-content>`,\n  animations: [\n    trigger('leaveAnimation', [\n      transition(':leave', [\n        style({ left: '*', top: '*' }),\n        animate('0.2s ease-in-out', style({ top: '{{top}}', left: '{{left}}' })),\n      ]),\n    ]),\n  ],\n})\nexport class ClrDraggableGhost<T> implements OnDestroy {\n  private draggableGhostEl: any;\n\n  private subscriptions: Subscription[] = [];\n\n  @HostBinding('@leaveAnimation') leaveAnimConfig = { value: 0, params: { top: '0px', left: '0px' } };\n\n  constructor(\n    private el: ElementRef,\n    @Optional() private dragEventListener: DragEventListenerService<T>,\n    @Optional() private draggableSnapshot: DraggableSnapshotService<T>,\n    private renderer: Renderer2,\n    private ngZone: NgZone\n  ) {\n    if (!this.dragEventListener || !this.draggableSnapshot) {\n      throw new Error('The clr-draggable-ghost component can only be used inside of a clrDraggable directive.');\n    }\n\n    this.draggableGhostEl = this.el.nativeElement;\n\n    // Need to use Renderer2 as it runs outside of NgZone\n    this.renderer.addClass(this.draggableGhostEl, 'draggable-ghost');\n\n    // Register the ghost element in DragEventListener to pass in a ClrDragEvent.\n    this.dragEventListener.ghostElement = this.draggableGhostEl;\n\n    // Default ghost size gets the size of ClrDraggable element.\n    this.setDefaultGhostSize(this.draggableGhostEl);\n\n    const offset: OffsetPosition = {\n      top: this.draggableSnapshot.hasDraggableState\n        ? this.draggableSnapshot.dragEvent.dragPosition.pageY - this.draggableSnapshot.clientRect.top\n        : 0,\n      left: this.draggableSnapshot.hasDraggableState\n        ? this.draggableSnapshot.dragEvent.dragPosition.pageX - this.draggableSnapshot.clientRect.left\n        : 0,\n    };\n\n    let isAnimationConfigured: boolean = false;\n\n    this.subscriptions.push(\n      this.dragEventListener.dragMoved.subscribe((event: DragEventInterface<T>) => {\n        // On the first drag move event, we configure the animation as it's dependent on the first drag event.\n        if (!isAnimationConfigured) {\n          if (this.draggableSnapshot.hasDraggableState) {\n            this.animateToOnLeave(\n              `${this.draggableSnapshot.clientRect.top}px`,\n              `${this.draggableSnapshot.clientRect.left}px`\n            );\n          } else {\n            this.animateToOnLeave(`${event.dragPosition.pageY}px`, `${event.dragPosition.pageX}px`);\n          }\n          isAnimationConfigured = true;\n        }\n\n        // Position the draggable ghost.\n        const topLeftPosition: PagePosition = this.findTopLeftPosition(event.dragPosition, offset);\n        this.setPositionStyle(this.draggableGhostEl, topLeftPosition.pageX, topLeftPosition.pageY);\n        this.dragEventListener.dropPointPosition = this.findDropPointPosition(topLeftPosition);\n      })\n    );\n  }\n\n  private setDefaultGhostSize(el: Node): void {\n    if (this.draggableSnapshot.hasDraggableState) {\n      this.setSizeStyle(el, this.draggableSnapshot.clientRect.width, this.draggableSnapshot.clientRect.height);\n    }\n  }\n\n  private animateToOnLeave(top: string, left: string): void {\n    this.ngZone.run(() => {\n      this.leaveAnimConfig = { value: 0, params: { top: top, left: left } };\n    });\n  }\n\n  private findTopLeftPosition(dragPosition: PagePosition, offset: OffsetPosition): PagePosition {\n    return { pageX: dragPosition.pageX - offset.left, pageY: dragPosition.pageY - offset.top };\n  }\n\n  private findDropPointPosition(topLeftPosition: PagePosition): PagePosition {\n    if (this.draggableSnapshot.hasDraggableState) {\n      return {\n        pageX: topLeftPosition.pageX + this.draggableSnapshot.clientRect.width / 2,\n        pageY: topLeftPosition.pageY + this.draggableSnapshot.clientRect.height / 2,\n      };\n    } else {\n      return topLeftPosition;\n    }\n  }\n\n  private setSizeStyle(el: Node, width: number, height: number): void {\n    this.renderer.setStyle(el, 'width', `${width}px`);\n    this.renderer.setStyle(el, 'height', `${height}px`);\n  }\n\n  private setPositionStyle(el: Node, left: number, top: number): void {\n    this.renderer.setStyle(el, 'left', `${left}px`);\n    this.renderer.setStyle(el, 'top', `${top}px`);\n    this.renderer.setStyle(el, 'visibility', 'visible');\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, OnDestroy, Optional, SkipSelf, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DragEventInterface } from './interfaces/drag-event.interface';\nimport { DragEventListenerService } from './providers/drag-event-listener.service';\n\n// This structural directive will be used mainly together with `clr-draggable-ghost` directive inside of clrDraggable\n// directive. The directive is responsible for instantiating `clr-draggable-ghost` directive only during dragging so\n// that Angular Change Detection is prevented from running if a component or directive is placed inside of the\n// `clr-draggable-ghost` directive.\n\n@Directive({ selector: '[clrIfDragged]' })\nexport class ClrIfDragged<T> implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  constructor(\n    private template: TemplateRef<any>,\n    @Optional()\n    @SkipSelf()\n    private container: ViewContainerRef,\n    @Optional() private dragEventListener: DragEventListenerService<T>\n  ) {\n    if (!this.dragEventListener || !this.container) {\n      throw new Error('The *clrIfDragged directive can only be used inside of a clrDraggable directive.');\n    }\n\n    this.subscriptions.push(\n      this.dragEventListener.dragStarted.subscribe((event: DragEventInterface<T>) => {\n        this.container.createEmbeddedView(this.template);\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragEnded.subscribe((event: DragEventInterface<T>) => {\n        this.container.clear();\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Renderer2 } from '@angular/core';\n\nimport { DragEventListenerService } from './drag-event-listener.service';\n\n// This provider registers the drag handle element.\n// When it registers a element as a drag handle, it attaches that element to the listeners from ClrDragEventListener.\n// Also, it adds the \"drag-handle\" css class to the registered element through Renderer.\n@Injectable()\nexport class DragHandleRegistrarService<T> {\n  private _customHandleEl: any;\n  private _defaultHandleEl: any;\n\n  get defaultHandleEl() {\n    return this._defaultHandleEl;\n  }\n\n  set defaultHandleEl(el: Node) {\n    this._defaultHandleEl = el; // defaultHandleEl will be usually the clrDraggable element.\n\n    // If the customHandleEl has been registered,\n    // don't make the defaultHandleEl the drag handle yet until the customHandleEl is unregistered.\n    if (!this._customHandleEl) {\n      this.makeElementHandle(this._defaultHandleEl);\n    }\n  }\n\n  constructor(private dragEventListener: DragEventListenerService<T>, private renderer: Renderer2) {}\n\n  private makeElementHandle(el: Node) {\n    if (this._defaultHandleEl && this._defaultHandleEl !== el) {\n      // Before making an element the custom handle element,\n      // we should remove the existing drag-handle class from the draggable element.\n      this.renderer.removeClass(this._defaultHandleEl, 'drag-handle');\n    }\n    this.dragEventListener.attachDragListeners(el);\n    this.renderer.addClass(el, 'drag-handle');\n  }\n\n  get customHandleEl() {\n    return this._customHandleEl;\n  }\n\n  public registerCustomHandle(el: Node) {\n    this.dragEventListener.detachDragListeners(); // removes the existing listeners\n    this._customHandleEl = el;\n    this.makeElementHandle(this._customHandleEl);\n  }\n\n  public unregisterCustomHandle() {\n    this.dragEventListener.detachDragListeners(); // removes the existing listeners\n    this.renderer.removeClass(this._customHandleEl, 'drag-handle');\n    delete this._customHandleEl;\n    // if default handle is set, make that handle\n    if (this._defaultHandleEl) {\n      this.makeElementHandle(this._defaultHandleEl);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Renderer2 } from '@angular/core';\n\n// This service class adds and removes the \"in-drag\" class to the document body element\n// through its public enter() and exit() methods.\n@Injectable()\nexport class GlobalDragModeService {\n  constructor(private renderer: Renderer2) {}\n\n  enter(): void {\n    this.renderer.addClass(document.body, 'in-drag');\n  }\n\n  exit(): void {\n    this.renderer.removeClass(document.body, 'in-drag');\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  OnDestroy,\n  Output,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../drag-event';\nimport { ClrDraggableGhost } from '../draggable-ghost';\nimport { ClrIfDragged } from '../if-dragged';\nimport { DragEventInterface } from '../interfaces/drag-event.interface';\nimport { DragEventListenerService } from '../providers/drag-event-listener.service';\nimport { DragHandleRegistrarService } from '../providers/drag-handle-registrar.service';\nimport { DraggableSnapshotService } from '../providers/draggable-snapshot.service';\nimport { GlobalDragModeService } from '../providers/global-drag-mode.service';\n\n@Directive({\n  selector: '[clrDraggable]',\n  providers: [\n    DragEventListenerService,\n    DragHandleRegistrarService,\n    DraggableSnapshotService,\n    GlobalDragModeService,\n    DomAdapter,\n  ],\n  host: { '[class.draggable]': 'true', '[class.being-dragged]': 'dragOn' },\n})\nexport class ClrDraggable<T> implements AfterContentInit, OnDestroy {\n  private draggableEl: any;\n  private subscriptions: Subscription[] = [];\n  private componentFactory: ComponentFactory<ClrDraggableGhost<T>>;\n  public dragOn: boolean = false;\n\n  constructor(\n    private el: ElementRef,\n    private dragEventListener: DragEventListenerService<T>,\n    private dragHandleRegistrar: DragHandleRegistrarService<T>,\n    private viewContainerRef: ViewContainerRef,\n    private cfr: ComponentFactoryResolver,\n    private injector: Injector,\n    private draggableSnapshot: DraggableSnapshotService<T>,\n    private globalDragMode: GlobalDragModeService\n  ) {\n    this.draggableEl = this.el.nativeElement;\n    this.componentFactory = this.cfr.resolveComponentFactory<ClrDraggableGhost<T>>(ClrDraggableGhost);\n  }\n\n  @ContentChild(ClrIfDragged) customGhost: ClrIfDragged<T>;\n\n  @Input('clrDraggable')\n  set dataTransfer(value: T) {\n    this.dragEventListener.dragDataTransfer = value;\n  }\n\n  @Input('clrGroup')\n  set group(value: string | string[]) {\n    this.dragEventListener.group = value;\n  }\n\n  private createDefaultGhost(event: DragEventInterface<T>) {\n    this.draggableSnapshot.capture(this.draggableEl, event);\n    // NOTE: The default ghost element will appear\n    // next to the clrDraggable in the DOM as a sibling element.\n    this.viewContainerRef.createComponent(this.componentFactory, 0, this.injector, [\n      [this.draggableEl.cloneNode(true)],\n    ]);\n  }\n\n  private destroyDefaultGhost() {\n    this.viewContainerRef.clear();\n    this.draggableSnapshot.discard();\n  }\n\n  @Output('clrDragStart') dragStartEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragMove') dragMoveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnd') dragEndEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n\n  ngAfterContentInit() {\n    this.dragHandleRegistrar.defaultHandleEl = this.draggableEl;\n\n    this.subscriptions.push(\n      this.dragEventListener.dragStarted.subscribe((event: DragEventInterface<T>) => {\n        this.globalDragMode.enter();\n        this.dragOn = true;\n        if (!this.customGhost) {\n          this.createDefaultGhost(event);\n        }\n\n        this.dragStartEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragMoved.subscribe((event: DragEventInterface<T>) => {\n        this.dragMoveEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragEnded.subscribe((event: DragEventInterface<T>) => {\n        this.globalDragMode.exit();\n        this.dragOn = false;\n        if (!this.customGhost) {\n          this.destroyDefaultGhost();\n        }\n        this.dragEndEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    this.dragEventListener.detachDragListeners();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../drag-event';\nimport { DragEventInterface, DragEventType } from '../interfaces/drag-event.interface';\nimport { ClrDropToleranceInterface } from '../interfaces/drop-tolerance.interface';\nimport { DragAndDropEventBusService } from '../providers/drag-and-drop-event-bus.service';\n\n@Directive({\n  selector: '[clrDroppable]',\n  providers: [DomAdapter],\n  host: { '[class.droppable]': 'true', '[class.draggable-match]': 'isDraggableMatch' },\n})\nexport class ClrDroppable<T> implements OnInit, OnDestroy {\n  private dragStartSubscription: Subscription;\n  private dragMoveSubscription: Subscription;\n  private dragEndSubscription: Subscription;\n\n  private droppableEl: any;\n  private clientRect: ClientRect;\n\n  constructor(\n    private el: ElementRef,\n    private eventBus: DragAndDropEventBusService<T>,\n    private domAdapter: DomAdapter,\n    private renderer: Renderer2\n  ) {\n    this.droppableEl = this.el.nativeElement;\n  }\n\n  isDraggableMatch: boolean = false;\n  private _isDraggableOver: boolean = false;\n\n  set isDraggableOver(value: boolean) {\n    // We need to add/remove this draggable-over class via Renderer2\n    // because isDraggableOver is set outside of NgZone.\n    if (value) {\n      this.renderer.addClass(this.droppableEl, 'draggable-over');\n    } else {\n      this.renderer.removeClass(this.droppableEl, 'draggable-over');\n    }\n    this._isDraggableOver = value;\n  }\n\n  private _group: string | string[];\n\n  @Input('clrGroup')\n  set group(value: string | string[]) {\n    this._group = value;\n  }\n\n  private _dropTolerance: ClrDropToleranceInterface = { top: 0, right: 0, bottom: 0, left: 0 };\n\n  private dropToleranceGenerator(top = 0, right = top, bottom = top, left = right): ClrDropToleranceInterface {\n    return { top, right, bottom, left };\n  }\n\n  @Input('clrDropTolerance')\n  set dropTolerance(value: number | string | ClrDropToleranceInterface) {\n    // If user provides an object here and wants to manipulate/update properties individually,\n    // the object must be immutable as we generate new object based user's given object.\n    if (typeof value === 'number') {\n      this._dropTolerance = this.dropToleranceGenerator(value);\n    } else if (typeof value === 'string') {\n      const toleranceValues = value\n        .trim()\n        .split(/\\s+/)\n        .map(tolerance => parseInt(tolerance, 10));\n      this._dropTolerance = this.dropToleranceGenerator(...toleranceValues);\n    } else if (value) {\n      // The value could be passed in as {left: 20, top: 30 }\n      // In this case, the rest of the direction properties should be 0.\n      // That's why we initialize properties with 0 first, then override with user's given value.\n      this._dropTolerance = { ...this.dropToleranceGenerator(0), ...value };\n    }\n  }\n\n  @Output('clrDragStart') dragStartEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragMove') dragMoveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnd') dragEndEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragLeave') dragLeaveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnter') dragEnterEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDrop') dropEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n\n  private unsubscribeFrom(subscription: Subscription): void {\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n  }\n\n  private checkGroupMatch(draggableGroup: string | string[]): boolean {\n    // Both Draggable and Droppable have clrGroup input.\n    // The clrGroup input can be both a string key or array of string keys in Draggable and Droppable.\n\n    // It's not match if Draggable has no defined value assigned to clrGroup, but Droppable has a defined clrGroup.\n    if (!draggableGroup && this._group) {\n      return false;\n    }\n    // The same is true the other way round.\n    if (!this._group && draggableGroup) {\n      return false;\n    }\n\n    // It's match if both Draggable and Droppable have no assigned value for clrGroup.\n    if (!this._group && !draggableGroup) {\n      return true;\n    }\n\n    // It's match if both Draggable and Droppable have simple string keys that are matching.\n    // It's match if Draggable's simple clrGroup key is matching with one of the clrGroup keys of Droppable. The\n    // same is true the other way round.\n    // it's match if one of the clrGroup keys of Droppable is matching with one of the clrGroup keys of Draggable.\n    if (typeof draggableGroup === 'string') {\n      if (typeof this._group === 'string') {\n        return this._group === draggableGroup;\n      } else {\n        return this._group.indexOf(draggableGroup) > -1;\n      }\n    } else {\n      if (typeof this._group === 'string') {\n        return draggableGroup.indexOf(this._group) > -1;\n      } else {\n        return (this._group as string[]).some(groupKey => draggableGroup.indexOf(groupKey) > -1);\n      }\n    }\n  }\n\n  private isInDropArea(point: { pageX: number; pageY: number }): boolean {\n    if (!point) {\n      return false;\n    }\n\n    if (!this.clientRect) {\n      this.clientRect = this.domAdapter.clientRect(this.droppableEl);\n    }\n\n    if (\n      point.pageX >= this.clientRect.left - this._dropTolerance.left &&\n      point.pageX <= this.clientRect.right + this._dropTolerance.right &&\n      point.pageY >= this.clientRect.top - this._dropTolerance.top &&\n      point.pageY <= this.clientRect.bottom + this._dropTolerance.bottom\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private onDragStart(dragStartEvent: DragEventInterface<T>): void {\n    // Check draggable and droppable have a matching group key.\n    this.isDraggableMatch = this.checkGroupMatch(dragStartEvent.group);\n\n    // Subscribe to dragMoved and dragEnded only if draggable and droppable have a matching group key.\n    if (this.isDraggableMatch) {\n      this.dragStartEmitter.emit(new ClrDragEvent(dragStartEvent));\n      this.dragMoveSubscription = this.eventBus.dragMoved.subscribe((dragMoveEvent: DragEventInterface<T>) => {\n        this.onDragMove(dragMoveEvent);\n      });\n      this.dragEndSubscription = this.eventBus.dragEnded.subscribe((dragEndEvent: DragEventInterface<T>) => {\n        this.onDragEnd(dragEndEvent);\n      });\n    }\n  }\n\n  private onDragMove(dragMoveEvent: DragEventInterface<T>): void {\n    const isInDropArea = this.isInDropArea(dragMoveEvent.dropPointPosition);\n    if (!this._isDraggableOver && isInDropArea) {\n      this.isDraggableOver = true;\n      const dragEnterEvent = { ...dragMoveEvent, type: DragEventType.DRAG_ENTER };\n      this.eventBus.broadcast(dragEnterEvent);\n      this.dragEnterEmitter.emit(new ClrDragEvent(dragEnterEvent));\n    } else if (this._isDraggableOver && !isInDropArea) {\n      this.isDraggableOver = false;\n      const dragLeaveEvent = { ...dragMoveEvent, type: DragEventType.DRAG_LEAVE };\n      this.eventBus.broadcast(dragLeaveEvent);\n      this.dragLeaveEmitter.emit(new ClrDragEvent(dragLeaveEvent));\n    }\n\n    this.dragMoveEmitter.emit(new ClrDragEvent(dragMoveEvent));\n  }\n\n  private onDragEnd(dragEndEvent: DragEventInterface<T>): void {\n    if (this._isDraggableOver) {\n      if (dragEndEvent.ghostElement) {\n        // By this point, the draggable ghost component is destroyed,\n        // but the element would be active until its animation completes.\n        // As such, once the ghost is dropped over, we will give it \"dropped\" class.\n\n        // This process cannot be done in the ghost component\n        // because any subscription to the drop event is ineffective or invalid\n        // as the component had been already destroyed.\n        this.renderer.addClass(dragEndEvent.ghostElement, 'dropped');\n      }\n\n      const dropEvent = { ...dragEndEvent, type: DragEventType.DROP };\n      this.eventBus.broadcast(dropEvent);\n      this.dropEmitter.emit(new ClrDragEvent(dropEvent));\n      this.isDraggableOver = false;\n    }\n    this.dragEndEmitter.emit(new ClrDragEvent(dragEndEvent));\n    this.unsubscribeFrom(this.dragMoveSubscription);\n    this.unsubscribeFrom(this.dragEndSubscription);\n    this.isDraggableMatch = false;\n    delete this.clientRect;\n  }\n\n  ngOnInit() {\n    this.dragStartSubscription = this.eventBus.dragStarted.subscribe((dragStartEvent: DragEventInterface<T>) => {\n      this.onDragStart(dragStartEvent);\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeFrom(this.dragStartSubscription);\n    this.unsubscribeFrom(this.dragMoveSubscription);\n    this.unsubscribeFrom(this.dragEndSubscription);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, OnDestroy, Optional } from '@angular/core';\nimport { DragHandleRegistrarService } from './providers/drag-handle-registrar.service';\n\n@Directive({ selector: '[clrDragHandle]', host: { '[class.drag-handle]': 'true' } })\nexport class ClrDragHandle<T> implements OnDestroy {\n  constructor(private el: ElementRef, @Optional() private dragHandleRegistrar: DragHandleRegistrarService<T>) {\n    if (!this.dragHandleRegistrar) {\n      // ClrDragHandleRegistrar is provided in ClrDraggable so we expect it to be present here\n      // as clrDragHandle is required to be used only inside of a clrDraggable directive.\n      throw new Error('The clrDragHandle directive can only be used inside of a clrDraggable directive.');\n    }\n    this.dragHandleRegistrar.registerCustomHandle(this.el.nativeElement);\n  }\n\n  ngOnDestroy() {\n    this.dragHandleRegistrar.unregisterCustomHandle();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrDraggable } from './draggable/draggable';\nimport { ClrDroppable } from './droppable/droppable';\nimport { ClrIfDragged } from './if-dragged';\nimport { ClrDragHandle } from './drag-handle';\nimport { ClrDraggableGhost } from './draggable-ghost';\n\nexport const CLR_DRAG_AND_DROP_DIRECTIVES: Type<any>[] = [\n  ClrDraggable,\n  ClrDroppable,\n  ClrIfDragged,\n  ClrDragHandle,\n  ClrDraggableGhost,\n];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_DRAG_AND_DROP_DIRECTIVES],\n  entryComponents: [ClrDraggableGhost],\n  exports: [CLR_DRAG_AND_DROP_DIRECTIVES],\n})\nexport class ClrDragAndDropModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ElementRef, HostBinding, HostListener, Input } from '@angular/core';\n\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\n\n@Component({\n  selector: 'clr-expandable-animation',\n  template: `\n    <ng-content></ng-content>\n  `,\n  styles: [\n    `\n    :host {\n      display: block;\n    }\n  `,\n  ],\n  animations: [\n    trigger('expandAnimation', [\n      transition('true <=> false', [\n        style({ height: '{{startHeight}}px', overflow: 'hidden' }),\n        animate('0.2s ease-in-out', style({ height: '*' })),\n      ]),\n    ]),\n  ],\n  providers: [DomAdapter],\n})\nexport class ClrExpandableAnimation {\n  @Input() clrExpandTrigger: any;\n\n  startHeight: number = 0;\n\n  constructor(private element: ElementRef, private domAdapter: DomAdapter) {}\n\n  @HostBinding('@expandAnimation')\n  get expandAnimation() {\n    return { value: this.clrExpandTrigger, params: { startHeight: this.startHeight } };\n  }\n\n  @HostListener('@expandAnimation.done')\n  animationDone() {\n    // A \"safe\" auto-update of the height ensuring basic OOTB user experience .\n    // Prone to small jumps in initial animation height if data was changed in the meantime, window was resized, etc.\n    // For optimal behavior call manually updateStartHeight() from the parent component before initiating the update.\n    this.updateStartHeight();\n  }\n\n  updateStartHeight() {\n    this.startHeight = this.domAdapter.computedHeight(this.element.nativeElement) || 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\n\nimport { ClrExpandableAnimation } from './expandable-animation';\n\nexport * from './expandable-animation';\n\nexport const EXPANDABLE_ANIMATION_DIRECTIVES: Type<any>[] = [ClrExpandableAnimation];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { EXPANDABLE_ANIMATION_DIRECTIVES } from './index';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [EXPANDABLE_ANIMATION_DIRECTIVES],\n  exports: [EXPANDABLE_ANIMATION_DIRECTIVES],\n})\nexport class ClrExpandableAnimationModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input, HostBinding, ElementRef, AfterViewInit } from '@angular/core';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\nimport { ClrAriaLiveService, ClrAriaLivePoliteness } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  selector: 'clr-spinner',\n  providers: [ClrAriaLiveService],\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[attr.aria-busy]': 'true',\n  },\n})\nexport class ClrSpinner implements AfterViewInit {\n  constructor(private el: ElementRef, private ariaLiveService: ClrAriaLiveService) {}\n\n  ngAfterViewInit() {\n    this.ariaLiveService.announce(this.el.nativeElement, this.ariaLive);\n  }\n\n  /**\n   * Default class for all spinners. This class is always true\n   */\n  @HostBinding('class.spinner')\n  get spinnerClass() {\n    return true;\n  }\n\n  // Style\n  private _inline: boolean;\n  @HostBinding('class.spinner-inline')\n  get inlineClass() {\n    return this._inline;\n  }\n\n  @Input('clrInline')\n  set clrInline(value: boolean | string) {\n    this._inline = isBooleanAttributeSet(value);\n  }\n\n  private _inverse: boolean;\n  @HostBinding('class.spinner-inverse')\n  get inverseClass() {\n    return this._inverse;\n  }\n\n  @Input('clrInverse')\n  set clrInverse(value: boolean | string) {\n    this._inverse = isBooleanAttributeSet(value);\n  }\n\n  // Size\n  /**\n   * By default all spinners are Large. (spinner-lg)\n   * To change the size you need to use set clrSmall or clrMedium to TRUE/\n   */\n\n  /**\n   * Small\n   */\n  private _small: boolean;\n  @HostBinding('class.spinner-sm')\n  get smallClass() {\n    return this._small;\n  }\n\n  @Input('clrSmall')\n  set clrSmall(value: boolean | string) {\n    this._small = isBooleanAttributeSet(value);\n  }\n\n  /**\n   * When clrSmall & clrMedium are set both to true.\n   * The CSS with high priority will be small - so medium size will be ignored.\n   *\n   * For this reason if clrSmall is set we won't add clrMedium class.\n   *\n   * NOTE: This is dictated by the CSS rules.\n   * DON'T USE clrSmall & clrMedium to toggle classes. This could change without notice.\n   *\n   * Also there is no logical need to have both of them set to TRUE or FALSE.\n   */\n  private _medium: boolean;\n  @HostBinding('class.spinner-md')\n  get mediumClass() {\n    if (this._small) {\n      return false;\n    }\n    return this._medium;\n  }\n\n  @Input('clrMedium')\n  set clrMedium(value: boolean | string) {\n    this._medium = isBooleanAttributeSet(value);\n  }\n\n  // Aria Live\n\n  /**\n   * By default aria-live will be set to `polite` .\n   * To change is it you need to set clrAssertive or clrOff to TRUE\n   *\n   * There is priority:\n   *   Default: polite\n   *   Asertive\n   *   Off\n   *\n   * In case when for some reason you have clrAssertive=TRUE and clrOff=TRUE,\n   * we gonna set `assertive` as value of aria-live.\n   *\n   */\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrAssertive') assertive: boolean;\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrOff') off: boolean;\n  get ariaLive(): ClrAriaLivePoliteness {\n    if (isBooleanAttributeSet(this.assertive)) {\n      return ClrAriaLivePoliteness.assertive;\n    }\n    if (isBooleanAttributeSet(this.off)) {\n      return ClrAriaLivePoliteness.off;\n    }\n    return ClrAriaLivePoliteness.polite;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrSpinner } from './spinner';\n\nexport const CLR_SPINNER_DIRECTIVES: Type<any>[] = [ClrSpinner];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_SPINNER_DIRECTIVES],\n  exports: [CLR_SPINNER_DIRECTIVES],\n})\nexport class ClrSpinnerModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nexport const FOCUS_ON_VIEW_INIT = new InjectionToken<boolean>('FOCUS_ON_VIEW_INIT');\n\n// This provider holds the default value for clrFocusOnViewInit directive's isEnabled property.\n// So users can interject this provider and set their own value for this provider.\nexport const FOCUS_ON_VIEW_INIT_PROVIDER = {\n  provide: FOCUS_ON_VIEW_INIT,\n  useValue: true,\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Input,\n  PLATFORM_ID,\n  Renderer2,\n} from '@angular/core';\nimport { FOCUS_ON_VIEW_INIT } from './focus-on-view-init.provider';\n\n/*  This directive is for guiding the document focus to the newly added content when its view is initialized \n    so that assistive technologies can read its content. */\n@Directive({\n  selector: '[clrFocusOnViewInit]',\n})\nexport class ClrFocusOnViewInit implements AfterViewInit {\n  constructor(\n    private el: ElementRef,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(FOCUS_ON_VIEW_INIT) private focusOnViewInit: boolean,\n    @Inject(DOCUMENT) document: any,\n    private renderer: Renderer2\n  ) {\n    this._isEnabled = this.focusOnViewInit;\n\n    // Angular compiler doesn't understand the type Document\n    // when working out the metadata for injectable parameters,\n    // even though it understands the injection token DOCUMENT\n    // https://github.com/angular/angular/issues/20351\n    this.document = document;\n  }\n\n  private document: Document;\n  private directFocus = true; // true if the element gets focused without need to set tabindex;\n\n  @HostListener('focusout')\n  onFocusout() {\n    if (!this.directFocus) {\n      // manually set attributes and styles should be removed\n      this.renderer.removeAttribute(this.el.nativeElement, 'tabindex');\n      this.renderer.setStyle(this.el.nativeElement, 'outline', null);\n    }\n  }\n\n  private _isEnabled: boolean;\n  @Input('clrFocusOnViewInit')\n  set isEnabled(value: boolean) {\n    if (this.focusOnViewInit && typeof value === 'boolean') {\n      this._isEnabled = value;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.focus();\n  }\n\n  private focus() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!this._isEnabled) {\n      return;\n    }\n    if (this.document && this.document.activeElement !== this.el.nativeElement) {\n      this.el.nativeElement.focus();\n      if (this.document.activeElement !== this.el.nativeElement) {\n        // if it's not directly focused now, it means it was a non-interactive element\n        // so we need to give it a tabindex.\n        this.directFocus = false;\n        this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '-1');\n        this.renderer.setStyle(this.el.nativeElement, 'outline', 'none');\n        this.el.nativeElement.focus();\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrFocusOnViewInit } from './focus-on-view-init';\nimport { FOCUS_ON_VIEW_INIT_PROVIDER } from './focus-on-view-init.provider';\n\nexport const FOCUS_ON_VIEW_INIT_DIRECTIVES: Type<any>[] = [ClrFocusOnViewInit];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FOCUS_ON_VIEW_INIT_DIRECTIVES],\n  providers: [FOCUS_ON_VIEW_INIT_PROVIDER],\n  exports: [FOCUS_ON_VIEW_INIT_DIRECTIVES],\n})\nexport class ClrFocusOnViewInitModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport abstract class CustomFilter {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n/*\n * This provider implements some form of synchronous debouncing through a lock pattern\n * to avoid emitting multiple state changes for a single user action.\n */\n@Injectable()\nexport class StateDebouncer {\n  /**\n   * The Observable that lets other classes subscribe to global state changes\n   */\n  private _change = new Subject<void>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<void> {\n    return this._change.asObservable();\n  }\n\n  /*\n     * This is the lock, to only emit once all the changes have finished processing\n     */\n  private nbChanges = 0;\n\n  public changeStart() {\n    this.nbChanges++;\n  }\n\n  public changeDone() {\n    if (--this.nbChanges === 0) {\n      this._change.next();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class Page {\n  constructor(private stateDebouncer: StateDebouncer) {}\n\n  private preventEmit = false;\n  public activated = false;\n\n  /**\n   * Page size, a value of 0 means no pagination\n   */\n  private _size = 0;\n  public get size(): number {\n    return this._size;\n  }\n  public set size(size: number) {\n    const oldSize = this._size;\n    if (size !== oldSize) {\n      if (!this.preventEmit) {\n        this.stateDebouncer.changeStart();\n      }\n      this._size = size;\n      if (size === 0) {\n        this._current = 1;\n      } else {\n        // Yeap. That's the formula to keep the first item from the old page still\n        // displayed in the new one.\n        this._current = Math.floor(oldSize / size * (this._current - 1)) + 1;\n      }\n      // We always emit an event even if the current page index didn't change, because\n      // the size changing means the items inside the page are different\n      if (!this.preventEmit) {\n        this._change.next(this._current);\n        this._sizeChange.next(this._size);\n        this.stateDebouncer.changeDone();\n      }\n    }\n    this.preventEmit = false;\n  }\n\n  /**\n   * Total items (needed to guess the last page)\n   */\n  private _totalItems?: number;\n  public get totalItems(): number {\n    return this._totalItems || 0; // remains 0 if not set to avoid breaking change\n  }\n  public set totalItems(total: number) {\n    this._totalItems = total;\n    // If we have less items than before, we might need to change the current page\n    if (this.current > this.last) {\n      this.current = this.last;\n    }\n  }\n\n  /**\n   * Last page\n   */\n  private _last: number;\n  public get last(): number {\n    if (this._last) {\n      return this._last;\n    }\n    // If the last page isn't known, we compute it from the last item's index\n    if (this.size > 0 && this.totalItems) {\n      return Math.ceil(this.totalItems / this.size);\n    }\n    return 1;\n  }\n  public set last(page: number) {\n    this._last = page;\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to page changes\n   */\n  private _change = new Subject<number>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<number> {\n    return this._change.asObservable();\n  }\n\n  private _sizeChange = new Subject<number>();\n\n  public get sizeChange(): Observable<number> {\n    return this._sizeChange.asObservable();\n  }\n\n  /**\n   * Current page\n   */\n  private _current = 1;\n  public get current(): number {\n    return this._current;\n  }\n  public set current(page: number) {\n    if (page !== this._current) {\n      this.stateDebouncer.changeStart();\n      this._current = page;\n      this._change.next(page);\n      this.stateDebouncer.changeDone();\n    }\n  }\n\n  /**\n   * Moves to the previous page if it exists\n   */\n  public previous() {\n    if (this.current > 1) {\n      this.current--;\n    }\n  }\n\n  /**\n   * Moves to the next page if it exists\n   */\n  public next() {\n    if (this.current < this.last) {\n      this.current++;\n    }\n  }\n\n  /**\n   * Index of the first item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get firstItem(): number {\n    if (this._totalItems === 0) {\n      return -1;\n    }\n\n    if (this.size === 0) {\n      return 0;\n    }\n    return (this.current - 1) * this.size;\n  }\n\n  /**\n   * Index of the last item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get lastItem(): number {\n    if (this._totalItems === 0) {\n      return -1;\n    }\n\n    if (this.size === 0) {\n      return this.totalItems - 1;\n    }\n    let lastInPage = this.current * this.size - 1;\n    if (this.totalItems) {\n      lastInPage = Math.min(lastInPage, this.totalItems - 1);\n    }\n    return lastInPage;\n  }\n\n  /**\n   * Resets the page size to 0\n   */\n  public resetPageSize(preventEmit = false): void {\n    this.preventEmit = preventEmit;\n    this.size = 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrDatagridFilterInterface } from '../interfaces/filter.interface';\nimport { Page } from './page';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class FiltersProvider<T = any> {\n  constructor(private _page: Page, private stateDebouncer: StateDebouncer) {}\n  /**\n   * This subject is the list of filters that changed last, not the whole list.\n   * We emit a list rather than just one filter to allow batch changes to several at once.\n   */\n  private _change = new Subject<ClrDatagridFilterInterface<T>[]>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<ClrDatagridFilterInterface<T>[]> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * List of all filters, whether they're active or not\n   */\n  private _all: RegisteredFilter<T, ClrDatagridFilterInterface<T>>[] = [];\n\n  /**\n   * Tests if at least one filter is currently active\n   */\n  public hasActiveFilters(): boolean {\n    // We do not use getActiveFilters() because this function will be called much more often\n    // and stopping the loop early might be relevant.\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns a list of all currently active filters\n   */\n  public getActiveFilters(): ClrDatagridFilterInterface<T>[] {\n    const ret: ClrDatagridFilterInterface<T>[] = [];\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive()) {\n        ret.push(filter);\n      }\n    }\n    return ret;\n  }\n\n  /**\n   * Registers a filter, and returns a deregistration function\n   */\n  public add<F extends ClrDatagridFilterInterface<T>>(filter: F): RegisteredFilter<T, F> {\n    const subscription = filter.changes.subscribe(() => this.resetPageAndEmitFilterChange([filter]));\n    let hasUnregistered = false;\n    const registered = new RegisteredFilter(filter, () => {\n      if (hasUnregistered) {\n        return;\n      }\n      subscription.unsubscribe();\n      const matchIndex = this._all.findIndex(item => item.filter === filter);\n      if (matchIndex >= 0) {\n        this._all.splice(matchIndex, 1);\n      }\n      if (filter.isActive()) {\n        this.resetPageAndEmitFilterChange([]);\n      }\n      hasUnregistered = true;\n    });\n    this._all.push(registered);\n    if (filter.isActive()) {\n      this.resetPageAndEmitFilterChange([filter]);\n    }\n    return registered;\n  }\n\n  /**\n   * Accepts an item if it is accepted by all currently active filters\n   */\n  public accepts(item: T): boolean {\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive() && !filter.accepts(item)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private resetPageAndEmitFilterChange(filters: ClrDatagridFilterInterface<T>[]) {\n    this.stateDebouncer.changeStart();\n    // filtering may change the page number such that current page number doesn't exist in the filtered dataset.\n    // So here we always set the current page to 1 so that it'll fetch first page's data with the given filter.\n    this._page.current = 1;\n    this._change.next(filters);\n    this.stateDebouncer.changeDone();\n  }\n}\n\nexport class RegisteredFilter<T, F extends ClrDatagridFilterInterface<T>> {\n  constructor(public filter: F, public unregister: () => void) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { OnDestroy } from '@angular/core';\nimport { ClrDatagridFilterInterface } from '../interfaces/filter.interface';\nimport { FiltersProvider, RegisteredFilter } from '../providers/filters';\n\nexport abstract class DatagridFilterRegistrar<T, F extends ClrDatagridFilterInterface<T>> implements OnDestroy {\n  constructor(private filters: FiltersProvider<T>) {}\n\n  public registered: RegisteredFilter<T, F>;\n\n  public get filter(): F {\n    return this.registered && this.registered.filter;\n  }\n\n  public setFilter(filter: F | RegisteredFilter<T, F>) {\n    // If we previously had another filter, we unregister it\n    this.deleteFilter();\n    if (filter instanceof RegisteredFilter) {\n      this.registered = filter;\n    } else if (filter) {\n      this.registered = this.filters.add(filter);\n    }\n  }\n\n  public deleteFilter() {\n    if (this.registered) {\n      this.registered.unregister();\n      delete this.registered;\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.deleteFilter();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  Inject,\n  OnDestroy,\n  PLATFORM_ID,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\n\nimport { ClrDatagridFilterInterface } from './interfaces/filter.interface';\nimport { CustomFilter } from './providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from './providers/filters';\nimport { DatagridFilterRegistrar } from './utils/datagrid-filter-registrar';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { Subscription } from 'rxjs';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Custom filter that can be added in any column to override the default object property string filter.\n * The reason this is not just an input on DatagridColumn is because we need the filter's template to be projected,\n * since it can be anything (not just a text input).\n */\n@Component({\n  selector: 'clr-dg-filter',\n  // We register this component as a CustomFilter, for the parent column to detect it.\n  providers: [{ provide: CustomFilter, useExisting: ClrDatagridFilter }, UNIQUE_ID_PROVIDER],\n  template: `\n      <button class=\"datagrid-filter-toggle\"\n              type=\"button\"\n              #anchor\n              [attr.aria-label]=\"commonStrings.keys.datagridFilterAriaLabel\"\n              [attr.aria-expanded]=\"ariaExpanded\"\n              [attr.aria-controls]=\"popoverId\"\n              clrPopoverAnchor\n              clrPopoverOpenCloseButton\n              [class.datagrid-filter-open]=\"open\"\n              [class.datagrid-filtered]=\"active\">\n          <clr-icon [attr.shape]=\"active ? 'filter-grid-circle': 'filter-grid'\" class=\"is-solid\"></clr-icon>\n      </button>\n\n      <div class=\"datagrid-filter\"\n           [id]=\"popoverId\"\n           clrFocusTrap\n           *clrPopoverContent=\"open at smartPosition; outsideClickToClose: true; scrollToClose: true\">\n          <div class=\"datagrid-filter-close-wrapper\">\n              <button type=\"button\" class=\"close\" clrPopoverCloseButton>\n                  <clr-icon shape=\"close\" [attr.title]=\"commonStrings.keys.close\"></clr-icon>\n              </button>\n          </div>\n\n          <ng-content></ng-content>\n      </div>\n  `,\n})\nexport class ClrDatagridFilter<T = any> extends DatagridFilterRegistrar<T, ClrDatagridFilterInterface<T>>\n  implements CustomFilter, OnDestroy {\n  private subs: Subscription[] = [];\n  public ariaExpanded: boolean = false;\n\n  constructor(\n    _filters: FiltersProvider<T>,\n    public commonStrings: ClrCommonStringsService,\n    private smartToggleService: ClrPopoverToggleService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {\n    super(_filters);\n    this.subs.push(\n      smartToggleService.openChange.subscribe(change => {\n        this.open = change;\n        this.ariaExpanded = change;\n      })\n    );\n  }\n\n  @ViewChild('anchor', { read: ElementRef })\n  anchor: ElementRef;\n\n  // Smart Popover\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.END,\n    content: ClrAlignment.END,\n  };\n\n  private _open: boolean = false;\n  public get open() {\n    return this._open;\n  }\n\n  @Input('clrDgFilterOpen')\n  public set open(open: boolean) {\n    open = !!open;\n    if (this.open !== open) {\n      this.smartToggleService.open = open;\n      this.openChange.emit(open);\n      if (!open && isPlatformBrowser(this.platformId)) {\n        this.anchor.nativeElement.focus();\n      }\n      // keep track of the state\n      this._open = open;\n    }\n  }\n\n  @Output('clrDgFilterOpenChange') public openChange = new EventEmitter<boolean>(false);\n\n  @Input('clrDgFilter')\n  public set customFilter(filter: ClrDatagridFilterInterface<T> | RegisteredFilter<T, ClrDatagridFilterInterface<T>>) {\n    this.setFilter(filter);\n  }\n\n  /**\n   * Indicates if the filter is currently active\n   */\n  public get active() {\n    return !!this.filter && this.filter.isActive();\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Generic accessor for deep object properties\n * that can be specified as simple dot-separated strings.\n */\nexport class NestedProperty<T = any> {\n  private splitProp: string[];\n\n  constructor(private prop: string) {\n    if (prop.indexOf('.') >= 0) {\n      this.splitProp = prop.split('.');\n    }\n  }\n\n  // Safe getter for a deep object property, will not throw an error but return\n  // undefined if one of the intermediate properties is null or undefined.\n  public getPropValue(item: T): any {\n    if (this.splitProp) {\n      let value = item;\n      for (const nestedProp of this.splitProp) {\n        if (value == null || typeof value === 'undefined' || typeof value[nestedProp] === 'undefined') {\n          return undefined;\n        }\n        value = value[nestedProp];\n      }\n      return value;\n    } else {\n      return item[this.prop];\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyStringFilter<T = any> implements ClrDatagridStringFilterInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string, public exact = false) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  accepts(item: T, search: string): boolean {\n    const propValue = this.nestedProp.getPropValue(item);\n    if (typeof propValue === 'undefined') {\n      return false;\n    } else if (this.exact) {\n      return ('' + propValue).toLowerCase() === search;\n    } else {\n      return ('' + propValue).toLowerCase().indexOf(search) >= 0;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Observable, Subject } from 'rxjs';\nimport { ClrDatagridFilterInterface } from '../../interfaces/filter.interface';\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { DatagridPropertyStringFilter } from './datagrid-property-string-filter';\n\nexport class DatagridStringFilterImpl<T = any> implements ClrDatagridFilterInterface<T> {\n  constructor(public filterFn: ClrDatagridStringFilterInterface<T>) {}\n\n  /**\n   * The Observable required as part of the Filter interface\n   */\n  private _changes = new Subject<string>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get changes(): Observable<string> {\n    return this._changes.asObservable();\n  }\n\n  /**\n   * Raw input value\n   */\n  private _rawValue: string = '';\n  public get value(): string {\n    return this._rawValue;\n  }\n  /**\n   * Input value converted to lowercase\n   */\n  private _lowerCaseValue: string = '';\n  public get lowerCaseValue() {\n    return this._lowerCaseValue;\n  }\n  /**\n   * Common setter for the input value\n   */\n  public set value(value: string) {\n    if (!value) {\n      value = '';\n    }\n    if (value !== this._rawValue) {\n      this._rawValue = value;\n      this._lowerCaseValue = value.toLowerCase().trim();\n      this._changes.next(value);\n    }\n  }\n\n  /**\n   * Indicates if the filter is currently active, meaning the input is not empty\n   */\n  public isActive(): boolean {\n    return !!this.value;\n  }\n\n  /**\n   * Tests if an item matches a search text\n   */\n  public accepts(item: T): boolean {\n    // We always test with the lowercase value of the input, to stay case insensitive\n    return this.filterFn.accepts(item, this.lowerCaseValue);\n  }\n\n  public get state() {\n    if (this.filterFn instanceof DatagridPropertyStringFilter) {\n      return {\n        property: this.filterFn.prop,\n        value: this.value,\n      };\n    }\n    return this;\n  }\n\n  public equals(other: ClrDatagridFilterInterface<T, any>): boolean {\n    if (other instanceof DatagridStringFilterImpl) {\n      if (other.filterFn instanceof DatagridPropertyStringFilter) {\n        return (\n          this.filterFn instanceof DatagridPropertyStringFilter &&\n          other.filterFn.prop === this.filterFn.prop &&\n          other.value === this.value\n        );\n      }\n      return other === this;\n    }\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrDatagridFilter } from '../../datagrid-filter';\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { CustomFilter } from '../../providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from '../../providers/filters';\nimport { DomAdapter } from '../../../../utils/dom-adapter/dom-adapter';\nimport { DatagridFilterRegistrar } from '../../utils/datagrid-filter-registrar';\n\nimport { DatagridStringFilterImpl } from './datagrid-string-filter-impl';\nimport { ClrPopoverToggleService } from '../../../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dg-string-filter',\n  providers: [{ provide: CustomFilter, useExisting: DatagridStringFilter }],\n  template: `\n        <clr-dg-filter [clrDgFilter]=\"registered\" [(clrDgFilterOpen)]=\"open\">\n            <input #input type=\"text\" name=\"search\" [(ngModel)]=\"value\" class=\"clr-input\" />\n        </clr-dg-filter>\n    `,\n})\nexport class DatagridStringFilter<T = any> extends DatagridFilterRegistrar<T, DatagridStringFilterImpl<T>>\n  implements CustomFilter, AfterViewInit, OnDestroy {\n  private subs: Subscription[] = [];\n  constructor(\n    filters: FiltersProvider<T>,\n    private domAdapter: DomAdapter,\n    private smartToggleService: ClrPopoverToggleService\n  ) {\n    super(filters);\n  }\n\n  /**\n   * Customizable filter logic based on a search text\n   */\n  @Input('clrDgStringFilter')\n  set customStringFilter(\n    value: ClrDatagridStringFilterInterface<T> | RegisteredFilter<T, DatagridStringFilterImpl<T>>\n  ) {\n    if (value instanceof RegisteredFilter) {\n      this.setFilter(value);\n    } else {\n      this.setFilter(new DatagridStringFilterImpl(value));\n    }\n    if (this.initFilterValue) {\n      this.value = this.initFilterValue;\n      // This initFilterValue should be used only once after the filter registration\n      // So deleting this property value to prevent it from being used again\n      // if this customStringFilter property is set again\n      delete this.initFilterValue;\n    }\n  }\n\n  /**\n   * Indicates if the filter dropdown is open\n   */\n  public open: boolean = false;\n\n  /**\n   * We need the actual input element to automatically focus on it\n   */\n  @ViewChild('input') public input: ElementRef;\n\n  /**\n   * We grab the ClrDatagridFilter we wrap to register this StringFilter to it.\n   */\n  @ViewChild(ClrDatagridFilter) public filterContainer: ClrDatagridFilter<T>;\n  ngAfterViewInit() {\n    this.subs.push(\n      this.smartToggleService.openChange.subscribe(openChange => {\n        this.open = openChange;\n        // The timeout in used because when this executes, the input isn't displayed.\n        setTimeout(() => {\n          this.domAdapter.focus(this.input.nativeElement);\n        });\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n\n  private initFilterValue: string;\n\n  /**\n   * Common setter for the input value\n   */\n  public get value() {\n    return this.filter.value;\n  }\n  @Input('clrFilterValue')\n  public set value(value: string) {\n    if (this.filter) {\n      if (!value) {\n        value = '';\n      }\n      if (value !== this.filter.value) {\n        this.filter.value = value;\n        this.filterValueChange.emit(value);\n      }\n    } else {\n      this.initFilterValue = value;\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyNumericFilter<T = any> implements ClrDatagridNumericFilterInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string, public exact = false) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  accepts(item: T, low: number, high: number): boolean {\n    const propValue = this.nestedProp.getPropValue(item);\n    if (low !== null && propValue < low) {\n      return false;\n    }\n    if (high !== null && propValue > high) {\n      return false;\n    }\n    return true;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Observable, Subject } from 'rxjs';\nimport { ClrDatagridFilterInterface } from '../../interfaces/filter.interface';\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { DatagridPropertyNumericFilter } from './datagrid-property-numeric-filter';\n\nexport class DatagridNumericFilterImpl<T = any> implements ClrDatagridFilterInterface<T> {\n  constructor(public filterFn: ClrDatagridNumericFilterInterface<T>) {}\n\n  /**\n   * The Observable required as part of the Filter interface\n   */\n  private _changes = new Subject<[number, number]>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get changes(): Observable<[number, number]> {\n    return this._changes.asObservable();\n  }\n\n  /**\n   * Internal values and accessor\n   */\n  private _low: number = null;\n  private _high: number = null;\n\n  /**\n   * Common setters for the input values, including individual limits and\n   * both at the same time.  Value is singular to make the interface similar\n   * to the built-in string filter.\n   */\n\n  public get value(): [number, number] {\n    return [this._low, this._high];\n  }\n\n  public set value(vals: [number, number]) {\n    const low = vals[0];\n    const high = vals[1];\n    if (low !== this._low || high !== this._high) {\n      this._low = low;\n      this._high = high;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  public set low(low: number) {\n    if (low !== this._low) {\n      this._low = low;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  public set high(high: number) {\n    if (high !== this._high) {\n      this._high = high;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  public get low() {\n    return this._low;\n  }\n\n  public get high() {\n    return this._high;\n  }\n\n  /**\n   * Indicates if the filter is currently active, (at least one input is set)\n   */\n  public isActive(): boolean {\n    return this._low !== null || this.high !== null;\n  }\n\n  /**\n   * Tests if an item matches a search text\n   */\n  public accepts(item: T): boolean {\n    // We have a filter function in case someone wants to implement a numeric\n    // filter that always passes nulls or similar\n    return this.filterFn.accepts(item, this._low, this._high);\n  }\n\n  public get state() {\n    if (this.filterFn instanceof DatagridPropertyNumericFilter) {\n      return {\n        property: this.filterFn.prop,\n        low: this._low,\n        high: this._high,\n      };\n    }\n    return this;\n  }\n\n  public equals(other: ClrDatagridFilterInterface<T, any>): boolean {\n    if (other instanceof DatagridNumericFilterImpl) {\n      if (other.filterFn instanceof DatagridPropertyNumericFilter) {\n        return (\n          this.filterFn instanceof DatagridPropertyNumericFilter &&\n          other.filterFn.prop === this.filterFn.prop &&\n          other.low === this._low &&\n          other.high === this._high\n        );\n      }\n      return other === this;\n    }\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridFilter } from '../../datagrid-filter';\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { CustomFilter } from '../../providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from '../../providers/filters';\nimport { DomAdapter } from '../../../../utils/dom-adapter/dom-adapter';\nimport { DatagridFilterRegistrar } from '../../utils/datagrid-filter-registrar';\nimport { DatagridNumericFilterImpl } from './datagrid-numeric-filter-impl';\nimport { ClrCommonStringsService } from '../../../../utils/i18n/common-strings.service';\nimport { ClrPopoverToggleService } from '../../../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dg-numeric-filter',\n  providers: [{ provide: CustomFilter, useExisting: DatagridNumericFilter }],\n  template: `\n        <clr-dg-filter [clrDgFilter]=\"registered\" [(clrDgFilterOpen)]=\"open\">\n            <input class=\"datagrid-numeric-filter-input\" #input_low type=\"number\" name=\"low\" [(ngModel)]=\"low\"\n                   [placeholder]=\"commonStrings.keys.minValue\" [attr.aria-label]=\"commonStrings.keys.minValue\" />\n                <span class=\"datagrid-filter-input-spacer\"></span>\n            <input class=\"datagrid-numeric-filter-input\" #input_high type=\"number\" name=\"high\" [(ngModel)]=\"high\"\n                   [placeholder]=\"commonStrings.keys.maxValue\" [attr.aria-label]=\"commonStrings.keys.maxValue\" />\n        </clr-dg-filter>\n    `,\n})\nexport class DatagridNumericFilter<T = any> extends DatagridFilterRegistrar<T, DatagridNumericFilterImpl<T>>\n  implements CustomFilter, AfterViewInit {\n  constructor(\n    filters: FiltersProvider<T>,\n    private domAdapter: DomAdapter,\n    public commonStrings: ClrCommonStringsService,\n    private popoverToggleService: ClrPopoverToggleService\n  ) {\n    super(filters);\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => {\n      sub.unsubscribe();\n    });\n  }\n\n  /**\n   * Customizable filter logic based on high and low values\n   */\n  @Input('clrDgNumericFilter')\n  set customNumericFilter(\n    value: ClrDatagridNumericFilterInterface<T> | RegisteredFilter<T, DatagridNumericFilterImpl<T>>\n  ) {\n    if (value instanceof RegisteredFilter) {\n      this.setFilter(value);\n    } else {\n      this.setFilter(new DatagridNumericFilterImpl(value));\n    }\n    if (this.initFilterValues) {\n      this.value = this.initFilterValues;\n      // This initFilterValues should be used only once after the filter registration\n      // So deleting this property value to prevent it from being used again\n      // if this customStringFilter property is set again\n      delete this.initFilterValues;\n    }\n  }\n\n  /**\n   * Indicates if the filter dropdown is open\n   */\n  public open: boolean = false;\n\n  /**\n   * We need the actual input element to automatically focus on it\n   */\n  @ViewChild('input_low') public input: ElementRef;\n\n  /**\n   * We grab the ClrDatagridFilter we wrap to register this StringFilter to it.\n   */\n  @ViewChild(ClrDatagridFilter) public filterContainer: ClrDatagridFilter<T>;\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.popoverToggleService.openChange.subscribe(openChange => {\n        this.open = openChange;\n        // The timeout in used because when this executes, the input isn't displayed.\n        setTimeout(() => {\n          this.domAdapter.focus(this.input.nativeElement);\n        });\n      })\n    );\n  }\n\n  private initFilterValues: [number, number];\n  /**\n   * Common setter for the input values\n   */\n  public get value() {\n    return [this.filter.low, this.filter.high];\n  }\n\n  @Input('clrFilterValue')\n  public set value(values: [number, number]) {\n    if (this.filter) {\n      if (values && (values[0] !== this.filter.low || values[1] !== this.filter.high)) {\n        if (typeof values[0] === 'number') {\n          this.filter.low = values[0];\n        } else {\n          this.filter.low = null;\n        }\n        if (typeof values[1] === 'number') {\n          this.filter.high = values[1];\n        } else {\n          this.filter.high = null;\n        }\n        this.filterValueChange.emit(values);\n      }\n    } else {\n      this.initFilterValues = values;\n    }\n  }\n\n  public get low() {\n    if (typeof this.filter.low === 'number' && isFinite(this.filter.low)) {\n      return this.filter.low;\n    } else {\n      // There's not a low limit\n      return null;\n    }\n  }\n\n  public get high() {\n    if (typeof this.filter.high === 'number' && isFinite(this.filter.high)) {\n      return this.filter.high;\n    } else {\n      // There's not a high limit\n      return null;\n    }\n  }\n\n  public set low(low: number | string) {\n    if (typeof low === 'number' && low !== this.filter.low) {\n      this.filter.low = low;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    } else if (typeof low !== 'number') {\n      this.filter.low = null;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    }\n  }\n\n  public set high(high: number | string) {\n    if (typeof high === 'number' && high !== this.filter.high) {\n      this.filter.high = high;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    } else if (typeof high !== 'number') {\n      this.filter.high = null;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentChecked, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { WillyWonka } from './willy-wonka';\n\nexport abstract class OompaLoompa implements AfterContentChecked, OnDestroy {\n  // FIXME: Request Injector once we move to Angular 4.2+, it'll allow easier refactors\n  constructor(cdr: ChangeDetectorRef, willyWonka: WillyWonka) {\n    this.subscription = willyWonka.chocolate.subscribe(() => {\n      if (this.latestFlavor !== this.flavor) {\n        willyWonka.disableChocolateCheck = true;\n        cdr.detectChanges();\n        willyWonka.disableChocolateCheck = false;\n      }\n    });\n  }\n\n  private subscription: Subscription;\n\n  private latestFlavor: any;\n\n  abstract get flavor(): any;\n\n  ngAfterContentChecked() {\n    this.latestFlavor = this.flavor;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class RowActionService {\n  private actionableCount = 0;\n\n  public register() {\n    this.actionableCount++;\n  }\n\n  public unregister() {\n    this.actionableCount--;\n  }\n\n  /**\n   * false means no rows with action\n   */\n  public get hasActionableRow(): boolean {\n    return this.actionableCount > 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewChecked } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n/*\n * After a conversation with the Angular core team, it turns out we don't have much of a choice for our\n * declarative API, we need to fight against change detection and its one-way flow. This is\n * currently the least dirty solution to do what we want.\n *\n * Do not modify or even use this class unless you know exactly what you're doing.\n * It has the potential to trigger change detection loops or kill app performances.\n */\nexport class WillyWonka implements AfterViewChecked {\n  private _chocolate = new Subject<string>();\n\n  public get chocolate(): Observable<string> {\n    return this._chocolate.asObservable();\n  }\n\n  disableChocolateCheck = false;\n\n  ngAfterViewChecked() {\n    if (!this.disableChocolateCheck) {\n      this._chocolate.next();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-datagrid' })\nexport class DatagridWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { RowActionService } from '../providers/row-action-service';\nimport { DatagridWillyWonka } from './datagrid-willy-wonka';\n\n@Directive({ selector: 'clr-datagrid, clr-dg-row' })\nexport class ActionableOompaLoompa extends OompaLoompa {\n  private rowActions: RowActionService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: DatagridWillyWonka, rowActions: RowActionService) {\n    if (!willyWonka) {\n      throw new Error('clr-dg-row should only be used inside of a clr-datagrid');\n    }\n    super(cdr, willyWonka);\n    this.rowActions = rowActions;\n  }\n\n  get flavor() {\n    return this.rowActions.hasActionableRow;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class DetailService {\n  private toggleState = false;\n  private _state: BehaviorSubject<boolean | null> = new BehaviorSubject<boolean>(this.toggleState);\n  private cache: any;\n  private _enabled = false;\n  private button: HTMLButtonElement;\n  public id: string;\n\n  get enabled(): boolean {\n    return this._enabled;\n  }\n\n  set enabled(state: boolean) {\n    this._enabled = state;\n  }\n\n  public get stateChange(): Observable<boolean | null> {\n    return this._state.asObservable();\n  }\n\n  close() {\n    this.toggleState = false;\n    this._state.next(this.toggleState);\n    if (this.button) {\n      this.button.focus();\n      this.button = null;\n    }\n  }\n\n  open(item: any, button?: HTMLButtonElement) {\n    this.cache = item;\n    this.button = button;\n    this.toggleState = true;\n    this._state.next(this.toggleState);\n  }\n\n  toggle(item: any, button?: HTMLButtonElement) {\n    if (this.isRowOpen(item) || !item) {\n      this.close();\n    } else {\n      this.open(item, button);\n    }\n  }\n\n  get state() {\n    return this.cache;\n  }\n\n  isRowOpen(item: any) {\n    return !!(this.toggleState && this.cache === item);\n  }\n\n  get isOpen() {\n    return this.toggleState === true;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { DetailService } from './detail.service';\n\n@Injectable()\nexport class ExpandableRowsCount {\n  constructor(private detailService: DetailService) {}\n\n  private expandableCount = 0;\n\n  public register() {\n    this.expandableCount++;\n  }\n\n  public unregister() {\n    this.expandableCount--;\n  }\n\n  /**\n   * false means no rows with action\n   * check if details are on, and disable rows entirely\n   */\n  public get hasExpandableRow(): boolean {\n    return !this.detailService.enabled && this.expandableCount > 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { ExpandableRowsCount } from '../providers/global-expandable-rows';\nimport { DatagridWillyWonka } from './datagrid-willy-wonka';\n\n@Directive({ selector: 'clr-datagrid, clr-dg-row' })\nexport class ExpandableOompaLoompa extends OompaLoompa {\n  private expandableCount: ExpandableRowsCount;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: DatagridWillyWonka,\n    expandableCount: ExpandableRowsCount\n  ) {\n    if (!willyWonka) {\n      throw new Error('clr-dg-row should only be used inside of a clr-datagrid');\n    }\n    super(cdr, willyWonka);\n    this.expandableCount = expandableCount;\n  }\n\n  get flavor() {\n    return this.expandableCount.hasExpandableRow;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridComparatorInterface } from '../../interfaces/comparator.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyComparator<T = any> implements ClrDatagridComparatorInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  public compare(a: T, b: T): number {\n    let propA = this.nestedProp.getPropValue(a);\n    let propB = this.nestedProp.getPropValue(b);\n\n    if (typeof propA === 'string') {\n      propA = propA.toLowerCase();\n    }\n\n    if (typeof propB === 'string') {\n      propB = propB.toLowerCase();\n    }\n\n    if (typeof propA === 'undefined' || propA === null) {\n      if (typeof propB === 'undefined' || propB === null) {\n        return 0;\n      } else {\n        return 1;\n      }\n    } else {\n      if (typeof propB === 'undefined' || propB === null) {\n        return -1;\n      } else if (propA < propB) {\n        return -1;\n      } else if (propA > propB) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Enumeration representing the sorting order of a datagrid column. It is a constant Enum,\n * i.e. each value needs to be treated as a `number`, starting at index 0.\n *\n * @export\n * @enum {number}\n */\nexport enum ClrDatagridSortOrder {\n  UNSORTED = 0,\n  ASC = 1,\n  DESC = -1,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrDatagridComparatorInterface } from '../interfaces/comparator.interface';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class Sort<T = any> {\n  constructor(private stateDebouncer: StateDebouncer) {}\n\n  /**\n   * Currently active comparator\n   */\n  private _comparator: ClrDatagridComparatorInterface<T>;\n  public get comparator(): ClrDatagridComparatorInterface<T> {\n    return this._comparator;\n  }\n  public set comparator(value: ClrDatagridComparatorInterface<T>) {\n    this.stateDebouncer.changeStart();\n    this._comparator = value;\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * Ascending order if false, descending if true\n   */\n  private _reverse: boolean = false;\n  public get reverse(): boolean {\n    return this._reverse;\n  }\n  public set reverse(value: boolean) {\n    this.stateDebouncer.changeStart();\n    this._reverse = value;\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to sort changes\n   */\n  private _change = new Subject<Sort<T>>();\n  private emitChange() {\n    this._change.next(this);\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<Sort<T>> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * Sets a comparator as the current one, or toggles reverse if the comparator is already used. The\n   * optional forceReverse input parameter allows to override that toggling behavior by sorting in\n   * reverse order if `true`.\n   *\n   * @memberof Sort\n   */\n  public toggle(sortBy: ClrDatagridComparatorInterface<T>, forceReverse?: boolean) {\n    this.stateDebouncer.changeStart();\n    // We modify private properties directly, to batch the change event\n    if (this.comparator === sortBy) {\n      this._reverse = typeof forceReverse !== 'undefined' ? forceReverse || !this._reverse : !this._reverse;\n    } else {\n      this._comparator = sortBy;\n      this._reverse = typeof forceReverse !== 'undefined' ? forceReverse : false;\n    }\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * Clears the current sorting order\n   */\n  public clear() {\n    this.comparator = null;\n  }\n\n  /**\n   * Compares two objects according to the current comparator\n   */\n  public compare(a: T, b: T): number {\n    return (this.reverse ? -1 : 1) * this.comparator.compare(a, b);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-column',\n  template: `\n        <ng-template #columnPortal>\n            <ng-content></ng-content>\n        </ng-template>\n    `,\n})\nexport class WrappedColumn implements DynamicWrapper, AfterViewInit, OnDestroy {\n  _dynamic = false;\n\n  @ViewChild('columnPortal') templateRef: TemplateRef<void>;\n  columnView: EmbeddedViewRef<void>; // the columns projected view (in memory)\n\n  ngAfterViewInit() {\n    // Create the cells view in memory, not the DOM.\n    this.columnView = this.templateRef.createEmbeddedView(null);\n  }\n\n  ngOnDestroy() {\n    this.columnView.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  ContentChild,\n  EventEmitter,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewContainerRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { DatagridPropertyComparator } from './built-in/comparators/datagrid-property-comparator';\nimport { DatagridPropertyStringFilter } from './built-in/filters/datagrid-property-string-filter';\nimport { DatagridPropertyNumericFilter } from './built-in/filters/datagrid-property-numeric-filter';\nimport { DatagridStringFilterImpl } from './built-in/filters/datagrid-string-filter-impl';\nimport { DatagridNumericFilterImpl } from './built-in/filters/datagrid-numeric-filter-impl';\nimport { ClrDatagridSortOrder } from './enums/sort-order.enum';\nimport { ClrDatagridComparatorInterface } from './interfaces/comparator.interface';\nimport { CustomFilter } from './providers/custom-filter';\nimport { FiltersProvider } from './providers/filters';\nimport { Sort } from './providers/sort';\nimport { DatagridFilterRegistrar } from './utils/datagrid-filter-registrar';\nimport { ClrDatagridFilterInterface } from './interfaces/filter.interface';\nimport { WrappedColumn } from './wrapped-column';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { DetailService } from './providers/detail.service';\n\n@Component({\n  selector: 'clr-dg-column',\n  template: `\n      <div class=\"datagrid-column-flex\">\n          <button\n            class=\"datagrid-column-title\"\n            *ngIf=\"sortable\"\n            (click)=\"sort()\"\n            type=\"button\">\n              <ng-container  *ngTemplateOutlet=\"columnTitle\"></ng-container>\n              <clr-icon\n                      *ngIf=\"sortIcon\"\n                      [attr.shape]=\"sortIcon\"\n                      class=\"sort-icon\"></clr-icon>\n          </button>\n          <!-- I'm really not happy with that select since it's not very scalable -->\n          <ng-content select=\"clr-dg-filter, clr-dg-string-filter, clr-dg-numeric-filter\"></ng-content>\n\n          <clr-dg-string-filter\n                  *ngIf=\"field && !customFilter && (colType=='string')\"\n                  [clrDgStringFilter]=\"registered\"\n                  [(clrFilterValue)]=\"filterValue\"></clr-dg-string-filter>\n\n          <clr-dg-numeric-filter\n                  *ngIf=\"field && !customFilter && (colType=='number')\"\n                  [clrDgNumericFilter]=\"registered\"\n                  [(clrFilterValue)]=\"filterValue\"></clr-dg-numeric-filter>\n\n          <ng-template #columnTitle>\n              <ng-content></ng-content>\n          </ng-template>\n\n\n          <span class=\"datagrid-column-title\" *ngIf=\"!sortable\">\n              <ng-container *ngTemplateOutlet=\"columnTitle\"></ng-container>\n          </span>\n\n          <clr-dg-column-separator *ngIf=\"showSeparator\"></clr-dg-column-separator>\n      </div>\n    `,\n  providers: [ClrPopoverPositionService, ClrPopoverEventsService, ClrPopoverToggleService],\n  host: {\n    '[class.datagrid-column]': 'true',\n    '[attr.aria-sort]': 'ariaSort',\n    role: 'columnheader',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrDatagridColumn<T = any> extends DatagridFilterRegistrar<T, ClrDatagridFilterInterface<T>>\n  implements OnDestroy, OnInit, OnChanges {\n  constructor(\n    private _sort: Sort<T>,\n    filters: FiltersProvider<T>,\n    private vcr: ViewContainerRef,\n    private detailService: DetailService,\n    private changeDetectorRef: ChangeDetectorRef,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    super(filters);\n    this.subscriptions.push(this.listenForSortingChanges());\n    this.subscriptions.push(this.listenForDetailPaneChanges());\n  }\n\n  public showSeparator = true;\n\n  /**\n   * Subscription to the sort service changes\n   */\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private listenForDetailPaneChanges() {\n    return this.detailService.stateChange.subscribe(state => {\n      if (this.showSeparator !== !state) {\n        this.showSeparator = !state;\n        // Have to manually change because of OnPush\n        this.changeDetectorRef.markForCheck();\n      }\n    });\n  }\n\n  private listenForSortingChanges() {\n    return this._sort.change.subscribe(sort => {\n      // Need to manually mark the component to be checked\n      // for both activating and deactivating sorting\n      this.changeDetectorRef.markForCheck();\n      // We're only listening to make sure we emit an event when the column goes from sorted to unsorted\n      if (this.sortOrder !== ClrDatagridSortOrder.UNSORTED && sort.comparator !== this._sortBy) {\n        this._sortOrder = ClrDatagridSortOrder.UNSORTED;\n        this.sortOrderChange.emit(this._sortOrder);\n        // removes the sortIcon when column becomes unsorted\n        this.sortIcon = null;\n      }\n      // deprecated: to be removed - START\n      if (this.sorted && sort.comparator !== this._sortBy) {\n        this._sorted = false;\n        this.sortedChange.emit(false);\n      }\n      // deprecated: to be removed - END\n    });\n  }\n\n  /*\n     * Simple object property shortcut, activates both sorting and filtering\n     * based on native comparison of the specified property on the items.\n     */\n  private _field: string;\n  public get field() {\n    return this._field;\n  }\n\n  /*\n  * What type is this column?  This defaults to STRING, but can also be\n  * set to NUMBER.  Unsupported types default to STRING. Users can set it\n  * via the [clrDgColType] input by setting it to 'string' or 'number'.\n  */\n\n  private _colType: 'string' | 'number' = 'string';\n\n  get colType() {\n    return this._colType;\n  }\n\n  // TODO: We might want to make this an enum in the future\n  @Input('clrDgColType')\n  set colType(value: 'string' | 'number') {\n    this._colType = value;\n  }\n\n  @Input('clrDgField')\n  public set field(field: string) {\n    if (typeof field === 'string') {\n      this._field = field;\n\n      if (!this.sortBy) {\n        this._sortBy = new DatagridPropertyComparator(field);\n      }\n    }\n  }\n\n  private setupDefaultFilter(field: string, colType: 'string' | 'number') {\n    if (colType === 'number') {\n      this.setFilter(new DatagridNumericFilterImpl(new DatagridPropertyNumericFilter(field)));\n    } else if (colType === 'string') {\n      this.setFilter(new DatagridStringFilterImpl(new DatagridPropertyStringFilter(field)));\n    }\n    if (this.filter && this.initFilterValue) {\n      this.updateFilterValue = this.initFilterValue;\n      // This initFilterValue should be used only once after the filter registration\n      // So deleting this property value to prevent it from being used again\n      // if this field property is set again\n      delete this.initFilterValue;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes.colType &&\n      changes.colType.currentValue &&\n      changes.colType.currentValue !== changes.colType.previousValue\n    ) {\n      if (!this.customFilter && !this.filter && this.colType && this.field) {\n        this.setupDefaultFilter(this.field, this.colType);\n      }\n    }\n    if (changes.field && changes.field.currentValue && changes.field.currentValue !== changes.field.previousValue) {\n      if (!this.customFilter && this.colType) {\n        this.setupDefaultFilter(this.field, this.colType);\n      }\n    }\n  }\n\n  /**\n   * ClrDatagridComparatorInterface to use when sorting the column\n   */\n\n  private _sortBy: ClrDatagridComparatorInterface<T>;\n\n  public get sortBy() {\n    return this._sortBy;\n  }\n\n  @Input('clrDgSortBy')\n  public set sortBy(comparator: ClrDatagridComparatorInterface<T> | string) {\n    if (typeof comparator === 'string') {\n      this._sortBy = new DatagridPropertyComparator(comparator);\n    } else {\n      if (comparator) {\n        this._sortBy = comparator;\n      } else {\n        if (this.field) {\n          this._sortBy = new DatagridPropertyComparator(this.field);\n        } else {\n          delete this._sortBy;\n        }\n      }\n    }\n  }\n\n  /**\n   * Indicates if the column is sortable\n   */\n  public get sortable(): boolean {\n    return !!this._sortBy;\n  }\n\n  // deprecated: to be removed - START\n  /**\n   * Indicates if the column is currently sorted\n   *\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  private _sorted = false;\n  public get sorted() {\n    return this._sorted;\n  }\n\n  /**\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  @Input('clrDgSorted')\n  public set sorted(value: boolean) {\n    if (!value && this.sorted) {\n      this._sorted = false;\n      this._sort.clear();\n    } else if (value && !this.sorted) {\n      this.sort();\n    }\n  }\n\n  /**\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  @Output('clrDgSortedChange') public sortedChange = new EventEmitter<boolean>();\n\n  // deprecated: to be removed - END\n\n  /**\n   * Indicates how the column is currently sorted\n   */\n  private _sortOrder: ClrDatagridSortOrder = ClrDatagridSortOrder.UNSORTED;\n  public get sortOrder() {\n    return this._sortOrder;\n  }\n\n  @Input('clrDgSortOrder')\n  public set sortOrder(value: ClrDatagridSortOrder) {\n    if (typeof value === 'undefined') {\n      return;\n    }\n\n    // only if the incoming order is different from the current one\n    if (this._sortOrder === value) {\n      return;\n    }\n\n    switch (value) {\n      // the Unsorted case happens when the current state is either Asc or Desc\n      default:\n      case ClrDatagridSortOrder.UNSORTED:\n        this._sort.clear();\n        break;\n      case ClrDatagridSortOrder.ASC:\n        this.sort(false);\n        break;\n      case ClrDatagridSortOrder.DESC:\n        this.sort(true);\n        break;\n    }\n  }\n\n  public get ariaSort() {\n    switch (this._sortOrder) {\n      default:\n      case ClrDatagridSortOrder.UNSORTED:\n        return 'none';\n      case ClrDatagridSortOrder.ASC:\n        return 'ascending';\n      case ClrDatagridSortOrder.DESC:\n        return 'descending';\n    }\n  }\n\n  @Output('clrDgSortOrderChange') public sortOrderChange = new EventEmitter<ClrDatagridSortOrder>();\n\n  public sortIcon: string;\n  /**\n   * Sorts the datagrid based on this column\n   */\n  public sort(reverse?: boolean) {\n    if (!this.sortable) {\n      return;\n    }\n\n    this._sort.toggle(this._sortBy, reverse);\n\n    // setting the private variable to not retrigger the setter logic\n    this._sortOrder = this._sort.reverse ? ClrDatagridSortOrder.DESC : ClrDatagridSortOrder.ASC;\n    // Sets the correct icon for current sort order\n    this.sortIcon = this._sortOrder === ClrDatagridSortOrder.DESC ? 'arrow down' : 'arrow';\n    this.sortOrderChange.emit(this._sortOrder);\n\n    // deprecated: to be removed - START\n    this._sorted = true;\n    this.sortedChange.emit(true);\n    // deprecated: to be removed - END\n  }\n\n  /**\n   * A custom filter for this column that can be provided in the projected content\n   */\n  public customFilter = false;\n\n  @ContentChild(CustomFilter)\n  public set projectedFilter(custom: any) {\n    if (custom) {\n      this.deleteFilter();\n      this.customFilter = true;\n    }\n  }\n\n  // This property holds filter value temporarily while this.filter property is not yet registered\n  // When this.filter is registered, this property value would be used update this.filter.value\n  private initFilterValue: string | [number, number];\n\n  public get filterValue() {\n    if (this.filter instanceof DatagridStringFilterImpl || this.filter instanceof DatagridNumericFilterImpl) {\n      return this.filter.value;\n    }\n  }\n\n  @Input('clrFilterValue')\n  public set updateFilterValue(newValue: string | [number, number]) {\n    if (this.filter) {\n      if (this.filter instanceof DatagridStringFilterImpl) {\n        if (!newValue || typeof newValue !== 'string') {\n          newValue = '';\n        }\n        if (newValue !== this.filter.value) {\n          this.filter.value = newValue;\n        }\n      } else if (this.filter instanceof DatagridNumericFilterImpl) {\n        if (!newValue || !(newValue instanceof Array)) {\n          newValue = [null, null];\n        }\n        if (newValue.length === 2 && (newValue[0] !== this.filter.value[0] || newValue[1] !== this.filter.value[1])) {\n          this.filter.value = newValue;\n        }\n      }\n    } else {\n      this.initFilterValue = newValue;\n    }\n  }\n\n  public set filterValue(newValue: string | [number, number]) {\n    if (this.filter instanceof DatagridStringFilterImpl || this.filter instanceof DatagridNumericFilterImpl) {\n      this.updateFilterValue = newValue;\n      this.filterValueChange.emit(this.filter.value);\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedColumn, this.vcr);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedColumn, this.vcr).columnView;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, TrackByFunction } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\nimport { FiltersProvider } from './filters';\nimport { Page } from './page';\nimport { Sort } from './sort';\n\n@Injectable()\nexport class Items<T = any> {\n  constructor(private _filters: FiltersProvider<T>, private _sort: Sort<T>, private _page: Page) {}\n\n  /**\n   * Indicates if the data is currently loading\n   */\n  public loading = false;\n\n  // TODO: Verify that trackBy is registered for the *ngFor case too\n  /**\n   * Tracking function to identify objects. Default is reference equality.\n   */\n  public trackBy: TrackByFunction<T> = (index: number, item: T) => item;\n\n  /**\n   * Subscriptions to the other providers changes.\n   */\n  private _filtersSub: Subscription;\n  private _sortSub: Subscription;\n  private _pageSub: Subscription;\n  /**\n   * Cleans up our subscriptions to other providers\n   */\n  public destroy() {\n    if (this._filtersSub) {\n      this._filtersSub.unsubscribe();\n    }\n    if (this._sortSub) {\n      this._sortSub.unsubscribe();\n    }\n    if (this._pageSub) {\n      this._pageSub.unsubscribe();\n    }\n  }\n\n  /**\n   * Whether we should use smart items for this datagrid or let the user handle\n   * everything.\n   */\n  private _smart = false;\n  public get smart(): boolean {\n    return this._smart;\n  }\n  public smartenUp() {\n    this._smart = true;\n    /*\n         * These observers trigger a chain of function: filter -> sort -> paginate\n         * An observer up the chain re-triggers all the operations that follow it.\n         */\n    this._filtersSub = this._filters.change.subscribe(() => this._filterItems());\n    this._sortSub = this._sort.change.subscribe(() => {\n      // Special case, if the datagrid went from sorted to unsorted, we have to re-filter\n      // to get the original order back\n      if (!this._sort.comparator) {\n        this._filterItems();\n      } else {\n        this._sortItems();\n      }\n    });\n    this._pageSub = this._page.change.subscribe(() => this._changePage());\n  }\n\n  /**\n   * List of all items in the datagrid\n   */\n  private _all: T[];\n  public get all() {\n    return this._all;\n  }\n  public set all(items: T[]) {\n    this._all = items;\n    this.emitAllChanges(items);\n    if (this.smart) {\n      this._filterItems();\n    } else {\n      this._displayed = items;\n      this.emitChange();\n    }\n  }\n\n  /**\n   * Manually recompute the list of displayed items\n   */\n  public refresh() {\n    if (this.smart) {\n      this._filterItems();\n    }\n  }\n\n  /**\n   * Internal temporary step, which we preserve to avoid re-filtering or re-sorting if not necessary\n   */\n  private _filtered: T[];\n\n  /**\n   * List of items currently displayed\n   */\n  private _displayed: T[] = [];\n  public get displayed(): T[] {\n    // Ideally we could return an immutable array, but we don't have it in Clarity yet.\n    return this._displayed;\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to items changes\n   */\n  private _change = new Subject<T[]>();\n  private emitChange() {\n    this._change.next(this.displayed);\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<T[]> {\n    return this._change.asObservable();\n  }\n\n  private _allChanges = new Subject<T[]>();\n  private emitAllChanges(items: T[]): void {\n    this._allChanges.next(items);\n  }\n\n  public get allChanges(): Observable<T[]> {\n    return this._allChanges.asObservable();\n  }\n\n  /**\n   * Checks if we don't have data to process yet, to abort early operations\n   */\n  private get uninitialized() {\n    return !this._all;\n  }\n\n  /**\n   * FiltersProvider items from the raw list\n   */\n  private _filterItems() {\n    if (this.uninitialized) {\n      return;\n    }\n    if (this._filters.hasActiveFilters()) {\n      this._filtered = this._all.filter(item => this._filters.accepts(item));\n    } else {\n      // Work on a shallow copy of the array, to not modify the user's model\n      this._filtered = this._all.slice();\n    }\n    this._page.totalItems = this._filtered.length;\n    this._sortItems();\n  }\n\n  /**\n   * Sorts items in the filtered list\n   */\n  private _sortItems() {\n    if (this.uninitialized) {\n      return;\n    }\n    if (this._sort.comparator) {\n      this._filtered.sort((a, b) => this._sort.compare(a, b));\n    }\n    this._changePage();\n  }\n\n  /**\n   * Extracts the current page from the sorted list\n   */\n  private _changePage() {\n    // If we know we have pagination but the page size hasn't been set yet, we wait for it.\n    if (this.uninitialized || (this._page.activated && this._page.size === 0)) {\n      return;\n    }\n    if (this._page.size > 0) {\n      this._displayed = this._filtered.slice(this._page.firstItem, this._page.lastItem + 1);\n    } else {\n      this._displayed = this._filtered;\n    }\n    this.emitChange();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgForOf, NgForOfContext } from '@angular/common';\nimport {\n  Directive,\n  DoCheck,\n  Input,\n  IterableDiffer,\n  IterableDiffers,\n  TemplateRef,\n  TrackByFunction,\n  ViewContainerRef,\n  OnDestroy,\n} from '@angular/core';\n\nimport { Items } from './providers/items';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrDgItems][clrDgItemsOf]',\n})\nexport class ClrDatagridItems<T> implements DoCheck, OnDestroy {\n  private iterableProxy: NgForOf<T>;\n  private _rawItems: T[];\n  private differ: IterableDiffer<T> | null = null;\n  private subscriptions: Subscription[] = [];\n\n  @Input('clrDgItemsOf')\n  public set rawItems(items: T[]) {\n    this._rawItems = items ? items : []; // local copy for ngOnChange diffing\n  }\n\n  @Input('clrDgItemsTrackBy')\n  set trackBy(value: TrackByFunction<T>) {\n    this.items.trackBy = value;\n    this.iterableProxy.ngForTrackBy = value;\n  }\n\n  constructor(\n    public template: TemplateRef<NgForOfContext<T>>,\n    private differs: IterableDiffers,\n    private items: Items,\n    private vcr: ViewContainerRef\n  ) {\n    items.smartenUp();\n    this.iterableProxy = new NgForOf<T>(this.vcr, this.template, this.differs);\n    this.subscriptions.push(\n      items.change.subscribe(newItems => {\n        this.iterableProxy.ngForOf = newItems;\n        this.iterableProxy.ngDoCheck();\n      })\n    );\n  }\n\n  ngDoCheck() {\n    if (!this.differ) {\n      this.differ = this.differs.find(this._rawItems).create(this.iterableProxy.ngForTrackBy);\n    }\n    if (this.differ) {\n      const changes = this.differ.diff(this._rawItems);\n      if (changes) {\n        // TODO: not very efficient right now,\n        // but premature optimization is the root of all evil.\n        this.items.all = this._rawItems;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\nimport { Items } from './providers/items';\n\n@Component({\n  selector: 'clr-dg-placeholder',\n  template: `\n        <div\n            class=\"datagrid-placeholder\"\n            [class.datagrid-empty]=\"emptyDatagrid\">\n                <div class=\"datagrid-placeholder-image\" *ngIf=\"emptyDatagrid\"></div>\n                <ng-content *ngIf=\"emptyDatagrid\"></ng-content>\n        </div>\n    `,\n  host: { '[class.datagrid-placeholder-container]': 'true' },\n})\nexport class ClrDatagridPlaceholder<T = any> {\n  constructor(private items: Items<T>) {}\n\n  /**\n   * Tests if the datagrid is empty, meaning it doesn't contain any items\n   */\n  public get emptyDatagrid() {\n    return !this.items.loading && (!this.items.displayed || this.items.displayed.length === 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ElementRef, InjectionToken } from '@angular/core';\n\nexport const POPOVER_HOST_ANCHOR = new InjectionToken<ElementRef>('POPOVER_HOST_ANCHOR');\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SignpostFocusManager {\n  private _triggerEl: HTMLElement;\n\n  set triggerEl(value: HTMLElement) {\n    this._triggerEl = value;\n  }\n\n  focusTrigger() {\n    if (this._triggerEl) {\n      this._triggerEl.focus();\n    }\n  }\n}\n","/*\n *  Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class SignpostIdService {\n  private _id: Subject<string> = new Subject<string>();\n\n  setId(id: string) {\n    this._id.next(id);\n  }\n\n  get id(): Observable<string> {\n    return this._id.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { Directive, ElementRef, HostListener, Inject, OnDestroy, PLATFORM_ID } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\n\n@Directive({\n  selector: '[clrSignpostTrigger]',\n  host: {\n    class: 'signpost-trigger',\n    '[attr.aria-label]': 'commonStrings.keys.signpostToggle',\n    '[attr.aria-expanded]': 'ariaExpanded',\n    '[attr.aria-controls]': 'ariaControl',\n    '[class.active]': 'isOpen',\n  },\n})\n\n/*********\n *\n * @description\n * A Directive added to the ClrSignpost Trigger button that will call the ClrSignpost.toggle() function to hide/show the\n * ClrSignpostContent.\n *\n */\nexport class ClrSignpostTrigger implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  public ariaExpanded: boolean;\n  public ariaControl: string;\n  public isOpen: boolean;\n\n  private document: Document;\n\n  constructor(\n    private toggleService: ClrPopoverToggleService,\n    private el: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    private signpostIdService: SignpostIdService,\n    private signpostFocusManager: SignpostFocusManager,\n    @Inject(DOCUMENT) document: any,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.document = document;\n  }\n\n  ngOnInit() {\n    this.signpostFocusManager.triggerEl = this.el.nativeElement;\n    this.subscriptions.push(\n      this.toggleService.openChange.subscribe((isOpen: boolean) => {\n        this.ariaExpanded = isOpen;\n\n        const prevIsOpen = this.isOpen;\n        this.isOpen = isOpen;\n\n        // openChange fires false on initialization because signpost starts as closed by default\n        // but we shouldn't focus on that initial false value\n        // we should focus back only if it's closed after being opened\n        if (!this.isOpen && prevIsOpen) {\n          this.focusOnClose();\n        }\n      }),\n      this.signpostIdService.id.subscribe(idChange => (this.ariaControl = idChange))\n    );\n  }\n\n  private focusOnClose() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    // we have to set the focus back on the trigger only if the focus is reset back to the body element\n    // if the focus is on another element, we are not allowed to move that focus back to this trigger again.\n    if (!this.isOpen && this.document.activeElement === this.document.body) {\n      this.signpostFocusManager.focusTrigger();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  /**********\n   *\n   * @description\n   * click handler for the ClrSignpost trigger button used to hide/show ClrSignpostContent.\n   */\n  @HostListener('click', ['$event'])\n  onSignpostTriggerClick(event: Event): void {\n    this.toggleService.toggleWithEvent(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild, ElementRef } from '@angular/core';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\n\nimport { ClrSignpostTrigger } from './signpost-trigger';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\n\n@Component({\n  selector: 'clr-signpost',\n  template: `\n        <ng-container *ngIf=\"!useCustomTrigger\">\n            <button\n                type=\"button\"\n                class=\"signpost-action btn btn-small btn-link\"\n                clrSignpostTrigger>\n                <clr-icon shape=\"info\" [attr.title]=\"commonStrings.keys.info\"></clr-icon>\n            </button>\n        </ng-container>\n\n        <ng-content></ng-content>\n    `,\n  host: { '[class.signpost]': 'true' },\n  providers: [\n    ClrPopoverToggleService,\n    SignpostFocusManager,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    SignpostIdService,\n  ],\n})\n\n/*********\n *\n * @class ClrSignpost\n *\n * @description\n * Class used to configure and control the state of a ClrSignpost and its associated ClrSignpostContent.\n * It supports the clrPosition with a 'right-middle' default.\n *\n */\nexport class ClrSignpost {\n  constructor(public commonStrings: ClrCommonStringsService) {}\n\n  /**********\n   * @property useCustomTrigger\n   *\n   * @description\n   * Flag used to determine if we need to use the default trigger or a user supplied trigger element.\n   *\n   */\n  public useCustomTrigger: boolean = false;\n\n  /**********\n   * @property signPostTrigger\n   *\n   * @description\n   * Uses ContentChild to check for a user supplied element with the ClrSignpostTrigger on it.\n   *\n   */\n  @ContentChild(ClrSignpostTrigger)\n  set customTrigger(trigger: ClrSignpostTrigger) {\n    this.useCustomTrigger = !!trigger;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-cell',\n  template: `\n        <ng-template #cellPortal>\n            <ng-content></ng-content>\n        </ng-template>\n    `,\n})\nexport class WrappedCell implements DynamicWrapper, AfterViewInit, OnDestroy {\n  _dynamic = false;\n  @ViewChild('cellPortal') templateRef: TemplateRef<void>;\n  cellView: EmbeddedViewRef<void>; // the cells projected view\n\n  ngAfterViewInit() {\n    this.cellView = this.templateRef.createEmbeddedView(null);\n  }\n\n  ngOnDestroy() {\n    this.cellView.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChildren, Injector, OnInit, QueryList, ViewContainerRef } from '@angular/core';\n\nimport { ClrSignpost } from '../../popover/signpost/signpost';\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { WrappedCell } from './wrapped-cell';\n\n@Component({\n  selector: 'clr-dg-cell',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.datagrid-cell]': 'true',\n    '[class.datagrid-signpost-trigger]': 'signpost.length > 0',\n    role: 'gridcell',\n  },\n})\nexport class ClrDatagridCell implements OnInit {\n  /*********\n   * @property signpost\n   *\n   * @description\n   * @ContentChild is used to detect the presence of a Signpost in the projected content.\n   * On the host, we set the .datagrid-signpost-trigger class on the cell when signpost.length is greater than 0.\n   *\n   */\n  @ContentChildren(ClrSignpost) signpost: QueryList<ClrSignpost>;\n\n  constructor(private vcr: ViewContainerRef) {}\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedCell, this.vcr);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedCell, this.vcr).cellView;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridDisplayMode {\n  DISPLAY,\n  CALCULATE,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridRenderStep {\n  ALIGN_COLUMNS,\n  CALCULATE_MODE_ON,\n  CALCULATE_MODE_OFF,\n  CLEAR_WIDTHS, // Note this is listened to by both cells and columns\n  COMPUTE_COLUMN_WIDTHS,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\n\n@Injectable()\nexport class DatagridRenderOrganizer {\n  protected _renderStep: Subject<DatagridRenderStep> = new Subject<DatagridRenderStep>();\n  public get renderStep(): Observable<DatagridRenderStep> {\n    return this._renderStep.asObservable();\n  }\n\n  public filterRenderSteps(step: DatagridRenderStep) {\n    return this.renderStep.pipe(filter(testStep => step === testStep));\n  }\n\n  private alreadySized = false;\n\n  public resize() {\n    this._renderStep.next(DatagridRenderStep.CALCULATE_MODE_ON);\n    if (this.alreadySized) {\n      this._renderStep.next(DatagridRenderStep.CLEAR_WIDTHS);\n    }\n    this._renderStep.next(DatagridRenderStep.COMPUTE_COLUMN_WIDTHS);\n    this._renderStep.next(DatagridRenderStep.ALIGN_COLUMNS);\n    this.alreadySized = true;\n    this._renderStep.next(DatagridRenderStep.CALCULATE_MODE_OFF);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DatagridDisplayMode } from '../enums/display-mode.enum';\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { DatagridRenderOrganizer } from '../render/render-organizer';\n\n@Injectable()\nexport class DisplayModeService implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  protected _view: BehaviorSubject<DatagridDisplayMode> = new BehaviorSubject<DatagridDisplayMode>(\n    DatagridDisplayMode.DISPLAY\n  );\n\n  constructor(renderOrganizer: DatagridRenderOrganizer) {\n    this.subscriptions.push(\n      renderOrganizer\n        .filterRenderSteps(DatagridRenderStep.CALCULATE_MODE_ON)\n        .subscribe(() => this._view.next(DatagridDisplayMode.CALCULATE))\n    );\n\n    this.subscriptions.push(\n      renderOrganizer\n        .filterRenderSteps(DatagridRenderStep.CALCULATE_MODE_OFF)\n        .subscribe(() => this._view.next(DatagridDisplayMode.DISPLAY))\n    );\n  }\n\n  public get view(): Observable<DatagridDisplayMode> {\n    return this._view.asObservable();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum SelectionType {\n  None,\n  Single,\n  Multi,\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, TrackByFunction, NgZone } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { FiltersProvider } from './filters';\nimport { Items } from './items';\nimport { SelectionType } from '../enums/selection-type';\nimport { debounceTime } from 'rxjs/operators';\n\nlet nbSelection: number = 0;\n\n@Injectable()\nexport class Selection<T = any> {\n  public id: string;\n  public preserveSelection: boolean = false;\n  private prevSelectionRefs: T[] = []; // Refs of selected items\n  private prevSingleSelectionRef: T; // Ref of single selected item\n  private lockedRefs: T[] = []; // Ref of locked items\n\n  constructor(private _items: Items<T>, private _filters: FiltersProvider<T>, private _zone: NgZone) {\n    this.id = 'clr-dg-selection' + nbSelection++;\n\n    this.subscriptions.push(\n      this._filters.change.subscribe(() => {\n        if (!this._selectable || this.preserveSelection) {\n          return;\n        }\n        this.clearSelection();\n      })\n    );\n\n    this.subscriptions.push(\n      this._items.allChanges.subscribe(updatedItems => {\n        // Reset the lockedRefs;\n        const updateLockedRef: T[] = [];\n\n        switch (this.selectionType) {\n          case SelectionType.None: {\n            break;\n          }\n\n          case SelectionType.Single: {\n            let newSingle: any;\n            const trackBy: TrackByFunction<T> = this._items.trackBy;\n            let selectionUpdated: boolean = false;\n\n            // if the currentSingle has been set before data was loaded, we look up and save the ref from current data set\n            if (this.currentSingle && !this.prevSingleSelectionRef) {\n              if (this._items.all && this._items.trackBy) {\n                const lookup = this._items.all.findIndex(maybe => maybe === this.currentSingle);\n                this.prevSingleSelectionRef = this._items.trackBy(lookup, this.currentSingle);\n              }\n            }\n\n            updatedItems.forEach((item, index) => {\n              const ref = trackBy(index, item);\n              // If one of the updated items is the previously selectedSingle, set it as the new one\n              if (this.prevSingleSelectionRef === ref) {\n                newSingle = item;\n                selectionUpdated = true;\n              }\n              if (this.lockedRefs.indexOf(ref) > -1) {\n                updateLockedRef.push(ref);\n              }\n            });\n\n            // If we're using smart datagrids, we expect all items to be present in the updatedItems array.\n            // Therefore, we should delete the currentSingle if it used to be defined but doesn't exist anymore.\n            // No explicit \"delete\" is required, since newSingle would be undefined at this point.\n            // Marking it as selectionUpdated here will set currentSingle to undefined below in the setTimeout.\n            if (this._items.smart && !newSingle) {\n              selectionUpdated = true;\n            }\n\n            // TODO: Discussed this with Eudes and this is fine for now.\n            // But we need to figure out a different pattern for the\n            // child triggering the parent change detection problem.\n            // Using setTimeout for now to fix this.\n            setTimeout(() => {\n              if (selectionUpdated) {\n                this.currentSingle = newSingle;\n              }\n            }, 0);\n            break;\n          }\n\n          case SelectionType.Multi: {\n            let leftOver: any[] = this.current.slice();\n            const trackBy: TrackByFunction<any> = this._items.trackBy;\n            let selectionUpdated: boolean = false;\n\n            // if the current has been set before data was loaded, we look up and save the ref from current data set\n            if (this.current.length > 0 && this.prevSelectionRefs.length !== this.current.length) {\n              if (this._items.all && this._items.trackBy) {\n                this.prevSelectionRefs = [];\n                this.current.forEach(item => {\n                  const lookup = this._items.all.findIndex(maybe => maybe === item);\n                  this.prevSelectionRefs.push(this._items.trackBy(lookup, item));\n                });\n              }\n            }\n\n            // Duplicate loop, when the issue is issue#2342 is revisited keep in mind that\n            // we need to go over every updated item and check to see if there are valid to be\n            // locked or not and update it. When only add items that are found in the lockedRefs back.\n            //\n            // The both loops below that goes over updatedItems could be combined into one.\n            updatedItems.forEach((item, index) => {\n              const ref = trackBy(index, item);\n              if (this.lockedRefs.indexOf(ref) > -1) {\n                updateLockedRef.push(ref);\n              }\n            });\n\n            // TODO: revisit this when we work on https://github.com/vmware/clarity/issues/2342\n            // currently, the selection is cleared when filter is applied, so the logic inside\n            // the if statement below results in broken behavior.\n            if (leftOver.length > 0) {\n              updatedItems.forEach((item, index) => {\n                const ref = trackBy(index, item);\n                // Look in current selected refs array if item is selected, and update actual value\n                const selectedIndex = this.prevSelectionRefs.indexOf(ref);\n                if (selectedIndex > -1) {\n                  leftOver[selectedIndex] = item;\n                  selectionUpdated = true;\n                }\n              });\n\n              // Filter out any unmatched items if we're using smart datagrids where we expect all items to be\n              // present\n              if (this._items.smart) {\n                leftOver = leftOver.filter(selected => updatedItems.indexOf(selected) > -1);\n                if (this.current.length !== leftOver.length) {\n                  selectionUpdated = true;\n                }\n              }\n\n              // TODO: Discussed this with Eudes and this is fine for now.\n              // But we need to figure out a different pattern for the\n              // child triggering the parent change detection problem.\n              // Using setTimeout for now to fix this.\n              setTimeout(() => {\n                if (selectionUpdated) {\n                  this.current = leftOver;\n                }\n              }, 0);\n            }\n            break;\n          }\n\n          default: {\n            break;\n          }\n        }\n        // Sync locked items\n        this.lockedRefs = updateLockedRef;\n      })\n    );\n\n    this.subscriptions.push(this._valueCollector.pipe(debounceTime(0)).subscribe(() => this.emitChange()));\n  }\n\n  public clearSelection(): void {\n    this._current = [];\n    this.prevSelectionRefs = [];\n    this._currentSingle = null;\n    this.prevSingleSelectionRef = null;\n    this.emitChange();\n  }\n\n  private _selectionType: SelectionType = SelectionType.None;\n  public get selectionType(): SelectionType {\n    return this._selectionType;\n  }\n  public set selectionType(value: SelectionType) {\n    if (value === this.selectionType) {\n      return;\n    }\n    this._selectionType = value;\n    if (value === SelectionType.None) {\n      delete this.current;\n    } else {\n      this.updateCurrent([], false);\n    }\n  }\n\n  /** @deprecated since 2.0, remove in 3.0 */\n  public rowSelectionMode: boolean = false;\n\n  private get _selectable(): boolean {\n    return this._selectionType === SelectionType.Multi || this._selectionType === SelectionType.Single;\n  }\n  /**\n   * Ignore items changes in the same change detection cycle.\n   */\n  // tslint:disable-next-line\n  private debounce: boolean = false;\n\n  /**\n   * Subscriptions to the other providers changes.\n   */\n  private subscriptions: Subscription[] = [];\n\n  /**\n   * Cleans up our subscriptions to other providers\n   */\n  public destroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * The current selection in single selection type\n   */\n  private _currentSingle: T;\n  public get currentSingle(): T {\n    return this._currentSingle;\n  }\n  public set currentSingle(value: T) {\n    if (value === this._currentSingle) {\n      return;\n    }\n\n    this._currentSingle = value;\n    if (this._items.all && this._items.trackBy && value) {\n      const lookup = this._items.all.findIndex(maybe => maybe === value);\n      this.prevSingleSelectionRef = this._items.trackBy(lookup, value);\n    }\n    this.emitChange();\n    // This setTimeout makes sure that the change is\n    // not emitted multiple times in the same change\n    // detection cycle.\n    this._zone.runOutsideAngular(() => {\n      if (!this.debounce) {\n        this.debounce = true;\n        setTimeout(() => (this.debounce = false));\n      }\n    });\n  }\n\n  /**\n   * The current selection\n   */\n  private _current: T[];\n  public get current(): T[] {\n    return this._current;\n  }\n  public set current(value: T[]) {\n    this.updateCurrent(value, true);\n  }\n\n  private _valueCollector: Subject<T[]> = new Subject<T[]>();\n  public updateCurrent(value: T[], emit: boolean) {\n    this._current = value;\n    if (emit) {\n      this._valueCollector.next(value);\n    }\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to selection changes\n   */\n  private _change = new Subject<T[] | T>();\n  private emitChange() {\n    if (this._selectionType === SelectionType.Single) {\n      this._change.next(this.currentSingle);\n    } else if (this._selectionType === SelectionType.Multi) {\n      this._change.next(this.current);\n    }\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<T[] | T> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * Checks if an item is currently selected\n   */\n  public isSelected(item: T): boolean {\n    if (this._selectionType === SelectionType.Single) {\n      return this.currentSingle === item;\n    } else if (this._selectionType === SelectionType.Multi) {\n      return this.current.indexOf(item) >= 0;\n    }\n    return false;\n  }\n\n  /**\n   * Selects an item\n   */\n  private selectItem(item: T): void {\n    this.current = this.current.concat(item);\n    if (this._items.trackBy && this._items.all) {\n      // Push selected ref onto array\n      const lookup = this._items.all.findIndex(maybe => maybe === item);\n      this.prevSelectionRefs.push(this._items.trackBy(lookup, item));\n    }\n  }\n\n  /**\n   * Deselects an item\n   */\n  private deselectItem(indexOfItem: number): void {\n    this.current = this.current.slice(0, indexOfItem).concat(this.current.slice(indexOfItem + 1));\n    if (this._items.trackBy && indexOfItem < this.prevSelectionRefs.length) {\n      // Keep selected refs array in sync\n      const removedItems = this.prevSelectionRefs.splice(indexOfItem, 1);\n      // locked reference is no longer needed (if any)\n      this.lockedRefs = this.lockedRefs.filter(locked => locked !== removedItems[0]);\n    }\n  }\n\n  /**\n   * Selects or deselects an item\n   */\n  public setSelected(item: T, selected: boolean) {\n    switch (this._selectionType) {\n      case SelectionType.None:\n        break;\n      case SelectionType.Single:\n        // in single selection, set currentSingle method should be used\n        break;\n      case SelectionType.Multi:\n        const index = this.current.indexOf(item);\n        if (index >= 0 && !selected) {\n          this.deselectItem(index);\n        } else if (index < 0 && selected) {\n          this.selectItem(item);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Checks if all currently displayed items are selected\n   */\n  public isAllSelected(): boolean {\n    if (this._selectionType !== SelectionType.Multi || !this._items.displayed) {\n      return false;\n    }\n    // make sure to exclude the locked items from the list when counting\n    const displayedItems: T[] = this._items.displayed.filter(item => {\n      return this.isLocked(item) === false;\n    });\n\n    const nbDisplayed = displayedItems.length;\n    if (nbDisplayed < 1) {\n      return false;\n    }\n    const temp: T[] = displayedItems.filter(item => this.current.indexOf(item) > -1);\n    return temp.length === displayedItems.length;\n  }\n\n  /**\n   * Make sure that it could be locked\n   *\n   * @remark\n   * Check also is items.all an array, if not there is no nothing to lock or compare to\n   *\n   */\n  private canItBeLocked(): boolean {\n    // We depend on the trackBy and all so there are part of the requirment of is item could be locked\n    return this._selectionType !== SelectionType.None && Array.isArray(this._items.all);\n  }\n\n  /**\n   * Lock and unlock item\n   */\n  public lockItem(item: T, lock: boolean) {\n    if (this.canItBeLocked()) {\n      const ref = this._items.trackBy(this._items.all.findIndex(maybe => maybe === item), item);\n      if (lock === true) {\n        // Add to lockedRef\n        this.lockedRefs.push(ref);\n      } else {\n        // Remove from lockedRef\n        this.lockedRefs = this.lockedRefs.filter(lockedItem => ref !== lockedItem);\n      }\n    }\n  }\n\n  /**\n   * Check is item locked or not by searcing into lockedRefs for entry\n   */\n  public isLocked(item: T): boolean {\n    /**\n     * The check for selectionType will boost the performence by NOT searching\n     * into the array when there is no need for that.\n     */\n    if (this.canItBeLocked()) {\n      const ref = this._items.trackBy(this._items.all.findIndex(maybe => maybe === item), item);\n      return this.lockedRefs.indexOf(ref) > -1;\n    }\n\n    return false;\n  }\n\n  /**\n   * Selects or deselects all currently displayed items\n   */\n  public toggleAll() {\n    if (this._selectionType === SelectionType.None || this._selectionType === SelectionType.Single) {\n      return;\n    }\n    /**\n     * If every currently displayed item is already selected, we clear them.\n     * If at least one item isn't selected, we select every currently displayed item.\n     */\n    if (this.isAllSelected()) {\n      this._items.displayed.forEach(item => {\n        const currentIndex = this.current.indexOf(item);\n        if (currentIndex > -1 && this.isLocked(item) === false) {\n          this.deselectItem(currentIndex);\n        }\n      });\n    } else {\n      this._items.displayed.forEach(item => {\n        if (this.current.indexOf(item) < 0 && this.isLocked(item) === false) {\n          this.selectItem(item);\n        }\n      });\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-row',\n  template: `\n        <ng-template #rowPortal>\n            <ng-content></ng-content>\n        </ng-template>\n    `,\n})\nexport class WrappedRow implements DynamicWrapper, AfterViewInit, OnDestroy {\n  _dynamic = false;\n\n  @ViewChild('rowPortal') templateRef: TemplateRef<void>;\n  rowView: EmbeddedViewRef<void>; // the rows projected view (in memory)\n\n  ngAfterViewInit() {\n    // Create the cells view in memory, not the DOM.\n    this.rowView = this.templateRef.createEmbeddedView(null);\n  }\n\n  ngOnDestroy() {\n    this.rowView.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { ClrLoadingState } from '../../utils/loading/loading';\n\nlet nbRow = 0;\n\n@Injectable()\nexport class DatagridIfExpandService extends IfExpandService {\n  expandableId = '';\n\n  constructor() {\n    super();\n    nbRow++;\n    this.expandableId = 'clr-dg-expandable-row-' + nbRow;\n  }\n\n  // due to the es5 spec if the set is overridden on base class the getter must also be overridden\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  set expanded(value: boolean) {\n    value = !!value;\n    if (value !== this._expanded) {\n      this._expanded = value;\n      this._animate.next();\n      this._expandChange.next(value);\n    }\n  }\n\n  loadingStateChange(state: ClrLoadingState) {\n    super.loadingStateChange(state);\n    if (state !== ClrLoadingState.LOADING) {\n      this._animate.next();\n    }\n  }\n\n  private _replace: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  get replace(): Observable<boolean> {\n    return this._replace.asObservable();\n  }\n\n  setReplace(replaceValue: boolean) {\n    this._replace.next(replaceValue);\n  }\n\n  private _animate: Subject<boolean> = new Subject<boolean>();\n  get animate(): Observable<boolean> {\n    return this._animate.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  Input,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { combineLatest, Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\n\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { DatagridDisplayMode } from './enums/display-mode.enum';\nimport { DisplayModeService } from './providers/display-mode.service';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { WrappedRow } from './wrapped-row';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SelectionType } from './enums/selection-type';\nimport { DatagridIfExpandService } from './datagrid-if-expanded.service';\nimport { ClrExpandableAnimation } from '../../utils/animations/expandable-animation/expandable-animation';\nimport { DetailService } from './providers/detail.service';\n\nlet nbRow: number = 0;\n\n@Component({\n  selector: 'clr-dg-row',\n  templateUrl: './datagrid-row.html',\n  host: {\n    '[class.datagrid-row]': 'true',\n    '[class.datagrid-selected]': 'selected',\n    '[attr.aria-owns]': 'id',\n    role: 'rowgroup',\n  },\n  providers: [\n    DatagridIfExpandService,\n    { provide: IfExpandService, useExisting: DatagridIfExpandService },\n    { provide: LoadingListener, useExisting: DatagridIfExpandService },\n  ],\n})\nexport class ClrDatagridRow<T = any> implements AfterContentInit, AfterViewInit {\n  public id: string;\n  public radioId: string;\n  public checkboxId: string;\n  public expandableId: string;\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  @ViewChild(ClrExpandableAnimation) expandAnimation: ClrExpandableAnimation;\n\n  /**\n   * Model of the row, to use for selection\n   */\n  @Input('clrDgItem') item: T;\n\n  public replaced;\n\n  public expandAnimationTrigger: boolean = false;\n\n  constructor(\n    public selection: Selection<T>,\n    public rowActionService: RowActionService,\n    public globalExpandable: ExpandableRowsCount,\n    public expand: DatagridIfExpandService,\n    public detailService: DetailService,\n    private displayMode: DisplayModeService,\n    private vcr: ViewContainerRef,\n    private renderer: Renderer2,\n    private el: ElementRef,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    nbRow++;\n    this.id = 'clr-dg-row' + nbRow;\n    this.radioId = 'clr-dg-row-rd' + nbRow;\n    this.checkboxId = 'clr-dg-row-cb' + nbRow;\n    this.expandableId = expand.expandableId;\n\n    this.subscriptions.push(\n      combineLatest(this.expand.replace, this.expand.expandChange).subscribe(\n        ([expandReplaceValue, expandChangeValue]) => {\n          if (expandReplaceValue && expandChangeValue) {\n            // replaced and expanding\n            this.replaced = true;\n            this.renderer.addClass(this.el.nativeElement, 'datagrid-row-replaced');\n          } else {\n            this.replaced = false;\n            // Handles these cases: not replaced and collapsing & replaced and\n            // collapsing and not replaced and expanding.\n            this.renderer.removeClass(this.el.nativeElement, 'datagrid-row-replaced');\n          }\n        }\n      )\n    );\n  }\n\n  private _selected = false;\n  /**\n   * Indicates if the row is selected\n   */\n  public get selected() {\n    if (this.selection.selectionType === SelectionType.None) {\n      return this._selected;\n    } else {\n      return this.selection.isSelected(this.item);\n    }\n  }\n\n  @Input('clrDgSelected')\n  public set selected(value: boolean) {\n    if (this.selection.selectionType === SelectionType.None) {\n      this._selected = value;\n    } else {\n      this.selection.setSelected(this.item, value);\n    }\n  }\n\n  // By default every item is selectable\n  @Input('clrDgSelectable')\n  public set clrDgSelectable(value: boolean) {\n    this.selection.lockItem(this.item, value === false);\n  }\n\n  public get clrDgSelectable() {\n    return !this.selection.isLocked(this.item);\n  }\n\n  @Output('clrDgSelectedChange') selectedChanged = new EventEmitter<boolean>(false);\n\n  public toggle(selected = !this.selected) {\n    if (selected !== this.selected) {\n      this.selected = selected;\n      this.selectedChanged.emit(selected);\n    }\n  }\n\n  public get expanded() {\n    return this.expand.expanded;\n  }\n\n  @Input('clrDgExpanded')\n  public set expanded(value: boolean) {\n    this.expand.expanded = value;\n  }\n\n  @Output('clrDgExpandedChange') expandedChange = new EventEmitter<boolean>(false);\n\n  public toggleExpand() {\n    if (this.expand.expandable) {\n      this.expandAnimation.updateStartHeight();\n      this.expanded = !this.expanded;\n      this.expandedChange.emit(this.expanded);\n    }\n  }\n\n  @ViewChild('detailButton') detailButton;\n\n  private _detailOpenLabel = '';\n  @Input()\n  set clrDgDetailOpenLabel(label: string) {\n    this._detailOpenLabel = label;\n  }\n  get clrDgDetailOpenLabel(): string {\n    return this._detailOpenLabel ? this._detailOpenLabel : this.commonStrings.keys.open;\n  }\n  private _detailCloseLabel = '';\n  @Input()\n  set clrDgDetailCloseLabel(label: string) {\n    this._detailCloseLabel = label;\n  }\n  get clrDgDetailCloseLabel(): string {\n    return this._detailCloseLabel ? this._detailCloseLabel : this.commonStrings.keys.close;\n  }\n\n  /*****\n   * property dgCells\n   *\n   * @description\n   * A Query List of the ClrDatagrid cells in this row.\n   *\n   */\n  @ContentChildren(ClrDatagridCell) dgCells: QueryList<ClrDatagridCell>;\n\n  ngAfterContentInit() {\n    this.dgCells.changes.subscribe(() => {\n      this.dgCells.forEach(cell => {\n        if (!cell._view.destroyed) {\n          this._scrollableCells.insert(cell._view);\n        }\n      });\n    });\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.displayMode.view.subscribe(viewChange => {\n        // Listen for view changes and move cells around depending on the current displayType\n        // remove cell views from display view\n        for (let i = this._scrollableCells.length; i > 0; i--) {\n          this._scrollableCells.detach();\n        }\n        // remove cell views from calculated view\n        for (let i = this._calculatedCells.length; i > 0; i--) {\n          this._calculatedCells.detach();\n        }\n        if (viewChange === DatagridDisplayMode.CALCULATE) {\n          this.displayCells = false;\n          this.dgCells.forEach(cell => {\n            if (!cell._view.destroyed) {\n              this._calculatedCells.insert(cell._view);\n            }\n          });\n        } else {\n          this.displayCells = true;\n          this.dgCells.forEach(cell => {\n            if (!cell._view.destroyed) {\n              this._scrollableCells.insert(cell._view);\n            }\n          });\n        }\n      }),\n      this.expand.animate.subscribe(() => {\n        this.expandAnimationTrigger = !this.expandAnimationTrigger;\n      })\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  public displayCells = false;\n\n  @ViewChild('stickyCells', { read: ViewContainerRef })\n  _stickyCells: ViewContainerRef;\n  @ViewChild('scrollableCells', { read: ViewContainerRef })\n  _scrollableCells: ViewContainerRef;\n  @ViewChild('calculatedCells', { read: ViewContainerRef })\n  _calculatedCells: ViewContainerRef;\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedRow, this.vcr);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedRow, this.vcr).rowView;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DatagridPropertyComparator } from '../built-in/comparators/datagrid-property-comparator';\nimport { ClrDatagridStateInterface } from '../interfaces/state.interface';\n\nimport { FiltersProvider } from './filters';\nimport { Page } from './page';\nimport { Sort } from './sort';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n/**\n * This provider aggregates state changes from the various providers of the Datagrid\n */\n@Injectable()\nexport class StateProvider<T> {\n  constructor(\n    private filters: FiltersProvider<T>,\n    private sort: Sort<T>,\n    private page: Page,\n    private debouncer: StateDebouncer\n  ) {}\n\n  /**\n   * The Observable that lets other classes subscribe to global state changes\n   */\n  change: Observable<ClrDatagridStateInterface<T>> = this.debouncer.change.pipe(map(() => this.state));\n\n  /*\n     * By making this a getter, we open the possibility for a setter in the future.\n     * It's been requested a couple times.\n     */\n  get state(): ClrDatagridStateInterface<T> {\n    const state: ClrDatagridStateInterface<T> = {};\n    if (this.page.size > 0) {\n      state.page = {\n        from: this.page.firstItem,\n        to: this.page.lastItem,\n        size: this.page.size,\n        current: this.page.current,\n      };\n    }\n    if (this.sort.comparator) {\n      if (this.sort.comparator instanceof DatagridPropertyComparator) {\n        /*\n                 * Special case for the default object property comparator,\n                 * we give the property name instead of the actual comparator.\n                 */\n        state.sort = { by: (<DatagridPropertyComparator<T>>this.sort.comparator).prop, reverse: this.sort.reverse };\n      } else {\n        state.sort = { by: this.sort.comparator, reverse: this.sort.reverse };\n      }\n    }\n\n    const activeFilters = this.filters.getActiveFilters();\n    if (activeFilters.length > 0) {\n      state.filters = [];\n      for (const filter of activeFilters) {\n        if (filter.state) {\n          state.filters.push(filter.state);\n        } else {\n          state.filters.push(filter);\n        }\n      }\n    }\n    return state;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, PLATFORM_ID } from '@angular/core';\n\n/**\n * @description\n * Internal datagrid service that holds a reference to the clr-dg-table element and exposes a method to get height.\n */\n@Injectable()\nexport class TableSizeService {\n  private _tableRef: HTMLElement;\n\n  public get tableRef(): HTMLElement {\n    return this._tableRef;\n  }\n\n  public set tableRef(element: HTMLElement) {\n    this._tableRef = element;\n  }\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n  public set table(table: ElementRef) {\n    if (isPlatformBrowser(this.platformId) && table.nativeElement) {\n      this.tableRef = table.nativeElement.querySelector('.datagrid-table');\n    }\n  }\n\n  // Used when resizing columns to show the column border being dragged.\n  getColumnDragHeight(): string {\n    if (!this.tableRef) {\n      return;\n    }\n    return `${this.tableRef.clientHeight}px`;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridColumnChanges {\n  WIDTH,\n  HIDDEN,\n}\n\nexport const ALL_COLUMN_CHANGES: DatagridColumnChanges[] = Object.keys(DatagridColumnChanges)\n  .map(key => DatagridColumnChanges[key])\n  .filter(key => key === parseInt(key, 10)); // extracts only integer keys\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ColumnStateDiff, ColumnState } from '../interfaces/column-state.interface';\nimport { ALL_COLUMN_CHANGES } from '../enums/column-changes.enum';\n\n@Injectable()\nexport class ColumnsService {\n  columns: BehaviorSubject<ColumnState>[] = [];\n  private _cache: ColumnState[] = [];\n\n  cache() {\n    this._cache = this.columns.map(subject => {\n      const value = { ...subject.value };\n      delete value.changes;\n      return value;\n    });\n  }\n\n  hasCache() {\n    return !!this._cache.length;\n  }\n\n  resetToLastCache() {\n    this._cache.forEach((state, index) => {\n      // Just emit the exact value from the cache\n      this.columns[index].next({ ...state, changes: ALL_COLUMN_CHANGES });\n    });\n    this._cache = [];\n  }\n\n  get columnStates(): ColumnState[] {\n    return this.columns.map(column => column.value);\n  }\n\n  get hasHideableColumns(): boolean {\n    return this.columnStates.filter(state => state.hideable).length > 0;\n  }\n\n  // Helper method to emit a change to a column only when there is an actual diff to process for that column\n  emitStateChangeAt(columnIndex: number, diff: ColumnStateDiff) {\n    if (!this.columns[columnIndex]) {\n      return;\n    }\n    this.emitStateChange(this.columns[columnIndex], diff);\n  }\n\n  emitStateChange(column: BehaviorSubject<ColumnState>, diff: ColumnStateDiff) {\n    column.next({ ...column.value, ...diff });\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridColumn } from './datagrid-column';\nimport { ClrDatagridItems } from './datagrid-items';\nimport { ClrDatagridPlaceholder } from './datagrid-placeholder';\nimport { ClrDatagridRow } from './datagrid-row';\nimport { DatagridDisplayMode } from './enums/display-mode.enum';\nimport { ClrDatagridStateInterface } from './interfaces/state.interface';\nimport { DisplayModeService } from './providers/display-mode.service';\nimport { FiltersProvider } from './providers/filters';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { Items } from './providers/items';\nimport { Page } from './providers/page';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { Sort } from './providers/sort';\nimport { StateDebouncer } from './providers/state-debouncer.provider';\nimport { StateProvider } from './providers/state.provider';\nimport { TableSizeService } from './providers/table-size.service';\nimport { DatagridRenderOrganizer } from './render/render-organizer';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SelectionType } from './enums/selection-type';\nimport { ColumnsService } from './providers/columns.service';\nimport { DetailService } from './providers/detail.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\n\n@Component({\n  selector: 'clr-datagrid',\n  templateUrl: './datagrid.html',\n  providers: [\n    Selection,\n    Sort,\n    FiltersProvider,\n    Page,\n    Items,\n    DatagridRenderOrganizer,\n    RowActionService,\n    ExpandableRowsCount,\n    StateDebouncer,\n    DetailService,\n    UNIQUE_ID_PROVIDER,\n    StateProvider,\n    TableSizeService,\n    ColumnsService,\n    DisplayModeService,\n  ],\n  host: {\n    '[class.datagrid-host]': 'true',\n    '[class.datagrid-detail-open]': 'detailService.isOpen',\n  },\n})\nexport class ClrDatagrid<T = any> implements AfterContentInit, AfterViewInit, OnDestroy {\n  constructor(\n    private organizer: DatagridRenderOrganizer,\n    public items: Items<T>,\n    public expandableRows: ExpandableRowsCount,\n    public selection: Selection<T>,\n    public rowActionService: RowActionService,\n    private stateProvider: StateProvider<T>,\n    private displayMode: DisplayModeService,\n    private renderer: Renderer2,\n    public detailService: DetailService,\n    @Inject(UNIQUE_ID) datagridId: string,\n    private el: ElementRef,\n    private page: Page,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this.detailService.id = datagridId;\n  }\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  /**\n   * Freezes the datagrid while data is loading\n   */\n  public get loading(): boolean {\n    return this.items.loading;\n  }\n\n  @Input('clrDgLoading')\n  public set loading(value: boolean) {\n    this.items.loading = value;\n  }\n\n  /**\n   * Output emitted whenever the data needs to be refreshed, based on user action or external ones\n   */\n  @Output('clrDgRefresh') public refresh = new EventEmitter<ClrDatagridStateInterface<T>>(false);\n\n  /**\n   * Public method to re-trigger the computation of displayed items manually\n   */\n  public dataChanged() {\n    this.items.refresh();\n  }\n\n  /**\n   * We grab the smart iterator from projected content\n   */\n  @ContentChild(ClrDatagridItems) public iterator: ClrDatagridItems<T>;\n\n  /**\n   * Array of all selected items\n   */\n  @Input('clrDgSelected')\n  set selected(value: T[]) {\n    if (value) {\n      this.selection.selectionType = SelectionType.Multi;\n    } else {\n      this.selection.selectionType = SelectionType.None;\n    }\n    this.selection.updateCurrent(value, false);\n  }\n\n  @Output('clrDgSelectedChange') selectedChanged = new EventEmitter<T[]>(false);\n\n  /**\n   * Selected item in single-select mode\n   */\n  @Input('clrDgSingleSelected')\n  set singleSelected(value: T) {\n    this.selection.selectionType = SelectionType.Single;\n    // the clrDgSingleSelected is updated in one of two cases:\n    // 1. an explicit value is passed\n    // 2. is being set to null or undefined, where previously it had a value\n    if (value) {\n      this.selection.currentSingle = value;\n    } else if (this.selection.currentSingle) {\n      this.selection.currentSingle = null;\n    }\n  }\n\n  @Output('clrDgSingleSelectedChange') singleSelectedChanged = new EventEmitter<T>(false);\n\n  @Input() clrDgSingleSelectionAriaLabel: string = this.commonStrings.keys.singleSelectionAriaLabel;\n  @Input() clrDgSingleActionableAriaLabel: string = this.commonStrings.keys.singleActionableAriaLabel;\n  @Input() clrDetailExpandableAriaLabel: string = this.commonStrings.keys.detailExpandableAriaLabel;\n  // Allows disabling of the auto focus on page/state changes (excludes focus management inside of popups)\n  @Input() clrDgDisablePageFocus = false;\n\n  @Input()\n  set clrDgPreserveSelection(state: boolean) {\n    this.selection.preserveSelection = state;\n  }\n  /**\n   * @deprecated since 2.0, remove in 3.0\n   *\n   * Selection/Deselection on row click mode\n   */\n  @Input('clrDgRowSelection')\n  set rowSelectionMode(value: boolean) {\n    this.selection.rowSelectionMode = value;\n  }\n\n  /**\n   * Indicates if all currently displayed items are selected\n   */\n  public get allSelected() {\n    return this.selection.isAllSelected();\n  }\n\n  /**\n   * Selects/deselects all currently displayed items\n   * @param value\n   */\n  public set allSelected(value: boolean) {\n    /**\n     * This is a setter but we ignore the value.\n     * It's strange, but it lets us have an indeterminate state where only\n     * some of the items are selected.\n     */\n    this.selection.toggleAll();\n  }\n\n  /**\n   * Custom placeholder detection\n   */\n  @ContentChild(ClrDatagridPlaceholder) public placeholder: ClrDatagridPlaceholder<T>;\n\n  /**\n   * Hideable Column data source / detection.\n   */\n  @ContentChildren(ClrDatagridColumn) public columns: QueryList<ClrDatagridColumn<T>>;\n\n  /**\n   * When the datagrid is user-managed without the smart iterator, we get the items displayed\n   * by querying the projected content. This is needed to keep track of the models currently\n   * displayed, typically for selection.\n   */\n\n  @ContentChildren(ClrDatagridRow) rows: QueryList<ClrDatagridRow<T>>;\n  @ViewChild('scrollableColumns', { read: ViewContainerRef })\n  scrollableColumns: ViewContainerRef;\n\n  @ViewChild('datagridTable', { read: ElementRef })\n  datagridTable: ElementRef;\n\n  ngAfterContentInit() {\n    if (!this.items.smart) {\n      this.items.all = this.rows.map((row: ClrDatagridRow<T>) => row.item);\n    }\n\n    this._subscriptions.push(\n      this.rows.changes.subscribe(() => {\n        if (!this.items.smart) {\n          this.items.all = this.rows.map((row: ClrDatagridRow<T>) => row.item);\n        }\n        // Remove any projected rows from the displayedRows container\n        // Necessary with Ivy off. See https://github.com/vmware/clarity/issues/4692\n        for (let i = this._displayedRows.length - 1; i >= 0; i--) {\n          if (this._displayedRows.get(i).destroyed) {\n            this._displayedRows.remove(i);\n          }\n        }\n        this.rows.forEach(row => {\n          this._displayedRows.insert(row._view);\n        });\n\n        // Try to update only when there is something cached and its open.\n        if (this.detailService.state && this.detailService.isOpen) {\n          const foundRow = this.rows.find((row, index) => {\n            return this.items.trackBy(index, row.item) === this.items.trackBy(index, this.detailService.state);\n          });\n\n          /**\n           * Reopen updated row or close it\n           */\n          foundRow ? this.detailService.open(foundRow.item, foundRow.detailButton) : this.detailService.close();\n        }\n      })\n    );\n  }\n\n  /**\n   * Our setup happens in the view of some of our components, so we wait for it to be done before starting\n   */\n  ngAfterViewInit() {\n    // TODO: determine if we can get rid of provider wiring in view init so that subscriptions can be done earlier\n    this.refresh.emit(this.stateProvider.state);\n    this._subscriptions.push(\n      this.stateProvider.change.subscribe(state => this.refresh.emit(state)),\n      this.selection.change.subscribe(s => {\n        if (this.selection.selectionType === SelectionType.Single) {\n          this.singleSelectedChanged.emit(<T>s);\n        } else if (this.selection.selectionType === SelectionType.Multi) {\n          this.selectedChanged.emit(<T[]>s);\n        }\n      }),\n      this.page.change.subscribe(() => {\n        if (!this.clrDgDisablePageFocus) {\n          this.datagridTable.nativeElement.focus();\n        }\n      }),\n      // A subscription that listens for displayMode changes on the datagrid\n      this.displayMode.view.subscribe(viewChange => {\n        // Remove any projected columns from the projectedDisplayColumns container\n        for (let i = this._projectedDisplayColumns.length; i > 0; i--) {\n          this._projectedDisplayColumns.detach();\n        }\n        // Remove any projected columns from the projectedCalculationColumns container\n        for (let i = this._projectedCalculationColumns.length; i > 0; i--) {\n          this._projectedCalculationColumns.detach();\n        }\n        // Remove any projected rows from the calculationRows container\n        for (let i = this._calculationRows.length; i > 0; i--) {\n          this._calculationRows.detach();\n        }\n        // Remove any projected rows from the displayedRows container\n        for (let i = this._displayedRows.length; i > 0; i--) {\n          this._displayedRows.detach();\n        }\n        if (viewChange === DatagridDisplayMode.DISPLAY) {\n          // Set state, style for the datagrid to DISPLAY and insert row & columns into containers\n          this.renderer.removeClass(this.el.nativeElement, 'datagrid-calculate-mode');\n          this.columns.forEach(column => {\n            this._projectedDisplayColumns.insert(column._view);\n          });\n          this.rows.forEach(row => {\n            this._displayedRows.insert(row._view);\n          });\n        } else {\n          // Set state, style for the datagrid to CALCULATE and insert row & columns into containers\n          this.renderer.addClass(this.el.nativeElement, 'datagrid-calculate-mode');\n          this.columns.forEach(column => {\n            this._projectedCalculationColumns.insert(column._view);\n          });\n          this.rows.forEach(row => {\n            this._calculationRows.insert(row._view);\n          });\n        }\n      })\n    );\n  }\n\n  /**\n   * Subscriptions to all the services and queries changes\n   */\n  private _subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  resize(): void {\n    this.organizer.resize();\n  }\n\n  @ViewChild('projectedDisplayColumns', { read: ViewContainerRef })\n  _projectedDisplayColumns: ViewContainerRef;\n  @ViewChild('projectedCalculationColumns', { read: ViewContainerRef })\n  _projectedCalculationColumns: ViewContainerRef;\n  @ViewChild('displayedRows', { read: ViewContainerRef })\n  _displayedRows: ViewContainerRef;\n  @ViewChild('calculationRows', { read: ViewContainerRef })\n  _calculationRows: ViewContainerRef;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-dg-action-bar',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: { '[class.datagrid-action-bar]': 'true' },\n})\nexport class ClrDatagridActionBar {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Inject, Input, OnDestroy, Output, NgZone, PLATFORM_ID } from '@angular/core';\n\nimport { RowActionService } from './providers/row-action-service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { isPlatformBrowser } from '@angular/common';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { Subscription } from 'rxjs';\n\nlet clrDgActionId = 0;\n\n@Component({\n  selector: 'clr-dg-action-overflow',\n  providers: [UNIQUE_ID_PROVIDER, ClrPopoverToggleService, ClrPopoverEventsService, ClrPopoverPositionService],\n  template: `\n      <button class=\"datagrid-action-toggle\"\n              type=\"button\"\n              role=\"button\"\n              aria-haspopup=\"true\"\n              #anchor\n              [attr.aria-controls]=\"popoverId\"\n              [attr.aria-expanded]=\"open\"\n              [attr.aria-label]=\"commonStrings.keys.rowActions\"\n              clrPopoverAnchor\n              clrPopoverOpenCloseButton>\n          <clr-icon shape=\"ellipsis-vertical\" [attr.title]=\"commonStrings.keys.rowActions\"></clr-icon>\n      </button>\n\n      <div class=\"datagrid-action-overflow\"\n           role=\"menu\"\n           [id]=\"popoverId\"\n           [attr.aria-hidden]=\"!open\"\n           [attr.id]=\"popoverId\"\n           clrFocusTrap\n           (click)=\"closeOverflowContent($event)\"\n           *clrPopoverContent=\"open at smartPosition; outsideClickToClose: true; scrollToClose: true\">\n          <ng-content></ng-content>\n      </div>\n  `,\n})\nexport class ClrDatagridActionOverflow implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.CENTER,\n    content: ClrAlignment.CENTER,\n  };\n\n  constructor(\n    private rowActionService: RowActionService,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private zone: NgZone,\n    private smartToggleService: ClrPopoverToggleService,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {\n    this.rowActionService.register();\n    this.subscriptions.push(\n      this.smartToggleService.openChange.subscribe(openState => {\n        this.open = openState;\n        if (openState) {\n          this.focusFirstButton();\n        }\n      })\n    );\n    this.popoverId = 'clr-action-menu' + clrDgActionId++;\n  }\n\n  ngOnDestroy() {\n    this.rowActionService.unregister();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  closeOverflowContent(event): void {\n    this.smartToggleService.toggleWithEvent(event);\n  }\n\n  private _open: boolean = false;\n  public get open() {\n    return this._open;\n  }\n\n  private focusFirstButton(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          const firstButton: HTMLButtonElement = document.querySelector('button.action-item');\n          if (firstButton) {\n            firstButton.focus();\n          }\n        });\n      });\n    }\n  }\n\n  @Input('clrDgActionOverflowOpen')\n  public set open(open: boolean) {\n    const openState = !!open;\n    if (!!openState !== this.open) {\n      // prevents chocolate mess\n      this.smartToggleService.open = openState;\n      this.openChange.emit(openState);\n      this._open = openState;\n    }\n  }\n\n  @Output('clrDgActionOverflowOpenChange') public openChange = new EventEmitter<boolean>(false);\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ElementRef, Injectable } from '@angular/core';\n\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../../../utils/drag-and-drop/drag-event';\nimport { DatagridRenderOrganizer } from '../render/render-organizer';\n\nconst MIN_COLUMN_WIDTH = 96;\n\n// This service allows DatagridHeaderRenderer and ClrDatagridColumnSeparator\n// to share column resize data with each other.\n\n@Injectable()\nexport class ColumnResizerService {\n  constructor(private el: ElementRef, private domAdapter: DomAdapter, private organizer: DatagridRenderOrganizer) {}\n\n  private widthBeforeResize: number;\n\n  private _resizedBy: number = 0;\n\n  public get resizedBy() {\n    return this._resizedBy;\n  }\n\n  // is it within the maximum resize range to the left\n  public isWithinMaxResizeRange: boolean;\n\n  public get minColumnWidth() {\n    return this.domAdapter.minWidth(this.el.nativeElement) || MIN_COLUMN_WIDTH;\n  }\n\n  public get maxResizeRange() {\n    return this.widthBeforeResize - this.minColumnWidth;\n  }\n\n  public startResize(): void {\n    this._resizedBy = 0;\n    this.isWithinMaxResizeRange = true;\n    this.widthBeforeResize = this.domAdapter.clientRect(this.el.nativeElement).width;\n  }\n\n  public endResize(): void {\n    this.organizer.resize();\n  }\n\n  public get widthAfterResize(): number {\n    return this.widthBeforeResize + this._resizedBy;\n  }\n\n  public calculateResize(event: ClrDragEvent<any>): void {\n    const moveX = event.dragPosition.moveX;\n    // returns the resize amount within the allowed range\n    if (moveX < -this.maxResizeRange) {\n      this._resizedBy = -this.maxResizeRange;\n      this.isWithinMaxResizeRange = false;\n    } else {\n      this._resizedBy = moveX;\n      this.isWithinMaxResizeRange = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT } from '@angular/common';\nimport { Component, Inject, Renderer2 } from '@angular/core';\n\nimport { ClrDragEvent } from '../../utils/drag-and-drop/drag-event';\nimport { ColumnResizerService } from './providers/column-resizer.service';\nimport { TableSizeService } from './providers/table-size.service';\nimport { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\n\n@Component({\n  selector: 'clr-dg-column-separator',\n  template: `\n    <div class=\"datagrid-column-handle\" aria-hidden=\"true\"\n      clrDraggable \n      [clrGroup]=\"columnSeparatorId\" \n      (clrDragStart)=\"showTracker(resizeTrackerEl)\" \n      (clrDragMove)=\"moveTracker($event, resizeTrackerEl)\" \n      (clrDragEnd)=\"hideTracker(resizeTrackerEl)\"></div>\n    <div class=\"datagrid-column-resize-tracker\" #resizeTrackerEl></div>\n    `,\n  host: {\n    '[class.datagrid-column-separator]': 'true',\n  },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrDatagridColumnSeparator {\n  // Every column draggable separator should have its own unique ID\n  // in order to not conflict with other draggables/droppables.\n  constructor(\n    private columnResizerService: ColumnResizerService,\n    private renderer: Renderer2,\n    private tableSizeService: TableSizeService,\n    @Inject(DOCUMENT) private document: any,\n    @Inject(UNIQUE_ID) public columnSeparatorId: string\n  ) {}\n\n  public showTracker(resizeTrackerEl: HTMLElement) {\n    this.columnResizerService.startResize();\n    const tableHeight = this.tableSizeService.getColumnDragHeight();\n    this.renderer.setStyle(resizeTrackerEl, 'height', tableHeight);\n    this.renderer.setStyle(resizeTrackerEl, 'display', 'block');\n  }\n\n  public moveTracker(event: ClrDragEvent<any>, resizeTrackerEl: HTMLElement) {\n    this.columnResizerService.calculateResize(event);\n    this.renderer.setStyle(resizeTrackerEl, 'transform', `translateX(${this.columnResizerService.resizedBy}px)`);\n    this.renderer.setStyle(this.document.body, 'cursor', 'col-resize');\n    this.redFlagTracker(resizeTrackerEl);\n  }\n\n  public hideTracker(resizeTrackerEl: HTMLElement) {\n    this.columnResizerService.endResize();\n    this.renderer.setStyle(resizeTrackerEl, 'display', 'none');\n    this.renderer.setStyle(resizeTrackerEl, 'transform', `translateX(0px)`);\n    this.renderer.setStyle(this.document.body, 'cursor', 'auto');\n  }\n\n  private redFlagTracker(resizeTrackerEl: HTMLElement) {\n    let isWithinMaxResizeRange: boolean;\n    // @TODO(JEREMY) Review this, it will always be true because above is always null\n    if (isWithinMaxResizeRange !== this.columnResizerService.isWithinMaxResizeRange) {\n      isWithinMaxResizeRange = this.columnResizerService.isWithinMaxResizeRange;\n      if (!isWithinMaxResizeRange) {\n        this.renderer.addClass(resizeTrackerEl, 'exceeded-max');\n      } else {\n        this.renderer.removeClass(resizeTrackerEl, 'exceeded-max');\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-dg-column-toggle-title',\n  template: `<ng-content></ng-content>`,\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggleTitle {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\n\n@Component({\n  selector: 'clr-dg-column-toggle-button',\n  template: `\n    <button class=\"btn btn-sm btn-link switch-button\"\n            (click)=\"selectAll()\"\n            [disabled]=\"allHideablesVisible\"\n            type=\"button\">\n      <ng-content></ng-content>\n    </button>\n  `,\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggleButton {\n  constructor(private columnsService: ColumnsService) {}\n\n  private allSelected: Subject<boolean> = new EventEmitter();\n\n  @Output('clrAllSelected')\n  get clrAllSelected(): Observable<boolean> {\n    return this.allSelected.asObservable();\n  }\n\n  private hideableColumns(): BehaviorSubject<ColumnState>[] {\n    return this.columnsService.columns.filter(column => column.value.hideable);\n  }\n\n  get allHideablesVisible() {\n    return this.hideableColumns().filter(column => column.value.hidden).length === 0;\n  }\n\n  selectAll() {\n    this.hideableColumns().forEach(hideableColumn =>\n      this.columnsService.emitStateChange(hideableColumn, {\n        hidden: false,\n        changes: [DatagridColumnChanges.HIDDEN],\n      })\n    );\n    this.allSelected.next(true);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Inject, ContentChild, ElementRef, NgZone, PLATFORM_ID, ViewChild } from '@angular/core';\n\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\nimport { isPlatformBrowser } from '@angular/common';\nimport { ClrDatagridColumnToggleTitle } from './datagrid-column-toggle-title';\nimport { ClrDatagridColumnToggleButton } from './datagrid-column-toggle-button';\n\n@Component({\n  selector: 'clr-dg-column-toggle',\n  template: `    \n      <button\n              role=\"button\"\n              type=\"button\"\n              class=\"btn btn-sm btn-link column-toggle--action\"\n              clrPopoverAnchor\n              clrPopoverOpenCloseButton\n              [attr.aria-controls]=\"popoverId\"\n              [attr.aria-owns]=\"popoverId\">\n          <clr-icon shape=\"view-columns\" [attr.title]=\"commonStrings.keys.pickColumns\"></clr-icon>\n      </button>\n      <div class=\"column-switch\"\n           role=\"dialog\"\n           [id]=\"popoverId\"\n           clrFocusTrap\n           *clrPopoverContent=\"openState at smartPosition; outsideClickToClose: true; scrollToClose: true\">\n          <div class=\"switch-header\">\n              <div class=\"clr-sr-only\" tabindex=\"-1\" #menuDescription>{{commonStrings.keys.showColumnsMenuDescription}}</div>\n              <div class=\"clr-sr-only\" tabindex=\"-1\" #allSelected>{{commonStrings.keys.allColumnsSelected}}</div>\n              <ng-container *ngIf=\"!customToggleTitle\">{{commonStrings.keys.showColumns}}</ng-container>\n              <ng-content select=\"clr-dg-column-toggle-title\"></ng-content>\n              <button class=\"btn btn-sm btn-link toggle-switch-close-button\"\n                      clrPopoverCloseButton\n                      type=\"button\"\n                      [attr.aria-label]=\"commonStrings.keys.close\">\n                  <clr-icon shape=\"close\" \n                            [attr.title]=\"commonStrings.keys.close\"></clr-icon>\n              </button>\n          </div>\n          <ul class=\"switch-content list-unstyled\">\n              <li *ngFor=\"let columnState of hideableColumnStates;trackBy: trackByFn\">\n                  <clr-checkbox-wrapper>\n                      <input clrCheckbox type=\"checkbox\"\n                             [disabled]=\"hasOnlyOneVisibleColumn && !columnState.hidden\"\n                             [ngModel]=\"!columnState.hidden\"\n                             (ngModelChange)=\"toggleColumnState(columnState, !$event)\">\n                      <label>\n                          <ng-template [ngTemplateOutlet]=\"columnState.titleTemplateRef\"></ng-template>\n                      </label>\n                  </clr-checkbox-wrapper>\n              </li>\n          </ul>\n          <div class=\"switch-footer\">\n              <ng-content select=\"clr-dg-column-toggle-button\"></ng-content>\n              <clr-dg-column-toggle-button *ngIf=\"!customToggleButton\" (clrAllSelected)=\"allColumnsSelected()\">\n                  {{commonStrings.keys.selectAll}}\n              </clr-dg-column-toggle-button>\n          </div>\n      </div>\n  `,\n  host: { '[class.column-switch-wrapper]': 'true', '[class.active]': 'openState' },\n  providers: [UNIQUE_ID_PROVIDER, ClrPopoverEventsService, ClrPopoverPositionService, ClrPopoverToggleService],\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggle {\n  private _allColumnsVisible: boolean;\n\n  // Smart Popover\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n  public openState;\n\n  @ContentChild(ClrDatagridColumnToggleTitle) customToggleTitle: ClrDatagridColumnToggleTitle;\n  @ContentChild(ClrDatagridColumnToggleButton) customToggleButton: ClrDatagridColumnToggleButton;\n  @ViewChild('menuDescription', { read: ElementRef })\n  private menuDescriptionElement: ElementRef<HTMLElement>;\n  @ViewChild('allSelected', { read: ElementRef })\n  private allSelectedElement: ElementRef<HTMLElement>;\n\n  public get allColumnsVisible(): boolean {\n    return this._allColumnsVisible;\n  }\n\n  public set allColumnsVisible(value: boolean) {\n    this._allColumnsVisible = value;\n  }\n\n  constructor(\n    public commonStrings: ClrCommonStringsService,\n    private columnsService: ColumnsService,\n    @Inject(UNIQUE_ID) public columnSwitchId: string,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private zone: NgZone,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {}\n\n  get hideableColumnStates(): ColumnState[] {\n    const hideables = this.columnsService.columns.filter(column => column.value.hideable);\n    return hideables.map(column => column.value);\n  }\n\n  get hasOnlyOneVisibleColumn(): boolean {\n    const nbNonHideableColumns = this.columnsService.columns.length - this.hideableColumnStates.length;\n    // this should only return true when there is no non-hideable columns.\n    return (\n      nbNonHideableColumns === 0 && this.hideableColumnStates.filter(columnState => !columnState.hidden).length === 1\n    );\n  }\n\n  toggleColumnState(columnState: ColumnState, event: boolean) {\n    const columnToToggle = this.columnsService.columns.filter(column => column.value === columnState)[0];\n    this.columnsService.emitStateChange(columnToToggle, {\n      hidden: event,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n  }\n\n  toggleSwitchPanel() {\n    this.openState = !this.openState;\n    if (this.openState && isPlatformBrowser(this.platformId) && this.menuDescriptionElement) {\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.menuDescriptionElement.nativeElement.focus();\n        });\n      });\n    }\n  }\n\n  allColumnsSelected() {\n    this.allSelectedElement.nativeElement.focus();\n  }\n\n  // Without tracking the checkboxes get rerendered on model update, which leads\n  // to loss of focus after checkbox toggle.\n  trackByFn(index) {\n    return index;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Optional } from '@angular/core';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\n\n/*\n * I don't think this deserves to be in IfExpanded itself,\n * so I'm adding a second directive on the same selector for now just for the datagrid\n */\n@Directive({ selector: '[clrIfExpanded]' })\nexport class DatagridDetailRegisterer {\n  constructor(@Optional() private expandableRowsCount: ExpandableRowsCount) {\n    if (this.expandableRowsCount) {\n      this.expandableRowsCount.register();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.expandableRowsCount) {\n      this.expandableRowsCount.unregister();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\nimport { DetailService } from './providers/detail.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-dg-detail-header',\n  host: {\n    '[class.datagrid-detail-header]': 'true',\n  },\n  template: `\n    <div class=\"datagrid-detail-header-title\" clrFocusOnViewInit [id]=\"titleId\">\n      <ng-content></ng-content>\n    </div>\n    <div class=\"datagrid-detail-pane-close\">\n      <button type=\"button\" \n              class=\"btn btn-link\" \n              (click)=\"detailService.close()\" \n              [attr.aria-label]=\"commonStrings.keys.close\">\n        <clr-icon size=\"24\" shape=\"times\"></clr-icon>\n      </button>\n    </div>\n  `,\n})\nexport class ClrDatagridDetailHeader {\n  get titleId() {\n    return `${this.detailService.id}-title`;\n  }\n\n  constructor(public detailService: DetailService, public commonStrings: ClrCommonStringsService) {}\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild, HostListener } from '@angular/core';\nimport { DetailService } from './providers/detail.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrDatagridDetailHeader } from './datagrid-detail-header';\n\n@Component({\n  selector: 'clr-dg-detail',\n  host: {\n    '[class.datagrid-detail-pane]': 'true',\n  },\n  // We put the *ngIf on the clrFocusTrap so it doesn't always exist on the page\n  // have to test for presence of header for aria-describedby because it was causing unit tests to crash\n  template: `\n    <div [clrFocusTrap]=\"{strict: false}\" class=\"datagrid-detail-pane-content\" *ngIf=\"detailService.isOpen\" role=\"dialog\"\n         [id]=\"detailService.id\" aria-modal=\"true\" [attr.aria-describedby]=\"header ? header.titleId : ''\">\n    <div class=\"clr-sr-only\">{{commonStrings.keys.detailPaneStart}}</div>\n      <ng-content></ng-content>\n      <div class=\"clr-sr-only\">{{commonStrings.keys.detailPaneEnd}}</div>\n    </div>\n    `,\n})\nexport class ClrDatagridDetail {\n  @ContentChild(ClrDatagridDetailHeader) public header: ClrDatagridDetailHeader;\n\n  constructor(public detailService: DetailService, public commonStrings: ClrCommonStringsService) {}\n\n  @HostListener('document:keyup.esc')\n  closeCheck(): void {\n    this.detailService.close();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { DetailService } from './providers/detail.service';\n\n@Directive({\n  selector: '[clrIfDetail]',\n})\nexport class ClrIfDetail implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  private skip = false; // This keeps us from resetting the input and calling the toggle twice\n\n  @Input('clrIfDetail')\n  set state(model) {\n    if (!this.skip) {\n      this.detailService.toggle(model);\n    }\n    this.skip = false;\n  }\n\n  @Output('clrIfDetailChange') public stateChange = new EventEmitter<any>(null);\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private detailService: DetailService\n  ) {\n    this.detailService.enabled = true;\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.detailService.stateChange.subscribe(state => {\n        if (state === true) {\n          this.togglePanel(true);\n        } else {\n          this.togglePanel(false);\n        }\n      })\n    );\n  }\n\n  private togglePanel(showPanel: boolean) {\n    let stateChangeParams = null;\n    this.viewContainer.clear();\n    if (showPanel === true) {\n      this.viewContainer.createEmbeddedView(this.templateRef, { $implicit: this.detailService.state });\n      this.skip = true;\n      stateChangeParams = this.detailService.state;\n    }\n\n    this.stateChange.emit(stateChangeParams);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-dg-detail-body',\n  template: `\n    <div class=\"clr-dg-detail-body-wrapper\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  host: {\n    '[class.datagrid-detail-body]': 'true',\n  },\n})\nexport class ClrDatagridDetailBody {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild } from '@angular/core';\n\nimport { ClrDatagridColumnToggle } from './datagrid-column-toggle';\nimport { Selection } from './providers/selection';\nimport { SelectionType } from './enums/selection-type';\nimport { ColumnsService } from './providers/columns.service';\nimport { DetailService } from './providers/detail.service';\n\n@Component({\n  selector: 'clr-dg-footer',\n  template: `\n        <ng-container\n            *ngIf=\"(selection.selectionType === SELECTION_TYPE.Multi) && (selection.current.length > 0)\">\n          <div class=\"clr-form-control-disabled\">\n              <clr-checkbox-wrapper class=\"datagrid-footer-select\">\n                <input clrCheckbox type=\"checkbox\" checked=\"checked\" disabled>\n                <label>{{selection.current.length}}</label>\n            </clr-checkbox-wrapper>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"!detailService.isOpen\">\n          <ng-content select=\"clr-dg-column-toggle\"></ng-content>\n          <clr-dg-column-toggle *ngIf=\"hasHideableColumns && !toggle\"></clr-dg-column-toggle>\n          <div class=\"datagrid-footer-description\">\n              <ng-content></ng-content>\n          </div>\n        </ng-container>\n        <ng-content select=\"clr-dg-pagination\"></ng-content>\n    `,\n  host: {\n    '[class.datagrid-footer]': 'true',\n  },\n})\nexport class ClrDatagridFooter<T = any> {\n  constructor(\n    public selection: Selection<T>,\n    public detailService: DetailService,\n    private columnsService: ColumnsService\n  ) {}\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  @ContentChild(ClrDatagridColumnToggle) toggle: ClrDatagridColumnToggle;\n\n  get hasHideableColumns(): boolean {\n    return this.columnsService.hasHideableColumns;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ColumnState } from '../interfaces/column-state.interface';\n\nexport const COLUMN_STATE = new InjectionToken<ColumnState>('COLUMN_STATE');\n\nexport function columnStateFactory() {\n  return new BehaviorSubject<ColumnState>({\n    changes: [],\n  });\n}\n\nexport const COLUMN_STATE_PROVIDER = {\n  provide: COLUMN_STATE,\n  useFactory: columnStateFactory,\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\nimport { COLUMN_STATE } from './providers/column-state.provider';\n\n@Directive({ selector: '[clrDgHideableColumn]' })\n\n/**\n *\n * @description\n * A structural directive meant to be used inside a clr-dg-column component.\n *\n * <clr-dg-column>\n *       <ng-container *clrDgHideableColumn=\"{ hidden: true }\">\n *           User ID\n *       </ng-container>\n *   </clr-dg-column>\n *\n * It sets up state and properties so that columns can be manges for hide/show by a service and an internal\n * datagrid toggle component.\n *\n */\nexport class ClrDatagridHideableColumn implements OnDestroy {\n  /**\n   *\n   * @description\n   * Used to initialize the column with either hidden or visible state.\n   *\n   */\n  private _hidden: boolean;\n\n  /**\n   *\n   * @description\n   * Setter fn for the @Input with the same name as this structural directive.\n   * It allows the user to pre-configure the column's hide/show state. { hidden: true }\n   * It's more verbose but has more Clarity.\n   *\n   *\n   * @example\n   * *clrDgHideableColumn\n   * *clrDgHideableColumn={hidden: false}\n   * *clrDgHideableColumn={hidden: true}\n   *\n   */\n  @Input('clrDgHideableColumn')\n  set clrDgHideableColumn(value: { hidden: boolean }) {\n    this.clrDgHidden = value && value.hidden ? value.hidden : false;\n  }\n\n  @Input('clrDgHidden')\n  set clrDgHidden(hidden: boolean) {\n    this._hidden = hidden ? hidden : false;\n    this.columnsService.emitStateChange(this.columnState, {\n      hidden: this._hidden,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n  }\n\n  @Output('clrDgHiddenChange') public hiddenChange = new EventEmitter<boolean>();\n\n  constructor(\n    private titleTemplateRef: TemplateRef<any>,\n    private viewContainerRef: ViewContainerRef,\n    private columnsService: ColumnsService,\n    @Optional()\n    @Inject(COLUMN_STATE)\n    private columnState: BehaviorSubject<ColumnState>\n  ) {\n    this.viewContainerRef.createEmbeddedView(this.titleTemplateRef);\n\n    if (!this.columnState) {\n      throw new Error('The *clrDgHideableColumn directive can only be used inside of a clr-dg-column component.');\n    }\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnInit() {\n    this.columnsService.emitStateChange(this.columnState, {\n      hideable: true,\n      titleTemplateRef: this.titleTemplateRef,\n      hidden: this._hidden,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n\n    this.subscriptions.push(\n      this.columnState.subscribe((state: ColumnState) => {\n        if (state.changes && state.changes.indexOf(DatagridColumnChanges.HIDDEN) > -1) {\n          this.hiddenChange.emit(state.hidden); // Can emit through @Output when desugared syntax is used\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, Optional, TrackByFunction } from '@angular/core';\n\nimport { Items } from './providers/items';\n\n@Directive({\n  selector: '[ngForTrackBy]',\n})\nexport class ClrDatagridItemsTrackBy<T = any> {\n  constructor(@Optional() private _items: Items<T>) {}\n\n  @Input('ngForTrackBy')\n  set trackBy(value: TrackByFunction<T>) {\n    if (this._items) {\n      this._items.trackBy = value;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input } from '@angular/core';\nimport { Page } from './providers/page';\n\n@Component({\n  selector: 'clr-dg-page-size',\n  template: `\n    <ng-content></ng-content>\n    <div class=\"clr-select-wrapper\">\n      <select [class.clr-page-size-select]=\"true\" [(ngModel)]=\"page.size\">\n        <option *ngFor=\"let option of pageSizeOptions\" [ngValue]=\"option\">{{option}}</option>\n      </select>\n    </div>\n  `,\n})\nexport class ClrDatagridPageSize {\n  @Input('clrPageSizeOptions') pageSizeOptions: number[];\n\n  constructor(public page: Page) {}\n\n  ngOnInit() {\n    if (!this.pageSizeOptions || this.pageSizeOptions.length === 0) {\n      this.pageSizeOptions = [this.page.size];\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Page } from './providers/page';\nimport { ClrDatagridPageSize } from './datagrid-page-size';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { DetailService } from './providers/detail.service';\n\n@Component({\n  selector: 'clr-dg-pagination',\n  template: `\n  <ng-container *ngIf=\"!detailService.isOpen\">\n    <div class=\"pagination-size\" *ngIf=\"_pageSizeComponent\">\n      <ng-content select=\"clr-dg-page-size\"></ng-content>\n    </div>\n    <div class=\"pagination-description\">\n      <ng-content></ng-content>\n    </div>\n    <div class=\"pagination-list\" *ngIf=\"page.last > 1\">\n      <button\n        type=\"button\" \n        class=\"pagination-first\" \n        [disabled]=\"page.current <= 1\" \n        (click)=\"page.current = 1\"\n        [attr.aria-label]=\"commonStrings.keys.firstPage\"\n        >\n        <clr-icon shape=\"step-forward-2 down\"></clr-icon>\n      </button>\n      <button \n        type=\"button\"\n        class=\"pagination-previous\" \n        [disabled]=\"page.current <= 1\" \n        (click)=\"page.current = page.current - 1\"\n        [attr.aria-label]=\"commonStrings.keys.previousPage\"\n        >\n        <clr-icon shape=\"angle left\"></clr-icon>\n      </button>\n        <input\n          *ngIf=\"!disableCurrentPageInput; else readOnly\"\n          #currentPageInput \n          type=\"text\" \n          class=\"pagination-current clr-input\" \n          [size]=\"page.last.toString().length\" \n          [value]=\"page.current\"\n          (keydown.enter)=\"updateCurrentPage($event)\" \n          (blur)=\"updateCurrentPage($event)\"\n          [attr.aria-label]=\"commonStrings.keys.currentPage\"\n          />\n          <ng-template #readOnly>\n            <span>{{ page.current }}</span>\n          </ng-template>\n\n          &nbsp;/&nbsp;<span [attr.aria-label]=\"commonStrings.keys.totalPages\">{{page.last}}</span>\n      <button \n        type=\"button\"\n        class=\"pagination-next\" \n        [disabled]=\"page.current >= page.last\" \n        (click)=\"page.current = page.current + 1\"\n        [attr.aria-label]=\"commonStrings.keys.nextPage\"\n        >\n        <clr-icon shape=\"angle right\"></clr-icon>\n      </button>\n      <button \n        type=\"button\" \n        class=\"pagination-last\" \n        [disabled]=\"page.current >= page.last\" \n        (click)=\"page.current = page.last\"\n        [attr.aria-label]=\"commonStrings.keys.lastPage\"\n        >\n        <clr-icon shape=\"step-forward-2 up\"></clr-icon>\n      </button>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"detailService.isOpen\">\n      <div class=\"pagination-description-compact\">\n          {{page.firstItem + 1}}-{{page.lastItem + 1}} / {{page.totalItems}}\n      </div>\n      <div class=\"pagination-list\">\n          <button\n                  type=\"button\"\n                  class=\"pagination-previous\"\n                  [disabled]=\"page.current <= 1\"\n                  (click)=\"page.current = page.current - 1\"\n                  [attr.aria-label]=\"commonStrings.keys.previousPage\"\n          >\n              <clr-icon shape=\"angle left\"></clr-icon>\n          </button>\n          <span>{{page.current}}</span>\n          <button\n                  type=\"button\"\n                  class=\"pagination-next\"\n                  [disabled]=\"page.current >= page.last\"\n                  (click)=\"page.current = page.current + 1\"\n                  [attr.aria-label]=\"commonStrings.keys.nextPage\"\n          >\n              <clr-icon shape=\"angle right\"></clr-icon>\n          </button>\n      </div>\n  </ng-container>\n\n  `,\n  host: { '[class.pagination]': 'true' },\n})\nexport class ClrDatagridPagination implements OnDestroy, OnInit {\n  @ContentChild(ClrDatagridPageSize) _pageSizeComponent: ClrDatagridPageSize;\n  @ViewChild('currentPageInput') currentPageInputRef: ElementRef;\n\n  constructor(public page: Page, public commonStrings: ClrCommonStringsService, public detailService: DetailService) {\n    this.page.activated = true;\n  }\n\n  /**********\n   * Subscription to the Page service for page changes.\n   * Note: this only emits after the datagrid is initialized/stabalized and the page changes.\n   */\n  ngOnInit() {\n    /*\n     * Default page size is 10.\n     * The reason we set it here and not in the provider itself is because\n     * we don't want pagination if this component isn't present in the datagrid.\n     */\n    if (!this.page.size) {\n      this.page.size = 10;\n    }\n    this._pageSubscription = this.page.change.subscribe(current => this.currentChanged.emit(current));\n  }\n\n  /**\n   * Subscription to the page service changes\n   */\n  private _pageSubscription: Subscription;\n\n  ngOnDestroy() {\n    this.page.resetPageSize(true);\n    if (this._pageSubscription) {\n      this._pageSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Page size\n   */\n  public get pageSize(): number {\n    return this.page.size;\n  }\n\n  @Input('clrDgPageInputDisabled') public disableCurrentPageInput: boolean;\n\n  @Input('clrDgPageSize')\n  public set pageSize(size: number) {\n    if (typeof size === 'number') {\n      this.page.size = size;\n    }\n  }\n\n  /**\n   * Total items (needed to guess the last page)\n   */\n  public get totalItems(): number {\n    return this.page.totalItems;\n  }\n\n  @Input('clrDgTotalItems')\n  public set totalItems(total: number) {\n    if (typeof total === 'number') {\n      this.page.totalItems = total;\n    }\n  }\n\n  /**\n   * Last page\n   */\n  public get lastPage(): number {\n    return this.page.last;\n  }\n\n  @Input('clrDgLastPage')\n  public set lastPage(last: number) {\n    if (typeof last === 'number') {\n      this.page.last = last;\n    }\n  }\n\n  /**\n   * Current page\n   */\n  public get currentPage(): number {\n    return this.page.current;\n  }\n\n  @Input('clrDgPage')\n  public set currentPage(page: number) {\n    if (typeof page === 'number') {\n      this.page.current = page;\n    }\n  }\n\n  @Output('clrDgPageChange') currentChanged = new EventEmitter<number>(false);\n\n  /**\n   * Moves to the previous page if it exists\n   */\n  public previous() {\n    this.page.previous();\n  }\n\n  /**\n   * Moves to the next page if it exists\n   */\n  public next() {\n    this.page.next();\n  }\n\n  /**\n   * Index of the first item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get firstItem(): number {\n    return this.page.firstItem;\n  }\n\n  /**\n   * Index of the last item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get lastItem(): number {\n    return this.page.lastItem;\n  }\n\n  /**\n   * Conditionally adds page numbers before and after the current page\n   */\n  public get middlePages(): number[] {\n    const middlePages: number[] = [];\n    if (this.page.current > 1) {\n      middlePages.push(this.page.current - 1);\n    }\n    middlePages.push(this.page.current);\n    if (this.page.current < this.page.last) {\n      middlePages.push(this.page.current + 1);\n    }\n    return middlePages;\n  }\n\n  /**\n   * We only update the pagination's current page on blur of the input field, or\n   * when they press enter.\n   */\n  public updateCurrentPage(event: any): void {\n    const parsed = parseInt(event.target.value, 10);\n\n    // if the input value, is not a number, we don't update the page\n    if (!isNaN(parsed)) {\n      if (parsed < 1) {\n        this.page.current = 1;\n      } else if (parsed > this.page.last) {\n        this.page.current = this.page.last;\n      } else {\n        this.page.current = parsed;\n      }\n    }\n\n    /**\n     * Set the input's value to the new current page. This is needed because the code\n     * above may have changed the value from what the user entered in.\n     */\n    this.currentPageInputRef.nativeElement.value = this.page.current;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentInit, Component, ContentChildren, Input, OnDestroy, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { SelectionType } from './enums/selection-type';\nimport { DatagridIfExpandService } from './datagrid-if-expanded.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n/**\n * Generic bland container serving various purposes for Datagrid.\n * For instance, it can help span a text over multiple rows in detail view.\n */\n@Component({\n  selector: 'clr-dg-row-detail',\n  template: `\n    <div class=\"clr-sr-only\">\n      {{ beginningOfExpandableContentAriaText }} {{ commonStrings.keys.dategridExpandableRowsHelperText }}\n    </div>\n    <ng-content></ng-content>\n    <div class=\"clr-sr-only\">{{ endOfExpandableContentAriaText }}</div>\n  `,\n  host: {\n    '[class.datagrid-row-flex]': 'true',\n    '[class.datagrid-row-detail]': 'true',\n    '[class.datagrid-container]': 'cells.length === 0',\n    '[attr.id]': 'expand.expandableId',\n  },\n})\nexport class ClrDatagridRowDetail<T = any> implements AfterContentInit, OnDestroy {\n  /* reference to the enum so that template can access it */\n  public SELECTION_TYPE = SelectionType;\n\n  constructor(\n    public selection: Selection,\n    public rowActionService: RowActionService,\n    public expand: DatagridIfExpandService,\n    public expandableRows: ExpandableRowsCount,\n    public commonStrings: ClrCommonStringsService\n  ) {}\n\n  @ContentChildren(ClrDatagridCell) cells: QueryList<ClrDatagridCell>;\n\n  @Input('clrDgReplace')\n  set replace(value: boolean) {\n    this.expand.setReplace(!!value);\n  }\n  private subscriptions: Subscription[] = [];\n  public replacedRow = false;\n\n  ngAfterContentInit() {\n    this.subscriptions.push(\n      this.expand.replace.subscribe(replaceChange => {\n        this.replacedRow = replaceChange;\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  @Input('clrRowDetailBeginningAriaText') private _beginningOfExpandableContentAriaText: string;\n  public get beginningOfExpandableContentAriaText() {\n    return (\n      this._beginningOfExpandableContentAriaText ||\n      `${this.commonStrings.keys.dategridExpandableBeginningOf} ${this.commonStrings.keys.dategridExpandableRowContent}`\n    );\n  }\n\n  @Input('clrRowDetailEndAriaText') private _endOfExpandableContentAriaText: string;\n  public get endOfExpandableContentAriaText() {\n    return (\n      this._endOfExpandableContentAriaText ||\n      `${this.commonStrings.keys.dategridExpandableEndOf} ${this.commonStrings.keys.dategridExpandableRowContent}`\n    );\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// @TODO The top two are not used now, which is probably a performance drag that was broken along the way.\n// There was a previous pattern to hide everything to do computation then display, for Firefox, needs revisiting.\nexport const NO_LAYOUT_CLASS = 'datagrid-no-layout';\nexport const COMPUTE_WIDTH_CLASS = 'datagrid-computing-columns-width';\nexport const STRICT_WIDTH_CLASS = 'datagrid-fixed-width';\nexport const HIDDEN_COLUMN_CLASS = 'datagrid-hidden-column';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, OnDestroy, Renderer2 } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\n\nimport { HIDDEN_COLUMN_CLASS, STRICT_WIDTH_CLASS } from './constants';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnState } from '../interfaces/column-state.interface';\nimport { ALL_COLUMN_CHANGES, DatagridColumnChanges } from '../enums/column-changes.enum';\n\n@Directive({ selector: 'clr-dg-cell' })\nexport class DatagridCellRenderer implements OnDestroy {\n  private stateSubscription: Subscription;\n\n  private runAllChanges: DatagridColumnChanges[];\n\n  // @TODO(JEREMY) Work out how to dedupe some of this code between header and cell renderers\n  set columnState(columnState: BehaviorSubject<ColumnState>) {\n    if (this.stateSubscription) {\n      this.stateSubscription.unsubscribe();\n    }\n\n    this.runAllChanges = ALL_COLUMN_CHANGES;\n    this.stateSubscription = columnState.subscribe(state => this.stateChanges(state));\n  }\n\n  constructor(private el: ElementRef, private renderer: Renderer2, organizer: DatagridRenderOrganizer) {\n    this.subscriptions.push(\n      organizer.filterRenderSteps(DatagridRenderStep.CLEAR_WIDTHS).subscribe(() => this.clearWidth())\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    if (this.stateSubscription) {\n      this.stateSubscription.unsubscribe();\n    }\n  }\n\n  private stateChanges(state: ColumnState) {\n    if (this.runAllChanges) {\n      state.changes = this.runAllChanges;\n      delete this.runAllChanges;\n    }\n    if (state.changes && state.changes.length) {\n      state.changes.forEach(change => {\n        switch (change) {\n          case DatagridColumnChanges.WIDTH:\n            this.setWidth(state);\n            break;\n          case DatagridColumnChanges.HIDDEN:\n            this.setHidden(state);\n            break;\n          default:\n            break;\n        }\n      });\n    }\n  }\n\n  private clearWidth() {\n    this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    this.renderer.setStyle(this.el.nativeElement, 'width', null);\n  }\n\n  private setWidth(state: ColumnState) {\n    if (state.strictWidth) {\n      this.renderer.addClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    }\n    this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n  }\n\n  private setHidden(state: ColumnState) {\n    if (state.hidden) {\n      this.renderer.addClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, Inject, OnDestroy, Output, Renderer2 } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { ColumnResizerService } from '../providers/column-resizer.service';\nimport { HIDDEN_COLUMN_CLASS, STRICT_WIDTH_CLASS } from './constants';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnState } from '../interfaces/column-state.interface';\nimport { DatagridColumnChanges } from '../enums/column-changes.enum';\nimport { COLUMN_STATE, COLUMN_STATE_PROVIDER } from '../providers/column-state.provider';\nimport { ColumnsService } from '../providers/columns.service';\n\n@Directive({ selector: 'clr-dg-column', providers: [ColumnResizerService, COLUMN_STATE_PROVIDER] })\nexport class DatagridHeaderRenderer implements OnDestroy {\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private organizer: DatagridRenderOrganizer,\n    private domAdapter: DomAdapter,\n    private columnResizerService: ColumnResizerService,\n    private columnsService: ColumnsService,\n    @Inject(COLUMN_STATE) private columnState: BehaviorSubject<ColumnState>\n  ) {\n    this.subscriptions.push(\n      this.organizer.filterRenderSteps(DatagridRenderStep.CLEAR_WIDTHS).subscribe(() => this.clearWidth())\n    );\n\n    this.subscriptions.push(columnState.subscribe(state => this.stateChanges(state)));\n  }\n\n  @Output('clrDgColumnResize') resizeEmitter: EventEmitter<number> = new EventEmitter();\n\n  /**\n   * Indicates if the column has a strict width, so it doesn't shrink or expand based on the content.\n   */\n  private widthSet: boolean = false;\n  private autoSet: boolean = false;\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private stateChanges(state: ColumnState) {\n    if (state.changes && state.changes.length) {\n      state.changes.forEach(change => {\n        switch (change) {\n          case DatagridColumnChanges.WIDTH:\n            this.setWidth(state);\n            break;\n          case DatagridColumnChanges.HIDDEN:\n            this.setHidden(state);\n            break;\n          default:\n            break;\n        }\n      });\n    }\n  }\n\n  private clearWidth() {\n    // remove the width only if we set it, and it is not changed by dragging.\n    if (this.widthSet && !this.columnResizerService.resizedBy) {\n      this.renderer.setStyle(this.el.nativeElement, 'width', null);\n    }\n    if (this.autoSet) {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    }\n  }\n\n  private detectStrictWidth(): number {\n    if (this.columnResizerService.resizedBy) {\n      return this.columnResizerService.widthAfterResize;\n    } else if (this.autoSet) {\n      return 0;\n    } else {\n      return this.domAdapter.userDefinedWidth(this.el.nativeElement);\n    }\n  }\n\n  private computeWidth(strictWidth: number): number {\n    let width: number = strictWidth;\n    if (!width) {\n      width = this.domAdapter.scrollWidth(this.el.nativeElement);\n    }\n    return width;\n  }\n\n  public getColumnWidthState(): Partial<ColumnState> {\n    const strictWidth = this.detectStrictWidth();\n    return {\n      width: this.computeWidth(strictWidth),\n      strictWidth: strictWidth,\n    };\n  }\n\n  public setColumnState(index: number) {\n    this.columnsService.columns[index] = this.columnState;\n  }\n\n  private setWidth(state: ColumnState) {\n    if (state.strictWidth) {\n      if (this.columnResizerService.resizedBy) {\n        this.resizeEmitter.emit(state.width);\n        this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n        this.widthSet = false;\n      }\n      // Don't set width if there is a user-defined one. Just add the strict width class.\n      this.renderer.addClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n      this.autoSet = false;\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n      this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n      this.widthSet = true;\n      this.autoSet = true;\n    }\n  }\n\n  private setHidden(state: ColumnState) {\n    if (state.hidden) {\n      this.renderer.addClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * This version of the DomAdapter is for use on non-browser platforms, where there are no\n * nativeElements to use for calculations.\n */\n\nimport { Injectable } from '@angular/core';\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\n\n@Injectable()\nexport class NoopDomAdapter implements DomAdapter {\n  userDefinedWidth(element: any): number {\n    return 0;\n  }\n\n  scrollBarWidth(element: any) {\n    return 0;\n  }\n\n  scrollWidth(element: any) {\n    return 0;\n  }\n\n  computedHeight(element: any): number {\n    return 0;\n  }\n\n  clientRect(element: any): ClientRect {\n    return {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: 0,\n      height: 0,\n    };\n  }\n\n  minWidth(element: any): number {\n    return 0;\n  }\n\n  focus(element: any): void {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentInit, ContentChildren, Directive, OnDestroy, QueryList } from '@angular/core';\n\nimport { DatagridCellRenderer } from './cell-renderer';\nimport { ColumnsService } from '../providers/columns.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({ selector: 'clr-dg-row, clr-dg-row-detail' })\nexport class DatagridRowRenderer implements AfterContentInit, OnDestroy {\n  @ContentChildren(DatagridCellRenderer) private cells: QueryList<DatagridCellRenderer>;\n\n  constructor(private columnsService: ColumnsService) {}\n\n  ngAfterContentInit() {\n    this.setColumnState(); // case #3 and #4\n    this.subscriptions.push(\n      this.cells.changes.subscribe(() => {\n        this.setColumnState(); // case #2\n        // Note on case #2: In the case of dynamic columns, when one column (header/cell together) gets deleted,\n        // this.cells.changes emits before this.columnsService.columns gets updated in MainRenderer\n        // when this.headers.changes emits as well. So that means there will be n+1 column state providers\n        // when this.cells.changes emits. Hence, we should quit earlier there. But this method will be called\n        // right after again when this.headers.changes emits. By then, there will be the same number of column state\n        // providers as column headers.\n      })\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  public setColumnState() {\n    // This method runs in four cases:\n    // 1. When the initial rows appear on the first page.\n    //    In this case, the method will be called in DatagridMainRenderer.\n    // 2. When columns (corresponding header/cells) get added and deleted.\n    //    In this case, the method will be called in DatagridMainRenderer. (Read the note on this case above).\n    // 3. When rows load asynchronously.\n    //    In this case, the method will be called in this class.\n    // 4. When rows load after switching pages.\n    //    In this case, the method will be called in this class (Basically, same as the case 3).\n    if (this.cells.length === this.columnsService.columns.length) {\n      this.cells.forEach((cell, index) => {\n        if (this.columnsService.columns[index]) {\n          cell.columnState = this.columnsService.columns[index];\n        }\n      });\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  AfterContentInit,\n  AfterViewChecked,\n  AfterViewInit,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  OnDestroy,\n  PLATFORM_ID,\n  QueryList,\n  Renderer2,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { Items } from '../providers/items';\nimport { Page } from '../providers/page';\nimport { TableSizeService } from '../providers/table-size.service';\n\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { DatagridHeaderRenderer } from './header-renderer';\nimport { NoopDomAdapter } from './noop-dom-adapter';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnsService } from '../providers/columns.service';\nimport { DatagridColumnChanges } from '../enums/column-changes.enum';\nimport { DatagridRowRenderer } from './row-renderer';\nimport { ColumnStateDiff } from '../interfaces/column-state.interface';\nimport { DetailService } from '../providers/detail.service';\n\n// Fixes build error\n// @dynamic (https://github.com/angular/angular/issues/19698#issuecomment-338340211)\nexport const domAdapterFactory = (platformId: Object) => {\n  if (isPlatformBrowser(platformId)) {\n    return new DomAdapter();\n  } else {\n    return new NoopDomAdapter();\n  }\n};\n\n// Fixes build error\n// @dynamic (https://github.com/angular/angular/issues/19698#issuecomment-338340211)\n@Directive({\n  selector: 'clr-datagrid',\n  providers: [{ provide: DomAdapter, useFactory: domAdapterFactory, deps: [PLATFORM_ID] }],\n})\nexport class DatagridMainRenderer<T = any> implements AfterContentInit, AfterViewInit, AfterViewChecked, OnDestroy {\n  constructor(\n    private organizer: DatagridRenderOrganizer,\n    private items: Items,\n    private page: Page,\n    private domAdapter: DomAdapter,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private detailService: DetailService,\n    private tableSizeService: TableSizeService,\n    private columnsService: ColumnsService\n  ) {\n    this.subscriptions.push(\n      this.organizer\n        .filterRenderSteps(DatagridRenderStep.COMPUTE_COLUMN_WIDTHS)\n        .subscribe(() => this.computeHeadersWidth())\n    );\n\n    this.subscriptions.push(\n      this.page.sizeChange.subscribe(() => {\n        if (this._heightSet) {\n          this.resetDatagridHeight();\n        }\n      })\n    );\n    this.subscriptions.push(this.detailService.stateChange.subscribe(state => this.toggleDetailPane(state)));\n    this.subscriptions.push(this.items.change.subscribe(() => (this.shouldStabilizeColumns = true)));\n  }\n\n  @ContentChildren(DatagridHeaderRenderer) private headers: QueryList<DatagridHeaderRenderer>;\n  @ContentChildren(DatagridRowRenderer, { descendants: true })\n  private rows: QueryList<DatagridRowRenderer>; // if expandable row is expanded initially, query its cells too.\n\n  ngAfterContentInit() {\n    this.setupColumns();\n\n    this.subscriptions.push(\n      this.headers.changes.subscribe(() => {\n        // TODO: only re-stabilize if a column was added or removed. Reordering is fine.\n        // Need to setup columns before stabalizing them\n        this.setupColumns();\n        this.columnsSizesStable = false;\n        this.stabilizeColumns();\n      })\n    );\n  }\n\n  // Initialize and set Table width for horizontal scrolling here.\n  ngAfterViewInit() {\n    this.tableSizeService.table = this.el;\n  }\n\n  ngAfterViewChecked() {\n    if (this.shouldStabilizeColumns) {\n      this.stabilizeColumns();\n    }\n    if (this.shouldComputeHeight()) {\n      setTimeout(() => {\n        this.computeDatagridHeight();\n      });\n    }\n  }\n\n  private setupColumns() {\n    this.headers.forEach((header, index) => header.setColumnState(index));\n    this.columnsService.columns.splice(this.headers.length); // Trim any old columns\n    this.rows.forEach(row => row.setColumnState());\n  }\n\n  private _heightSet: boolean = false;\n\n  private shouldComputeHeight(): boolean {\n    if (!this._heightSet && this.page.size > 0) {\n      if (this.items.displayed.length === this.page.size) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public toggleDetailPane(state: boolean) {\n    if (this.headers) {\n      if (state && !this.columnsService.hasCache()) {\n        this.columnsService.cache();\n        this.headers.forEach((header, index) => {\n          if (index > 0) {\n            this.columnsService.emitStateChangeAt(index, {\n              changes: [DatagridColumnChanges.HIDDEN],\n              hidden: state,\n            });\n          }\n        });\n      } else if (!state) {\n        this.columnsService.resetToLastCache();\n      }\n    }\n  }\n\n  /**\n   * Computes the height of the datagrid.\n   *\n   * NOTE: We had to choose to set the height instead of the min-height because\n   * IE 11 requires the height on the parent for the children flex grow/shrink properties to work.\n   * When we used min-height, 1 1 auto doesn't used to work in IE11 :-(\n   * But this doesn't affect the fix. It works in both fixed & variable height datagrids.\n   *\n   * Refer: http://stackoverflow.com/questions/24396205/flex-grow-not-working-in-internet-explorer-11-0\n   */\n  private computeDatagridHeight() {\n    // IE doesn't return correct value for getComputedStyle(element).getPropertyValue(\"height\")\n    const value: number = this.domAdapter.clientRect(this.el.nativeElement).height;\n    this.renderer.setStyle(this.el.nativeElement, 'height', value + 'px');\n    this._heightSet = true;\n  }\n\n  private resetDatagridHeight() {\n    this.renderer.setStyle(this.el.nativeElement, 'height', '');\n    this._heightSet = false;\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Makes each header compute its width.\n   */\n  private computeHeadersWidth() {\n    const nbColumns: number = this.headers.length;\n    let allStrict = true;\n    this.headers.forEach((header, index) => {\n      // On the last header column check whether all columns have strict widths.\n      // If all columns have strict widths, remove the strict width from the last column and make it the column's\n      // minimum width so that when all previous columns shrink, it will get a flexible width and cover the empty\n      // gap in the Datagrid.\n      const state: ColumnStateDiff = {\n        changes: [DatagridColumnChanges.WIDTH],\n        ...header.getColumnWidthState(),\n      };\n\n      if (!state.strictWidth) {\n        allStrict = false;\n      }\n\n      if (nbColumns === index + 1 && allStrict) {\n        state.strictWidth = 0;\n      }\n\n      this.columnsService.emitStateChangeAt(index, state);\n    });\n  }\n\n  /**\n   * Indicates if we want to re-compute columns width. This should only happen:\n   * 1) When headers change, with columns being added or removed\n   * 2) When rows are lazily loaded for the first time\n   */\n  private columnsSizesStable = false;\n\n  private shouldStabilizeColumns = true;\n\n  /**\n   * Triggers a whole re-rendring cycle to set column sizes, if needed.\n   */\n  private stabilizeColumns() {\n    this.shouldStabilizeColumns = false;\n    if (this.columnsSizesStable) {\n      // Nothing to do.\n      return;\n    }\n    // Resize when the rows are loaded.\n    if (this.items.displayed.length > 0) {\n      this.organizer.resize();\n      this.columnsSizesStable = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrFormsModule } from '../../forms/forms.module';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrLoadingModule } from '../../utils/loading/loading.module';\nimport { ClrOutsideClickModule } from '../../utils/outside-click/outside-click.module';\nimport { ClrDragAndDropModule } from '../../utils/drag-and-drop/drag-and-drop.module';\nimport { ClrExpandableAnimationModule } from '../../utils/animations/expandable-animation/expandable-animation.module';\nimport { ClrSpinnerModule } from '../../progress/spinner/spinner.module';\nimport { ClrPopoverModuleNext } from '../../utils/popover/popover.module';\nimport { ClrFocusTrapModule } from '../../utils/focus-trap/focus-trap.module';\nimport { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\n\nimport { DatagridStringFilter } from './built-in/filters/datagrid-string-filter';\nimport { DatagridNumericFilter } from './built-in/filters/datagrid-numeric-filter';\nimport { ActionableOompaLoompa } from './chocolate/actionable-oompa-loompa';\nimport { DatagridWillyWonka } from './chocolate/datagrid-willy-wonka';\nimport { ExpandableOompaLoompa } from './chocolate/expandable-oompa-loompa';\nimport { ClrDatagrid } from './datagrid';\nimport { ClrDatagridActionBar } from './datagrid-action-bar';\nimport { ClrDatagridActionOverflow } from './datagrid-action-overflow';\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { ClrDatagridColumn } from './datagrid-column';\nimport { ClrDatagridColumnSeparator } from './datagrid-column-separator';\nimport { ClrDatagridColumnToggle } from './datagrid-column-toggle';\nimport { ClrDatagridColumnToggleButton } from './datagrid-column-toggle-button';\nimport { ClrDatagridColumnToggleTitle } from './datagrid-column-toggle-title';\nimport { DatagridDetailRegisterer } from './datagrid-detail-registerer';\nimport { ClrDatagridDetail } from './datagrid-detail';\nimport { ClrIfDetail } from './datagrid-if-detail';\nimport { ClrDatagridDetailHeader } from './datagrid-detail-header';\nimport { ClrDatagridDetailBody } from './datagrid-detail-body';\nimport { ClrDatagridFilter } from './datagrid-filter';\nimport { ClrDatagridFooter } from './datagrid-footer';\nimport { ClrDatagridHideableColumn } from './datagrid-hideable-column';\nimport { ClrDatagridItems } from './datagrid-items';\nimport { ClrDatagridItemsTrackBy } from './datagrid-items-trackby';\nimport { ClrDatagridPagination } from './datagrid-pagination';\nimport { ClrDatagridPageSize } from './datagrid-page-size';\nimport { ClrDatagridPlaceholder } from './datagrid-placeholder';\nimport { ClrDatagridRow } from './datagrid-row';\nimport { ClrDatagridRowDetail } from './datagrid-row-detail';\nimport { DatagridCellRenderer } from './render/cell-renderer';\nimport { DatagridHeaderRenderer } from './render/header-renderer';\nimport { DatagridMainRenderer } from './render/main-renderer';\nimport { DatagridRowRenderer } from './render/row-renderer';\nimport { WrappedCell } from './wrapped-cell';\nimport { WrappedColumn } from './wrapped-column';\nimport { WrappedRow } from './wrapped-row';\n\nexport const CLR_DATAGRID_DIRECTIVES: Type<any>[] = [\n  // Core\n  ClrDatagrid,\n  ClrDatagridActionBar,\n  ClrDatagridActionOverflow,\n  ClrDatagridColumn,\n  ClrDatagridColumnSeparator,\n  ClrDatagridColumnToggle,\n  ClrDatagridHideableColumn,\n  ClrDatagridFilter,\n  ClrDatagridItems,\n  ClrDatagridItemsTrackBy,\n  ClrDatagridRow,\n  ClrDatagridRowDetail,\n  DatagridDetailRegisterer,\n  ClrDatagridCell,\n  ClrDatagridFooter,\n  ClrDatagridPagination,\n  ClrDatagridPageSize,\n  ClrDatagridPlaceholder,\n  ClrDatagridColumnToggleButton,\n  ClrDatagridColumnToggleTitle,\n  ClrDatagridDetail,\n  ClrIfDetail,\n  ClrDatagridDetailHeader,\n  ClrDatagridDetailBody,\n  WrappedCell,\n  WrappedColumn,\n  WrappedRow,\n\n  // Renderers\n  DatagridMainRenderer,\n  DatagridHeaderRenderer,\n  DatagridRowRenderer,\n  DatagridCellRenderer,\n\n  // Chocolate\n  DatagridWillyWonka,\n  ActionableOompaLoompa,\n  ExpandableOompaLoompa,\n\n  // Built-in shortcuts\n  DatagridStringFilter,\n  DatagridNumericFilter,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClrIconModule,\n    ClrFormsModule,\n    FormsModule,\n    ClrLoadingModule,\n    ClrConditionalModule,\n    ClrOutsideClickModule,\n    ClrExpandableAnimationModule,\n    ClrDragAndDropModule,\n    ClrSpinnerModule,\n    ClrPopoverModuleNext,\n    ClrFocusTrapModule,\n    ClrFocusOnViewInitModule,\n  ],\n  declarations: [CLR_DATAGRID_DIRECTIVES],\n  exports: [CLR_DATAGRID_DIRECTIVES],\n  entryComponents: [WrappedCell, WrappedColumn, WrappedRow],\n})\nexport class ClrDatagridModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, HostBinding, Inject, Input, OnInit, Optional, Output, SkipSelf } from '@angular/core';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\n\n@Component({\n  selector: 'clr-stack-block',\n  template: `\n    <div class=\"stack-block-label\"\n        (click)=\"toggleExpand()\"\n        (keyup.enter)=\"toggleExpand()\"\n        (keyup.space)=\"toggleExpand()\"\n        (focus)=\"focused = true\"\n        (blur)=\"focused = false\"\n        [id]=\"uniqueId\"\n        [attr.role]=\"role\"\n        [attr.tabindex]=\"tabIndex\"\n        [attr.aria-expanded]=\"ariaExpanded\"\n        [attr.aria-controls]=\"getStackChildrenId()\"\n        [attr.aria-posinset]=\"ariaPosinset\"\n        [attr.aria-level]=\"ariaLevel\"\n        [attr.aria-setsize]=\"ariaSetsize\"\n        >\n      <clr-icon shape=\"caret\"\n                class=\"stack-block-caret\"\n                *ngIf=\"expandable\"\n                [attr.dir]=\"caretDirection\"></clr-icon>\n      <span class=\"clr-sr-only\" *ngIf=\"getChangedValue\">{{commonStrings.keys.stackViewChanged}}</span>\n      <div class=\"stack-view-key\">\n        <!-- This structure changed to fix #3567 and the a11y request was to move away from dl's -->\n        <!-- I added the key class to update css targets for the original component style -->\n        <ng-content select=\"clr-stack-label\"></ng-content>\n      </div>\n      <div class=\"stack-block-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n\n    <clr-expandable-animation [clrExpandTrigger]=\"expanded\" class=\"stack-children\" [attr.id]=\"getStackChildrenId()\">\n      <div [style.height]=\"expanded ? 'auto' : 0\" role=\"region\">\n        <ng-content select=\"clr-stack-block\"></ng-content>\n      </div>\n    </clr-expandable-animation>\n  `,\n  // Custom elements are inline by default\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `,\n  ],\n  // Make sure the host has the proper class for styling purposes\n  host: { '[class.stack-block]': 'true' },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrStackBlock implements OnInit {\n  @HostBinding('class.stack-block-expanded')\n  @Input('clrSbExpanded')\n  expanded: boolean = false;\n  @Output('clrSbExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n  @HostBinding('class.stack-block-expandable')\n  @Input('clrSbExpandable')\n  expandable: boolean = false;\n\n  focused: boolean = false;\n  private _changedChildren: number = 0;\n  private _fullyInitialized: boolean = false;\n  private _changed: boolean = false;\n\n  @HostBinding('class.stack-block-changed')\n  get getChangedValue(): boolean {\n    return this._changed || (this._changedChildren > 0 && !this.expanded);\n  }\n\n  @Input('clrSbNotifyChange')\n  set setChangedValue(value: boolean) {\n    this._changed = value;\n\n    if (this.parent && this._fullyInitialized) {\n      if (value) {\n        this.parent._changedChildren++;\n      } else {\n        this.parent._changedChildren--;\n      }\n    }\n  }\n\n  /**\n   * Depth of the stack view starting from 1 for first level\n   */\n  @Input('clrStackViewLevel') ariaLevel: number;\n\n  /**\n   * Total number of rows in a given group\n   */\n  @Input('clrStackViewSetsize') ariaSetsize: number;\n\n  /**\n   * The position of the row inside the grouped by level rows\n   */\n  @Input('clrStackViewPosinset') ariaPosinset: number;\n\n  /*\n   * This would be more efficient with @ContentChildren, with the parent ClrStackBlock\n   * querying for children StackBlocks, but this feature is not available when downgrading\n   * the component for Angular 1.\n   */\n  constructor(\n    @SkipSelf()\n    @Optional()\n    private parent: ClrStackBlock,\n    @Inject(UNIQUE_ID) public uniqueId: string,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    if (parent) {\n      parent.addChild();\n    }\n  }\n\n  ngOnInit(): void {\n    // in order to access the parent ClrStackBlock's properties,\n    // the child ClrStackBlock has to be fully initialized at first.\n    this._fullyInitialized = true;\n  }\n\n  addChild(): void {\n    this.expandable = true;\n  }\n\n  toggleExpand(): void {\n    if (this.expandable) {\n      this.expanded = !this.expanded;\n      this.expandedChange.emit(this.expanded);\n    }\n  }\n\n  get caretDirection(): string {\n    return this.expanded ? 'down' : 'right';\n  }\n\n  get role(): string {\n    return this.expandable ? 'button' : null;\n  }\n\n  get tabIndex(): string {\n    return this.expandable ? '0' : null;\n  }\n\n  @HostBinding('class.on-focus')\n  get onStackLabelFocus(): boolean {\n    return this.expandable && !this.expanded && this.focused;\n  }\n\n  get ariaExpanded(): string {\n    if (!this.expandable) {\n      return null;\n    } else {\n      return this.expanded ? 'true' : 'false';\n    }\n  }\n\n  getStackChildrenId() {\n    return this.expanded ? `clr-stack-children-${this.uniqueId}` : null;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'clr-stack-view',\n  template: `\n        <ng-content select=\"clr-stack-header\"></ng-content>\n        <div class=\"stack-view\"><ng-content></ng-content></div>\n    `,\n  // Custom elements are inline by default.\n  styles: [\n    `\n        :host { display: block; }\n    `,\n  ],\n})\nexport class ClrStackView {\n  /**\n   * Undocumented experimental feature: inline editing.\n   */\n  editable: boolean = false;\n\n  @Output('clrStackSave') save: EventEmitter<void> = new EventEmitter<void>(false);\n\n  private _editMode: boolean = false;\n\n  editingChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  get editing(): boolean {\n    return this.editable && this._editMode;\n  }\n\n  set editing(value: boolean) {\n    if (this.editable) {\n      this._editMode = value;\n      this.editingChange.emit(value);\n      if (!value) {\n        this.save.emit(null);\n      }\n    }\n  }\n  /**\n   * End of undocumented experimental feature.\n   */\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-header',\n  template: `\n        <h4 class=\"stack-header\">\n            <span class=\"stack-title\"><ng-content></ng-content></span>\n            \n            <span class=\"stack-actions\">\n                <ng-content select=\".stack-action\"></ng-content>\n                <!-- Undocumented experimental feature: inline editing. -->\n                <button *ngIf=\"stackView.editable\" class=\"stack-action btn btn-sm btn-link\" \n                        (click)=\"stackView.editing = !stackView.editing\" type=\"button\">\n                        Edit\n                </button>\n                <!-- End of undocumented experimental feature. -->\n            </span>\n        </h4>\n    `,\n  // Custom elements are inline by default\n  styles: [\n    `\n        :host { display: block; }\n    `,\n  ],\n})\nexport class ClrStackHeader {\n  constructor(public stackView: ClrStackView) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n */\n\nimport { EventEmitter } from '@angular/core';\nimport { ClrStackView } from './stack-view';\n\nexport class StackControl {\n  model: any;\n  modelChange: EventEmitter<any> = new EventEmitter<any>(false);\n\n  constructor(protected stackView: ClrStackView) {\n    // Make the ClrStackView editable, since it contains a StackControl\n    this.stackView.editable = true;\n    this.stackView.editingChange.subscribe((editing: boolean) => {\n      // Edit mode was closed\n      if (!editing) {\n        this.modelChange.emit(this.model);\n      }\n    });\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n *\n * TODO: support more types of inputs: checkbox, radio, ...\n * TODO: Mirror input attributes from the host to the actual input: size, min, max, placeholder, ...\n */\n\nimport { Component } from '@angular/core';\nimport { StackControl } from './stack-control';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-input',\n  inputs: ['model: clrModel', 'type'],\n  outputs: ['modelChange: clrModelChange'],\n  template: `\n        <span *ngIf=\"!stackView.editing\">{{model}}</span>\n        <input [type]=\"type\" *ngIf=\"stackView.editing\" [(ngModel)]=\"model\"/>\n    `,\n})\nexport class ClrStackInput extends StackControl {\n  type: string = 'text';\n\n  constructor(public stackView: ClrStackView) {\n    super(stackView);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n *\n * TODO: Offer a a way to customize the value displayed, plain value may be unreadable.\n */\n\nimport { Component } from '@angular/core';\nimport { StackControl } from './stack-control';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-select',\n  inputs: ['model: clrModel'],\n  outputs: ['modelChange: clrModelChange'],\n  template: `\n        <span *ngIf=\"!stackView.editing\">{{model}}</span>\n        <div class=\"select\" *ngIf=\"stackView.editing\" >\n            <select [(ngModel)]=\"model\">\n                <ng-content></ng-content>\n            </select>\n        </div>\n    `,\n})\nexport class ClrStackSelect extends StackControl {\n  constructor(public stackView: ClrStackView) {\n    super(stackView);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-stack-label, clr-stack-content' })\nexport class ClrStackViewCustomTags {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Inject } from '@angular/core';\nimport { UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\n\n@Directive({\n  selector: '[clrStackInput]',\n  host: {\n    '[class.clr-input]': 'true',\n    '[attr.aria-labelledby]': 'uniqueId',\n  },\n})\nexport class ClrStackContentInput {\n  constructor(@Inject(UNIQUE_ID) public uniqueId: string) {}\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrStackBlock } from './stack-block';\nimport { ClrStackHeader } from './stack-header';\nimport { ClrStackInput } from './stack-input';\nimport { ClrStackSelect } from './stack-select';\nimport { ClrStackView } from './stack-view';\nimport { ClrStackViewCustomTags } from './stack-view-custom-tags';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrExpandableAnimationModule } from '../../utils/animations/expandable-animation/expandable-animation.module';\nimport { ClrStackContentInput } from './stack-content-input';\n\nexport const CLR_STACK_VIEW_DIRECTIVES: Type<any>[] = [\n  ClrStackView,\n  ClrStackHeader,\n  ClrStackBlock,\n  ClrStackContentInput,\n  ClrStackViewCustomTags,\n  /**\n   * Undocumented experimental feature: inline editing.\n   */\n  ClrStackInput,\n  ClrStackSelect,\n  /**\n   * End of undocumented experimental feature.\n   */\n];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrExpandableAnimationModule],\n  declarations: [CLR_STACK_VIEW_DIRECTIVES],\n  exports: [CLR_STACK_VIEW_DIRECTIVES],\n})\nexport class ClrStackViewModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum KeyCodes {\n  ArrowLeft = 'ArrowLeft',\n  ArrowUp = 'ArrowUp',\n  ArrowRight = 'ArrowRight',\n  ArrowDown = 'ArrowDown',\n  Backspace = 'Backspace',\n  Tab = 'TAB',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  Space = 'Space',\n  Home = 'Home',\n  End = 'End',\n}\n\nexport enum IEKeyCodes {\n  ArrowUp = 'Up',\n  ArrowDown = 'Down',\n  ArrowRight = 'Right',\n  ArrowLeft = 'Left',\n  Space = 'Spacebar',\n  Escape = 'Esc',\n  Home = 'Home',\n  End = 'End',\n  Enter = 'Enter',\n  Tab = 'Tab',\n}\n","/*\n* Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n* This software is released under MIT license.\n* The full license information can be found in LICENSE in the root directory of this project.\n*/\n\nimport { KeyCodes, IEKeyCodes } from './../../enums/key-codes.enum';\n\nexport function keyValidator(key: string) {\n  if (key === KeyCodes.ArrowUp || key === IEKeyCodes.ArrowUp) {\n    return KeyCodes.ArrowUp;\n  } else if (key === KeyCodes.ArrowDown || key === IEKeyCodes.ArrowDown) {\n    return KeyCodes.ArrowDown;\n  } else if (key === KeyCodes.ArrowRight || key === IEKeyCodes.ArrowRight) {\n    return KeyCodes.ArrowRight;\n  } else if (key === KeyCodes.ArrowLeft || key === IEKeyCodes.ArrowLeft) {\n    return KeyCodes.ArrowLeft;\n  } else if (key === KeyCodes.Space || key === IEKeyCodes.Space) {\n    return KeyCodes.Space;\n  } else if (key === KeyCodes.Escape || key === IEKeyCodes.Escape) {\n    return KeyCodes.Escape;\n  } else {\n    return key;\n  }\n}\n\nexport function preventArrowKeyScroll(event: KeyboardEvent) {\n  const validKey = keyValidator(event.key);\n\n  if (\n    validKey === KeyCodes.ArrowUp ||\n    validKey === KeyCodes.ArrowDown ||\n    validKey === KeyCodes.ArrowLeft ||\n    validKey === KeyCodes.ArrowRight\n  ) {\n    // prevent element container scroll\n    // MDN references this is really the only way to prevent native browser interactions\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/Keyboard-navigable_JavaScript_widgets\n    event.preventDefault();\n  }\n}\n\nexport function getKeyCodes(event: KeyboardEvent) {\n  // IE does not properly follow the spec for `event.key` so we need to return a different enum for the key events\n  // We use `event.key` for optimal browser support, to detect IE/Edge check if `event.code` is undefined\n  const isIEKeyboardEvent = event.code === undefined;\n  return isIEKeyboardEvent ? IEKeyCodes : KeyCodes;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// TODO: I'd like this to be a CheckedState enum for the checkboxes in the future.\nexport enum ClrSelectedState {\n  // WARNING! Unselected has the value 0,\n  // so it's actually the only one that will evaluate to false if cast to a boolean.\n  // Don't mess with the order!\n  UNSELECTED = 0,\n  SELECTED,\n  INDETERMINATE,\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrSelectedState } from './selected-state.enum';\nimport { BehaviorSubject } from 'rxjs';\n\nexport abstract class TreeNodeModel<T> {\n  nodeId: string;\n  expanded: boolean;\n  selected = new BehaviorSubject<ClrSelectedState>(ClrSelectedState.UNSELECTED);\n  model: T | null;\n  /*\n   * Ideally, I would like to use a polymorphic this type here to ensure homogeneity of the tree, something like:\n   * abstract parent: this<T> | null;\n   * abstract children: this<T>[];\n   * But I'm hitting limitations on typescript not allowing that type in constructors or static methods.\n   * So I'm resorting to forcing override with more precise types by marking these abstract.\n   */\n  abstract parent: TreeNodeModel<T> | null;\n  abstract children: TreeNodeModel<T>[];\n\n  /*\n   * Being able to push this down to the RecursiveTreeNodeModel would require too much work on the angular components\n   * right now for them to know which kind of model they are using. So I'm lifting the public properties to this\n   * abstract parent class for now and we can revisit it later, when we're not facing such a close deadline.\n   */\n  loading = false;\n\n  destroy() {\n    // Just to be safe\n    this.selected.complete();\n  }\n\n  // Propagate by default when eager, don't propagate in the lazy-loaded tree.\n  setSelected(state: ClrSelectedState, propagateUp: boolean, propagateDown: boolean) {\n    if (state === this.selected.value) {\n      return;\n    }\n    this.selected.next(state);\n    if (propagateDown && state !== ClrSelectedState.INDETERMINATE && this.children) {\n      this.children.forEach(child => child.setSelected(state, false, true));\n    }\n    if (propagateUp && this.parent) {\n      this.parent._updateSelectionFromChildren();\n    }\n  }\n\n  toggleSelection(propagate: boolean) {\n    // Both unselected and indeterminate toggle to selected\n    const newState =\n      this.selected.value === ClrSelectedState.SELECTED ? ClrSelectedState.UNSELECTED : ClrSelectedState.SELECTED;\n    // NOTE: we always propagate selection up in this method because it is only called when the user takes an action.\n    // It should never be called from lifecycle hooks or app-provided inputs.\n    this.setSelected(newState, true, propagate);\n  }\n\n  private computeSelectionStateFromChildren() {\n    let oneSelected = false;\n    let oneUnselected = false;\n    // Using a good old for loop to exit as soon as we can tell, for better performance on large trees.\n    for (const child of this.children) {\n      switch (child.selected.value) {\n        case ClrSelectedState.INDETERMINATE:\n          return ClrSelectedState.INDETERMINATE;\n        case ClrSelectedState.SELECTED:\n          oneSelected = true;\n          if (oneUnselected) {\n            return ClrSelectedState.INDETERMINATE;\n          }\n          break;\n        case ClrSelectedState.UNSELECTED:\n        default:\n          // Default is the same as unselected, in case an undefined somehow made it all the way here.\n          oneUnselected = true;\n          if (oneSelected) {\n            return ClrSelectedState.INDETERMINATE;\n          }\n          break;\n      }\n    }\n    if (!oneSelected) {\n      return ClrSelectedState.UNSELECTED;\n    } else if (!oneUnselected) {\n      return ClrSelectedState.SELECTED;\n    }\n  }\n\n  /*\n   * Internal, but needs to be called by other nodes\n   */\n  _updateSelectionFromChildren() {\n    const newState = this.computeSelectionStateFromChildren();\n    if (newState === this.selected.value) {\n      return;\n    }\n    this.selected.next(newState);\n    if (this.parent) {\n      this.parent._updateSelectionFromChildren();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { TreeNodeModel } from './tree-node.model';\n\n/*\n * A declarative model is built by traversing the Angular component tree.\n * Declarative = Tree node components dictate the model\n */\nexport class DeclarativeTreeNodeModel<T> extends TreeNodeModel<T> {\n  constructor(parent: DeclarativeTreeNodeModel<T> | null) {\n    super();\n    this.parent = parent;\n    if (parent) {\n      parent._addChild(this);\n    }\n    this.children = [];\n  }\n\n  // Override for a more precise type\n  parent: DeclarativeTreeNodeModel<T> | null;\n  children: DeclarativeTreeNodeModel<T>[];\n\n  _addChild(child: DeclarativeTreeNodeModel<T>) {\n    this.children.push(child);\n  }\n\n  _removeChild(child: DeclarativeTreeNodeModel<T>) {\n    const index = this.children.indexOf(child);\n    if (index > -1) {\n      this.children.splice(index, 1);\n    }\n  }\n\n  destroy() {\n    if (this.parent) {\n      this.parent._removeChild(this);\n    }\n    super.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Optional, SkipSelf, TemplateRef } from '@angular/core';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\nimport { ClrRecursiveForOfContext } from './recursive-for-of';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class TreeFeaturesService<T> {\n  selectable = false;\n  eager = true;\n  recursion: {\n    template: TemplateRef<ClrRecursiveForOfContext<T>>;\n    root: RecursiveTreeNodeModel<T>[];\n  };\n  childrenFetched: Subject<void> = new Subject();\n}\n\nexport function treeFeaturesFactory<T>(existing: TreeFeaturesService<T>) {\n  return existing || new TreeFeaturesService();\n}\n\nexport const TREE_FEATURES_PROVIDER = {\n  provide: TreeFeaturesService,\n  useFactory: treeFeaturesFactory,\n  /*\n   * The Optional + SkipSelf pattern ensures that in case of nested components, only the root one will\n   * instantiate a new service and all its children will reuse the root's instance.\n   * If there are several roots (in this case, several independent trees on a page), each root will instantiate\n   * its own service so they won't interfere with one another.\n   *\n   * TL;DR - Optional + SkipSelf = 1 instance of TreeFeaturesService per tree.\n   */\n  deps: [[new Optional(), new SkipSelf(), TreeFeaturesService]],\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { TreeNodeModel } from './models/tree-node.model';\n\n@Injectable()\nexport class TreeFocusManagerService<T> {\n  public rootNodeModels: TreeNodeModel<T>[];\n\n  private focusedNodeId: string;\n\n  private _focusRequest: Subject<string> = new Subject();\n\n  private _focusChange: Subject<string> = new Subject();\n\n  get focusRequest(): Observable<string> {\n    return this._focusRequest.asObservable();\n  }\n\n  get focusChange(): Observable<string> {\n    return this._focusChange.asObservable();\n  }\n\n  private findSiblings(model: TreeNodeModel<T>): TreeNodeModel<T>[] {\n    // the method will return not only sibling models but also itself among them\n    if (model.parent) {\n      return model.parent.children;\n    } else {\n      return this.rootNodeModels;\n    }\n  }\n\n  private findLastVisibleInNode(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    // the method will traverse through until it finds the last visible node from the given node\n    if (!model) {\n      return;\n    }\n    if (model.expanded && model.children.length > 0) {\n      const children = model.children;\n      const lastChild = children[children.length - 1];\n      return this.findLastVisibleInNode(lastChild);\n    } else {\n      return model;\n    }\n  }\n\n  private findNextFocusable(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    if (!model) {\n      return;\n    }\n\n    const siblings = this.findSiblings(model);\n    const selfIndex = siblings.indexOf(model);\n\n    if (selfIndex < siblings.length - 1) {\n      return siblings[selfIndex + 1];\n    } else if (selfIndex === siblings.length - 1) {\n      return this.findNextFocusable(model.parent);\n    }\n  }\n\n  private findLastVisibleInTree(): TreeNodeModel<T> {\n    const lastRootNode =\n      this.rootNodeModels && this.rootNodeModels.length && this.rootNodeModels[this.rootNodeModels.length - 1];\n    return this.findLastVisibleInNode(lastRootNode);\n  }\n\n  private findNodeAbove(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    if (!model) {\n      return;\n    }\n\n    const siblings = this.findSiblings(model);\n    const selfIndex = siblings.indexOf(model);\n\n    if (selfIndex === 0) {\n      return model.parent;\n    } else if (selfIndex > 0) {\n      return this.findLastVisibleInNode(siblings[selfIndex - 1]);\n    }\n  }\n\n  private findNodeBelow(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    if (!model) {\n      return;\n    }\n\n    if (model.expanded && model.children.length > 0) {\n      return model.children[0];\n    } else {\n      return this.findNextFocusable(model);\n    }\n  }\n\n  focusNode(model: TreeNodeModel<T>): void {\n    if (model) {\n      this._focusRequest.next(model.nodeId);\n    }\n  }\n\n  broadcastFocusedNode(nodeId: string): void {\n    if (this.focusedNodeId !== nodeId) {\n      this.focusedNodeId = nodeId;\n      this._focusChange.next(nodeId);\n    }\n  }\n\n  focusParent(model: TreeNodeModel<T>): void {\n    if (model) {\n      this.focusNode(model.parent);\n    }\n  }\n\n  focusFirstVisibleNode(): void {\n    const focusModel = this.rootNodeModels && this.rootNodeModels[0];\n    this.focusNode(focusModel);\n  }\n\n  focusLastVisibleNode(): void {\n    this.focusNode(this.findLastVisibleInTree());\n  }\n\n  focusNodeAbove(model: TreeNodeModel<T>): void {\n    this.focusNode(this.findNodeAbove(model));\n  }\n\n  focusNodeBelow(model: TreeNodeModel<T>): void {\n    this.focusNode(this.findNodeBelow(model));\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '.clr-treenode-link',\n})\nexport class ClrTreeNodeLink {\n  constructor(private el: ElementRef) {}\n\n  activate() {\n    if (this.el.nativeElement && this.el.nativeElement.click) {\n      this.el.nativeElement.click();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, style, transition, trigger, state } from '@angular/animations';\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  SkipSelf,\n  ViewChild,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { KeyCodes } from './../../utils/enums/key-codes.enum';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { keyValidator, preventArrowKeyScroll } from '../../utils/focus/key-focus/util';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\nimport { DeclarativeTreeNodeModel } from './models/declarative-tree-node.model';\nimport { ClrSelectedState } from './models/selected-state.enum';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { TreeFeaturesService, TREE_FEATURES_PROVIDER } from './tree-features.service';\nimport { TreeFocusManagerService } from './tree-focus-manager.service';\nimport { ClrTreeNodeLink } from './tree-node-link';\n\nconst LVIEW_CONTEXT_INDEX = 8;\n\n@Component({\n  selector: 'clr-tree-node',\n  templateUrl: './tree-node.html',\n  providers: [\n    UNIQUE_ID_PROVIDER,\n    TREE_FEATURES_PROVIDER,\n    IfExpandService,\n    { provide: LoadingListener, useExisting: IfExpandService },\n  ],\n  animations: [\n    trigger('toggleChildrenAnim', [\n      transition('collapsed => expanded', [style({ height: 0 }), animate(200, style({ height: '*' }))]),\n      transition('expanded => collapsed', [style({ height: '*' }), animate(200, style({ height: 0 }))]),\n      state('expanded', style({ height: '*', 'overflow-y': 'visible' })),\n      state('collapsed', style({ height: 0 })),\n    ]),\n  ],\n  host: {\n    '[attr.role]': '\"treeitem\"',\n    '[class.clr-tree-node]': 'true',\n  },\n})\nexport class ClrTreeNode<T> implements OnInit, OnDestroy {\n  STATES = ClrSelectedState;\n  private skipEmitChange = false;\n\n  constructor(\n    @Inject(UNIQUE_ID) public nodeId: string,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional()\n    @SkipSelf()\n    parent: ClrTreeNode<T>,\n    public featuresService: TreeFeaturesService<T>,\n    public expandService: IfExpandService,\n    public commonStrings: ClrCommonStringsService,\n    private focusManager: TreeFocusManagerService<T>,\n    injector: Injector\n  ) {\n    if (this.featuresService.recursion) {\n      // I'm completely stuck, we have to hack into private properties until either\n      // https://github.com/angular/angular/issues/14935 or https://github.com/angular/angular/issues/15998\n      // are fixed\n      // This is for non-ivy implementations\n      if ((<any>injector).view) {\n        this._model = (<any>injector).view.context.clrModel;\n      } else {\n        // Ivy puts this on a specific index of a _lView property\n        // tslint:disable-next-line\n        this._model = (<any>injector)._lView[LVIEW_CONTEXT_INDEX].clrModel;\n      }\n    } else {\n      // Force cast for now, not sure how to tie the correct type here to featuresService.recursion\n      this._model = new DeclarativeTreeNodeModel(parent ? <DeclarativeTreeNodeModel<T>>parent._model : null);\n    }\n    this._model.nodeId = this.nodeId;\n  }\n\n  _model: TreeNodeModel<T>;\n\n  isExpandable() {\n    if (typeof this.expandable !== 'undefined') {\n      return this.expandable;\n    }\n    return !!this.expandService.expandable || (this._model.children && this._model.children.length > 0);\n  }\n\n  @Input('clrSelected')\n  get selected(): ClrSelectedState | boolean {\n    return this._model.selected.value;\n  }\n  set selected(value: ClrSelectedState | boolean) {\n    this.featuresService.selectable = true;\n    // Gracefully handle falsy states like null or undefined because it's just easier than answering questions.\n    // This shouldn't happen with strict typing on the app's side, but it's not up to us.\n    if (value === null || typeof value === 'undefined') {\n      value = ClrSelectedState.UNSELECTED;\n    }\n    // We match booleans to the corresponding ClrSelectedState\n    if (typeof value === 'boolean') {\n      value = value ? ClrSelectedState.SELECTED : ClrSelectedState.UNSELECTED;\n    }\n    // We propagate only if the tree is in smart mode, and skip emitting the output when we set the input\n    // See https://github.com/vmware/clarity/issues/3073\n    this.skipEmitChange = true;\n    this._model.setSelected(value, this.featuresService.eager, this.featuresService.eager);\n    this.skipEmitChange = false;\n  }\n\n  @Output('clrSelectedChange') selectedChange = new EventEmitter<ClrSelectedState>(false);\n\n  get ariaSelected(): boolean {\n    return this.featuresService.selectable ? this._model.selected.value === ClrSelectedState.SELECTED : null;\n  }\n\n  // Allows the consumer to override our logic deciding if a node is expandable.\n  // Useful for recursive trees that don't want to pre-load one level ahead just to know which nodes are expandable.\n  @Input('clrExpandable') expandable: boolean | undefined;\n\n  // I'm caving on this, for tree nodes I think we can tolerate having a two-way binding on the component\n  // rather than enforce the clrIfExpanded structural directive for dynamic cases. Mostly because for the smart\n  // case, you can't use a structural directive, it would need to go on an ng-container.\n  @Input('clrExpanded')\n  get expanded(): boolean {\n    return this.expandService.expanded;\n  }\n  set expanded(value: boolean) {\n    this.expandService.expanded = value;\n  }\n\n  @Output('clrExpandedChange') expandedChange = new EventEmitter<boolean>();\n\n  private subscriptions: Subscription[] = [];\n\n  contentContainerTabindex = -1;\n  @ViewChild('contentContainer', { read: ElementRef, static: true })\n  private contentContainer: ElementRef;\n\n  ngOnInit() {\n    this._model.expanded = this.expanded;\n    this.subscriptions.push(\n      this._model.selected.pipe(filter(() => !this.skipEmitChange)).subscribe(value => {\n        this.selectedChange.emit(value);\n      })\n    );\n    this.subscriptions.push(\n      this.expandService.expandChange.subscribe(value => {\n        this.expandedChange.emit(value);\n        this._model.expanded = value;\n      })\n    );\n    this.subscriptions.push(\n      this.focusManager.focusRequest.subscribe(nodeId => {\n        if (this.nodeId === nodeId) {\n          this.focusTreeNode();\n        }\n      }),\n      this.focusManager.focusChange.subscribe(nodeId => {\n        this.checkTabIndex(nodeId);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this._model.destroy();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  // @ContentChild would have been more succinct\n  // but it doesn't offer a way to query only an immediate child\n  @ContentChildren(ClrTreeNodeLink, { descendants: false })\n  private treeNodeLinkList: QueryList<ClrTreeNodeLink>;\n\n  get treeNodeLink() {\n    return this.treeNodeLinkList && this.treeNodeLinkList.first;\n  }\n\n  private setTabIndex(value: number) {\n    this.contentContainerTabindex = value;\n    this.contentContainer.nativeElement.setAttribute('tabindex', value);\n  }\n\n  private checkTabIndex(nodeId: string): void {\n    if (isPlatformBrowser(this.platformId) && this.nodeId !== nodeId && this.contentContainerTabindex !== -1) {\n      this.setTabIndex(-1);\n    }\n  }\n\n  focusTreeNode(): void {\n    if (isPlatformBrowser(this.platformId) && document.activeElement !== this.contentContainer.nativeElement) {\n      this.setTabIndex(0);\n      this.contentContainer.nativeElement.focus();\n    }\n  }\n\n  broadcastFocusOnContainer() {\n    this.focusManager.broadcastFocusedNode(this.nodeId);\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    // Two reasons to prevent default behavior:\n    // 1. to prevent scrolling on arrow keys\n    // 2. Assistive Technology focus differs from Keyboard focus behavior.\n    //    By default, pressing arrow key makes AT focus go into the nested content of the item.\n    preventArrowKeyScroll(event);\n\n    // https://www.w3.org/TR/wai-aria-practices-1.1/#keyboard-interaction-22\n    switch (keyValidator(event.key)) {\n      case KeyCodes.ArrowUp:\n        this.focusManager.focusNodeAbove(this._model);\n        break;\n      case KeyCodes.ArrowDown:\n        this.focusManager.focusNodeBelow(this._model);\n        break;\n      case KeyCodes.ArrowRight:\n        this.expandOrFocusFirstChild();\n        break;\n      case KeyCodes.ArrowLeft:\n        this.collapseOrFocusParent();\n        break;\n      case KeyCodes.Home:\n        this.focusManager.focusFirstVisibleNode();\n        break;\n      case KeyCodes.End:\n        this.focusManager.focusLastVisibleNode();\n        break;\n      case KeyCodes.Enter:\n        this.triggerDefaultAction();\n        break;\n      case KeyCodes.Space:\n        // to prevent scrolling on space key in this specific case\n        event.preventDefault();\n        this.triggerDefaultAction();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private expandOrFocusFirstChild() {\n    if (this.expanded) {\n      // if the node is already expanded and has children, focus its very first child\n      if (this._model.children.length > 0) {\n        this.focusManager.focusNodeBelow(this._model);\n      }\n    } else {\n      // we must check if the node is expandable, in order to set .expanded to true from false\n      // because we shouldn't set .expanded to true if it's not expandable node\n      if (this.isExpandable()) {\n        this.expandService.expanded = true;\n      }\n    }\n  }\n\n  private collapseOrFocusParent() {\n    if (this.expanded) {\n      this.expandService.expanded = false;\n    } else {\n      this.focusManager.focusParent(this._model);\n    }\n  }\n\n  private triggerDefaultAction() {\n    if (this.treeNodeLink) {\n      this.treeNodeLink.activate();\n    } else {\n      if (this.featuresService.selectable) {\n        this._model.toggleSelection(this.featuresService.eager);\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostListener,\n  Input,\n  OnDestroy,\n  QueryList,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { TreeFocusManagerService } from './tree-focus-manager.service';\nimport { TreeFeaturesService, TREE_FEATURES_PROVIDER } from './tree-features.service';\nimport { ClrTreeNode } from './tree-node';\n\n@Component({\n  selector: 'clr-tree',\n  template: `\n    <ng-content></ng-content>\n    <clr-recursive-children *ngIf=\"featuresService.recursion\"\n                            [children]=\"featuresService.recursion.root\"></clr-recursive-children>\n  `,\n  providers: [TREE_FEATURES_PROVIDER, TreeFocusManagerService],\n  host: {\n    '[attr.tabindex]': 'tabindex',\n    '[attr.role]': '\"tree\"',\n    '[attr.aria-multiselectable]': 'isMultiSelectable',\n  },\n})\nexport class ClrTree<T> implements AfterContentInit, OnDestroy {\n  constructor(\n    public featuresService: TreeFeaturesService<T>,\n    private focusManagerService: TreeFocusManagerService<T>,\n    private el: ElementRef\n  ) {}\n\n  private subscriptions: Subscription[] = [];\n\n  @Input('clrLazy')\n  set lazy(value: boolean) {\n    this.featuresService.eager = !value;\n  }\n\n  tabindex = 0;\n\n  get isMultiSelectable() {\n    return this.featuresService.selectable && this.rootNodes.length > 0;\n  }\n\n  @HostListener('focusin', ['$event'])\n  onFocusIn(event: FocusEvent) {\n    if (event.target === this.el.nativeElement) {\n      // After discussing with the team, I've made it so that when the tree receives focus, the first visible node will be focused.\n      // This will prevent from the page scrolling abruptly to the first selected node if it exist in a deeply nested tree.\n      this.focusManagerService.focusFirstVisibleNode();\n\n      // when the first child gets focus,\n      // tree should no longer have tabindex of 0;\n      delete this.tabindex;\n    }\n  }\n\n  @ContentChildren(ClrTreeNode) private rootNodes: QueryList<ClrTreeNode<T>>;\n\n  ngAfterContentInit() {\n    this.setRootNodes();\n    this.subscriptions.push(\n      this.rootNodes.changes.subscribe(() => {\n        this.setRootNodes();\n      })\n    );\n  }\n\n  private setRootNodes(): void {\n    // if node has no parent, it's a root node\n    // for recursive tree, this.rootNodes registers also nested children\n    // so we have to use filter to extract the ones that are truly root nodes\n    this.focusManagerService.rootNodeModels = this.rootNodes.map(node => node._model).filter(node => !node.parent);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// We need to make sure people can give us null or undefined children even if they run strict type checking.\nimport { Observable } from 'rxjs';\n\nexport type AsyncArray<T> =\n  | T[]\n  | null\n  | undefined\n  | Promise<T[] | null | undefined>\n  | Observable<T[] | null | undefined>;\n\nexport function isPromise<T>(o: AsyncArray<T>): o is Promise<T[]> {\n  // Shamelessly copied from every open-source project out there.\n  return o && typeof (<any>o).then === 'function';\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isObservable, Subscription } from 'rxjs';\n\nimport { TreeNodeModel } from './tree-node.model';\nimport { AsyncArray, isPromise } from './async-array';\nimport { TreeFeaturesService } from '../tree-features.service';\n\n/*\n * A recursive model is built received from the app and traversed to create the corresponding components.\n * Recursive = Model dictates the tree node components\n */\nexport class RecursiveTreeNodeModel<T> extends TreeNodeModel<T> {\n  constructor(\n    model: T,\n    parent: RecursiveTreeNodeModel<T> | null,\n    private getChildren: (node: T) => AsyncArray<T> | undefined,\n    private featuresService: TreeFeaturesService<T> | undefined\n  ) {\n    super();\n    this.model = model;\n    this.parent = parent;\n  }\n\n  parent: RecursiveTreeNodeModel<T> | null;\n\n  private childrenFetched = false;\n\n  clearChildren() {\n    this._children.forEach(child => child.destroy());\n    delete this._children;\n    this.childrenFetched = false;\n  }\n\n  fetchChildren() {\n    if (this.childrenFetched) {\n      return;\n    }\n\n    const asyncChildren = this.getChildren(this.model);\n    if (isPromise(asyncChildren)) {\n      this.loading = true;\n      asyncChildren.then(raw => {\n        this._children = this.wrapChildren(raw);\n        this.loading = false;\n      });\n    } else if (isObservable(asyncChildren)) {\n      this.loading = true;\n      this.subscription = asyncChildren.subscribe(raw => {\n        this._children = this.wrapChildren(raw);\n        this.loading = false;\n      });\n    } else if (asyncChildren) {\n      // Synchronous case\n      this._children = this.wrapChildren(asyncChildren);\n    } else {\n      this._children = [];\n    }\n    this.childrenFetched = true;\n    if (this.featuresService) {\n      this.featuresService.childrenFetched.next();\n    }\n  }\n\n  private wrapChildren(rawModels: T[]) {\n    return rawModels.map(m => new RecursiveTreeNodeModel(m, this, this.getChildren, this.featuresService));\n  }\n\n  private _children: RecursiveTreeNodeModel<T>[] = [];\n  get children(): RecursiveTreeNodeModel<T>[] {\n    this.fetchChildren();\n    return this._children;\n  }\n  set children(value: RecursiveTreeNodeModel<T>[]) {\n    this._children = value;\n  }\n\n  private subscription: Subscription;\n\n  destroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    super.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Input, OnChanges, OnDestroy, TemplateRef } from '@angular/core';\nimport { TreeFeaturesService } from './tree-features.service';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { AsyncArray } from './models/async-array';\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nexport interface ClrRecursiveForOfContext<T> {\n  $implicit: T;\n  clrModel: TreeNodeModel<T>;\n}\n\n@Directive({ selector: '[clrRecursiveFor][clrRecursiveForOf]' })\nexport class ClrRecursiveForOf<T> implements OnChanges, OnDestroy {\n  constructor(\n    private template: TemplateRef<ClrRecursiveForOfContext<T>>,\n    private featuresService: TreeFeaturesService<T>,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  // TODO: accept NgIterable<T>\n  @Input('clrRecursiveForOf') nodes: T | T[];\n\n  // TODO: accept NgIterable<T> return type\n  @Input('clrRecursiveForGetChildren') getChildren: (node: T) => AsyncArray<T>;\n\n  private childrenFetchSubscription: Subscription;\n\n  // I'm using OnChanges instead of OnInit to easily keep up to date with dynamic trees. Maybe optimizable later.\n  ngOnChanges() {\n    let wrapped: RecursiveTreeNodeModel<T>[];\n    if (Array.isArray(this.nodes)) {\n      wrapped = this.nodes.map(node => new RecursiveTreeNodeModel(node, null, this.getChildren, this.featuresService));\n    } else {\n      wrapped = [new RecursiveTreeNodeModel(this.nodes, null, this.getChildren, this.featuresService)];\n    }\n    if (!this.childrenFetchSubscription) {\n      this.childrenFetchSubscription = this.featuresService.childrenFetched.pipe(debounceTime(0)).subscribe(() => {\n        this.cdr.detectChanges();\n      });\n    }\n\n    this.featuresService.recursion = {\n      template: this.template,\n      root: wrapped,\n    };\n  }\n\n  ngOnDestroy() {\n    if (this.childrenFetchSubscription) {\n      this.childrenFetchSubscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input, Optional } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { TreeFeaturesService } from './tree-features.service';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { ClrRecursiveForOfContext } from './recursive-for-of';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\n\n@Component({\n  selector: 'clr-recursive-children',\n  template: `\n    <ng-container *ngIf=\"shouldRender()\">\n      <ng-container *ngFor=\"let child of parent?.children || children\">\n        <ng-container *ngTemplateOutlet=\"featuresService.recursion.template; context: getContext(child)\"></ng-container>\n      </ng-container>\n    </ng-container>\n  `,\n  host: {\n    '[attr.role]': '\"group\"', // Safari + VO needs direct relationship between treeitem and group; no element should exist between them\n  },\n})\n/**\n * Internal component, do not export!\n * This is part of the hack to get around https://github.com/angular/angular/issues/15998\n */\nexport class RecursiveChildren<T> {\n  constructor(public featuresService: TreeFeaturesService<T>, @Optional() private expandService: IfExpandService) {\n    if (expandService) {\n      this.subscription = this.expandService.expandChange.subscribe(value => {\n        if (!value && this.parent && !this.featuresService.eager && this.featuresService.recursion) {\n          // In the case of lazy-loading recursive trees, we clear the children on collapse.\n          // This is better in case they change between two user interaction, and that way\n          // the app itself can decide whether to cache them or not.\n          (<RecursiveTreeNodeModel<T>>this.parent).clearChildren();\n        }\n      });\n    }\n  }\n\n  shouldRender() {\n    return (\n      this.featuresService.recursion &&\n      // In the smart case, we eagerly render all the recursive children\n      // to make sure two-way bindings for selection are available.\n      // They will be hidden with CSS by the parent.\n      (this.featuresService.eager || !this.expandService || this.expandService.expanded)\n    );\n  }\n\n  // Offering the option to either give the parent node to recurse potentially lazily,\n  // or directly the list of children to display.\n  @Input('parent') parent: TreeNodeModel<T>;\n  @Input('children') children: TreeNodeModel<T>[];\n\n  getContext(node: TreeNodeModel<T>): ClrRecursiveForOfContext<T> {\n    return {\n      $implicit: node.model,\n      clrModel: node,\n    };\n  }\n\n  subscription: Subscription;\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrLoadingModule } from '../../utils/loading/loading.module';\nimport { ClrTreeNode } from './tree-node';\nimport { ClrTree } from './tree';\nimport { ClrRecursiveForOf } from './recursive-for-of';\nimport { RecursiveChildren } from './recursive-children';\nimport { ClrTreeNodeLink } from './tree-node-link';\n\nexport const CLR_TREE_VIEW_DIRECTIVES: Type<any>[] = [ClrTree, ClrTreeNode, ClrRecursiveForOf, ClrTreeNodeLink];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrLoadingModule],\n  declarations: [CLR_TREE_VIEW_DIRECTIVES, RecursiveChildren],\n  exports: [CLR_TREE_VIEW_DIRECTIVES],\n})\nexport class ClrTreeViewModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClrDatagridModule } from './datagrid/datagrid.module';\nimport { ClrStackViewModule } from './stack-view/stack-view.module';\nimport { ClrTreeViewModule } from './tree-view/tree-view.module';\n\n@NgModule({ exports: [ClrDatagridModule, ClrStackViewModule, ClrTreeViewModule] })\nexport class ClrDataModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable } from 'rxjs';\n\nexport abstract class FocusableItem {\n  id: string;\n  disabled?: boolean;\n\n  abstract focus(): void;\n  abstract blur(): void;\n  abstract activate?(): void;\n\n  up?: FocusableItem | Observable<FocusableItem>;\n  down?: FocusableItem | Observable<FocusableItem>;\n  left?: FocusableItem | Observable<FocusableItem>;\n  right?: FocusableItem | Observable<FocusableItem>;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Type } from '@angular/core';\nimport { UNIQUE_ID_PROVIDER } from '../../id-generator/id-generator.service';\nimport { FocusableItem } from './focusable-item';\n\nexport function customFocusableItemProvider<T>(implementation: Type<T>) {\n  return [\n    UNIQUE_ID_PROVIDER,\n    implementation,\n    {\n      provide: FocusableItem,\n      useExisting: implementation,\n    },\n  ];\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ArrowKeyDirection {\n  UP = 'up',\n  DOWN = 'down',\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, Optional, Renderer2, SkipSelf } from '@angular/core';\nimport { isObservable, of } from 'rxjs';\n\nimport { ArrowKeyDirection } from './arrow-key-direction.enum';\nimport { FocusableItem } from './focusable-item/focusable-item';\n\n@Injectable()\nexport class FocusService {\n  constructor(private renderer: Renderer2) {}\n\n  private _unlistenFuncs = [];\n  private _current: FocusableItem;\n  public get current() {\n    return this._current;\n  }\n\n  reset(first: FocusableItem) {\n    this._current = first;\n  }\n\n  listenToArrowKeys(el: HTMLElement) {\n    // The following listeners return false when there was an action to take for the key pressed,\n    // in order to prevent the default behavior of that key.\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.arrowup', event => !this.move(ArrowKeyDirection.UP)));\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.arrowdown', event => !this.move(ArrowKeyDirection.DOWN))\n    );\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.arrowleft', event => !this.move(ArrowKeyDirection.LEFT))\n    );\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.arrowright', event => !this.move(ArrowKeyDirection.RIGHT))\n    );\n  }\n\n  registerContainer(el: HTMLElement) {\n    this.renderer.setAttribute(el, 'tabindex', '0');\n    this.listenToArrowKeys(el);\n    // The following listeners return false when there was an action to take for the key pressed,\n    // in order to prevent the default behavior of that key.\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.space', () => !this.activateCurrent()));\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.enter', () => !this.activateCurrent()));\n  }\n\n  moveTo(item: FocusableItem) {\n    /**\n     * Make sure that item is not undefined,\n     * This is safety net in the case that someone sometime decide to\n     * call this method without having FocusableItem.\n     */\n    if (item === undefined) {\n      return;\n    }\n\n    if (this.current) {\n      this.current.blur();\n    }\n    item.focus();\n    this._current = item;\n  }\n\n  move(direction: ArrowKeyDirection): boolean {\n    let moved = false;\n    if (this.current) {\n      const next = this.current[direction];\n      if (next) {\n        // Turning the value into an Observable isn't great, but it's the fastest way to avoid code duplication.\n        // If performance ever matters for this, we can refactor using additional private methods.\n        const nextObs = isObservable(next) ? next : of(next);\n        nextObs.subscribe(item => {\n          if (item) {\n            this.moveTo(item);\n            moved = true;\n          }\n        });\n      }\n    }\n    return moved;\n  }\n\n  activateCurrent() {\n    if (this.current && this.current.activate) {\n      this.current.activate();\n      return true;\n    }\n    return false;\n  }\n\n  public detachListeners() {\n    this._unlistenFuncs.forEach((unlisten: () => void) => unlisten());\n  }\n}\n\nexport function clrFocusServiceFactory(existing: FocusService, renderer: Renderer2) {\n  return existing || new FocusService(renderer);\n}\n\nexport const FOCUS_SERVICE_PROVIDER = {\n  provide: FocusService,\n  useFactory: clrFocusServiceFactory,\n  deps: [[new Optional(), new SkipSelf(), FocusService], Renderer2],\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable } from 'rxjs';\nimport { ArrowKeyDirection } from '../arrow-key-direction.enum';\nimport { FocusableItem } from './focusable-item';\n\nexport class Linkers {\n  /**\n   * Links a set of focusable items to a parent along one direction\n   */\n  static linkParent(\n    items: FocusableItem[],\n    parent: FocusableItem | Observable<FocusableItem>,\n    direction: ArrowKeyDirection\n  ) {\n    items.forEach(item => (item[direction] = parent));\n  }\n\n  /**\n   * Double-links a set of focusable items vertically, possibly looping\n   */\n  static linkVertical(items: FocusableItem[], loop = true) {\n    items.forEach((item, index) => {\n      if (index > 0) {\n        item.up = items[index - 1];\n      }\n      if (index < items.length - 1) {\n        item.down = items[index + 1];\n      }\n    });\n    if (loop && items.length > 1) {\n      items[0].up = items[items.length - 1];\n      items[items.length - 1].down = items[0];\n    }\n  }\n}\n\n// Right now I only need the two linkers above, but we can easily add more linkers. A couple examples:\n// export function linkHorizontal(items: FocusableItem[], loop = true);\n// export function linkTable(items: FocusableItem[][]);\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable, Observer } from 'rxjs';\n\nexport function wrapObservable<T>(\n  observable: Observable<T>,\n  onSubscribe?: (observer: Observer<T>) => void,\n  onUnsubscribe?: (observer: Observer<T>) => void\n): Observable<T> {\n  return Observable.create((observer: Observer<T>) => {\n    onSubscribe(observer);\n    const subscription = observable.subscribe(observer);\n    return () => {\n      subscription.unsubscribe();\n      if (onUnsubscribe) {\n        onUnsubscribe(observer);\n      }\n    };\n  });\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, Optional, PLATFORM_ID, Renderer2, SkipSelf } from '@angular/core';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { ClrPopoverToggleService } from '../../../utils/popover/providers/popover-toggle.service';\nimport { customFocusableItemProvider } from '../../../utils/focus/focusable-item/custom-focusable-item-provider';\nimport { UNIQUE_ID } from '../../../utils/id-generator/id-generator.service';\nimport { ArrowKeyDirection } from '../../../utils/focus/arrow-key-direction.enum';\nimport { FocusService } from '../../../utils/focus/focus.service';\nimport { FocusableItem } from '../../../utils/focus/focusable-item/focusable-item';\nimport { Linkers } from '../../../utils/focus/focusable-item/linkers';\nimport { wrapObservable } from '../../../utils/focus/wrap-observable';\n\n@Injectable()\nexport class DropdownFocusHandler implements FocusableItem {\n  constructor(\n    @Inject(UNIQUE_ID) public id: string,\n    private renderer: Renderer2,\n    @SkipSelf()\n    @Optional()\n    private parent: DropdownFocusHandler,\n    private toggleService: ClrPopoverToggleService,\n    private focusService: FocusService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.resetChildren();\n    this.moveToFirstItemWhenOpen();\n    if (!this.parent) {\n      this.handleRootFocus();\n    }\n  }\n\n  private _unlistenFuncs = [];\n\n  /**\n   * If the dropdown was opened by clicking on the trigger, we automatically move to the first item\n   */\n  moveToFirstItemWhenOpen() {\n    this.toggleService.openChange.subscribe(open => {\n      if (open && this.toggleService.originalEvent) {\n        // Even if we properly waited for ngAfterViewInit, the container still wouldn't be attached to the DOM.\n        // So setTimeout is the only way to wait for the container to be ready to move focus to first item.\n        setTimeout(() => {\n          this.focusService.moveTo(this);\n          if (this.parent) {\n            this.focusService.move(ArrowKeyDirection.RIGHT);\n          } else {\n            this.focusService.move(ArrowKeyDirection.DOWN);\n          }\n        });\n      }\n    });\n  }\n\n  private focusBackOnTrigger = false;\n\n  /**\n   * Focus on the menu when it opens, and focus back on the root trigger when the whole dropdown becomes closed\n   */\n  handleRootFocus() {\n    this.toggleService.openChange.subscribe(open => {\n      if (!open) {\n        // We reset the state of the focus service both on initialization and when closing.\n        this.focusService.reset(this);\n        // But we only actively focus the trigger when closing, not on initialization.\n        if (this.focusBackOnTrigger) {\n          this.focus();\n        }\n      }\n      this.focusBackOnTrigger = open;\n    });\n  }\n\n  private _trigger: HTMLElement;\n  get trigger() {\n    return this._trigger;\n  }\n  set trigger(el: HTMLElement) {\n    this._trigger = el;\n\n    if (this.parent) {\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowright', event => this.toggleService.toggleWithEvent(event))\n      );\n    } else {\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowup', event => this.toggleService.toggleWithEvent(event))\n      );\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowdown', event => this.toggleService.toggleWithEvent(event))\n      );\n      this.focusService.listenToArrowKeys(el);\n    }\n  }\n\n  private _container: HTMLElement;\n  get container() {\n    return this._container;\n  }\n  set container(el: HTMLElement) {\n    this._container = el;\n\n    // whether root container or not, tab key should always toggle (i.e. close) the container\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.tab', event => this.toggleService.toggleWithEvent(event))\n    );\n\n    if (this.parent) {\n      // if it's a nested container, pressing esc has the same effect as pressing left key, which closes the current\n      // popup and moves up to its parent. Here, we stop propagation so that the parent container\n      // doesn't receive the esc keydown\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.esc', event => {\n          this.focusService.move(ArrowKeyDirection.LEFT);\n          event.stopPropagation();\n        })\n      );\n    } else {\n      // The root container is the only one we register to the focus service, others do not need focus\n      this.focusService.registerContainer(el);\n\n      // The root container will simply close the container when esc key is pressed\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.esc', event => this.toggleService.toggleWithEvent(event))\n      );\n\n      // When the user moves focus outside of the menu, we close the dropdown\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'blur', event => {\n          // we clear out any existing focus on the items\n          this.children.pipe(take(1)).subscribe(items => items.forEach(item => item.blur()));\n\n          // event.relatedTarget is null in IE11. In that case we use document.activeElement which correctly points\n          // to the element we want to check. Note that other browsers might point document.activeElement to the\n          // wrong element. This is ok, because all the other browsers we support relies on event.relatedTarget.\n          const target = event.relatedTarget || document.activeElement;\n\n          // If the user clicks on an item which triggers the blur, we don't want to close it since it may open a submenu.\n          // In the case of needing to close it (i.e. user selected an item and the dropdown menu is set to close on\n          // selection), dropdown-item.ts handles it.\n          if (target && isPlatformBrowser(this.platformId)) {\n            if (el.contains(target) || target === this.trigger) {\n              return;\n            }\n          }\n          // We let the user move focus to where the want, we don't force the focus back on the trigger\n          this.focusBackOnTrigger = false;\n          this.toggleService.open = false;\n        })\n      );\n    }\n  }\n\n  focus() {\n    if (this.trigger && isPlatformBrowser(this.platformId)) {\n      this.trigger.focus();\n    }\n  }\n  blur() {\n    if (this.trigger && isPlatformBrowser(this.platformId)) {\n      this.trigger.blur();\n    }\n  }\n\n  activate() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.trigger.click();\n    }\n  }\n\n  private children: ReplaySubject<FocusableItem[]>;\n  right?: Observable<FocusableItem>;\n  down?: Observable<FocusableItem>;\n  up?: Observable<FocusableItem>;\n\n  private openAndGetChildren() {\n    return wrapObservable(this.children, () => (this.toggleService.open = true));\n  }\n  private closeAndGetThis() {\n    return wrapObservable(of(this), () => (this.toggleService.open = false));\n  }\n\n  resetChildren() {\n    this.children = new ReplaySubject<FocusableItem[]>(1);\n    if (this.parent) {\n      this.right = this.openAndGetChildren().pipe(map(all => all[0]));\n    } else {\n      this.down = this.openAndGetChildren().pipe(map(all => all[0]));\n      this.up = this.openAndGetChildren().pipe(map(all => all[all.length - 1]));\n    }\n  }\n\n  addChildren(children: FocusableItem[]) {\n    Linkers.linkVertical(children);\n    if (this.parent) {\n      Linkers.linkParent(children, this.closeAndGetThis(), ArrowKeyDirection.LEFT);\n    }\n    this.children.next(children);\n  }\n\n  ngOnDestroy() {\n    this._unlistenFuncs.forEach((unlisten: () => void) => unlisten());\n    this.focusService.detachListeners();\n  }\n}\n\nexport const DROPDOWN_FOCUS_HANDLER_PROVIDER = customFocusableItemProvider(DropdownFocusHandler);\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class RootDropdownService {\n  private _changes: Subject<boolean> = new Subject<boolean>();\n\n  get changes(): Observable<boolean> {\n    return this._changes.asObservable();\n  }\n\n  closeMenus(): void {\n    this._changes.next(false);\n  }\n}\n\nexport function clrRootDropdownFactory(existing: RootDropdownService) {\n  return existing || new RootDropdownService();\n}\n\nexport const ROOT_DROPDOWN_PROVIDER = {\n  provide: RootDropdownService,\n  useFactory: clrRootDropdownFactory,\n  deps: [[new Optional(), new SkipSelf(), RootDropdownService]],\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { DROPDOWN_FOCUS_HANDLER_PROVIDER } from './providers/dropdown-focus-handler.service';\nimport { FOCUS_SERVICE_PROVIDER } from '../../utils/focus/focus.service';\n\nimport { ROOT_DROPDOWN_PROVIDER, RootDropdownService } from './providers/dropdown.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dropdown',\n  template: '<ng-content></ng-content>',\n  host: {\n    '[class.dropdown]': 'true',\n    '[class.open]': 'toggleService.open',\n  },\n  providers: [\n    ROOT_DROPDOWN_PROVIDER,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    FOCUS_SERVICE_PROVIDER,\n    ClrPopoverToggleService,\n    DROPDOWN_FOCUS_HANDLER_PROVIDER,\n  ],\n})\nexport class ClrDropdown implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    @SkipSelf()\n    @Optional()\n    public parent: ClrDropdown,\n    public toggleService: ClrPopoverToggleService,\n    private cdr: ChangeDetectorRef,\n    dropdownService: RootDropdownService\n  ) {\n    this.subscriptions.push(dropdownService.changes.subscribe(value => (this.toggleService.open = value)));\n    this.subscriptions.push(toggleService.openChange.subscribe(value => this.cdr.markForCheck()));\n  }\n\n  @Input('clrCloseMenuOnItemClick') isMenuClosable: boolean = true;\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, PLATFORM_ID, Renderer2 } from '@angular/core';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../id-generator/id-generator.service';\nimport { FocusableItem } from './focusable-item';\n\n@Injectable()\nexport class BasicFocusableItem implements FocusableItem {\n  constructor(\n    @Inject(UNIQUE_ID) public id: string,\n    private el: ElementRef<HTMLElement>,\n    private renderer: Renderer2,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    renderer.setAttribute(el.nativeElement, 'id', id);\n    renderer.setAttribute(el.nativeElement, 'tabindex', '-1');\n  }\n\n  disabled = false;\n\n  focus() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n      this.el.nativeElement.focus();\n    }\n  }\n  blur() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '-1');\n      this.el.nativeElement.blur();\n    }\n  }\n\n  activate() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.el.nativeElement.click();\n    }\n  }\n}\n\nexport const BASIC_FOCUSABLE_ITEM_PROVIDER = [\n  UNIQUE_ID_PROVIDER,\n  {\n    provide: FocusableItem,\n    useClass: BasicFocusableItem,\n  },\n];\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\nimport { ClrDropdown } from './dropdown';\nimport { BASIC_FOCUSABLE_ITEM_PROVIDER } from '../../utils/focus/focusable-item/basic-focusable-item.service';\nimport { FocusableItem } from '../../utils/focus/focusable-item/focusable-item';\nimport { RootDropdownService } from './providers/dropdown.service';\n\n@Directive({\n  selector: '[clrDropdownItem]',\n  host: {\n    '[class.disabled]': 'disabled',\n    '[class.dropdown-item]': 'true',\n    '[attr.role]': '\"menuitem\"',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.disabled]': \"(disabled && setByDeprecatedDisabled)? '' : null\",\n    '[attr.id]': 'dropdownItemId',\n  },\n  providers: [BASIC_FOCUSABLE_ITEM_PROVIDER],\n})\nexport class ClrDropdownItem implements AfterViewInit {\n  constructor(\n    private dropdown: ClrDropdown,\n    private el: ElementRef<HTMLElement>,\n    private _dropdownService: RootDropdownService,\n    private renderer: Renderer2,\n    private focusableItem: FocusableItem\n  ) {}\n\n  private unlisten;\n  public setByDeprecatedDisabled: boolean = false;\n\n  @Input('clrDisabled')\n  set disabled(value: boolean | string) {\n    // Empty string attribute evaluates to false but should disable the item, so we need to add a special case for it.\n    this.focusableItem.disabled = !!value || value === '';\n  }\n\n  get disabled() {\n    return this.focusableItem.disabled;\n  }\n\n  /*\n   * @deprecated since 3.0, remove in 4.0. the presence of this attribute makes it not-focusable in IE11. Use [clrDisabled] input instead.\n   */\n  @Input('disabled')\n  set disabledDeprecated(value: boolean | string) {\n    // Empty string attribute evaluates to false but should disable the item, so we need to add a special case for it.\n    this.focusableItem.disabled = !!value || value === '';\n    this.setByDeprecatedDisabled = true;\n  }\n\n  get disabledDeprecated() {\n    return this.focusableItem.disabled;\n  }\n\n  /**\n   * Let you overwrite the focusable auto increment id.\n   */\n  @Input('id')\n  set dropdownItemId(value: string) {\n    this.focusableItem.id = value;\n  }\n  get dropdownItemId() {\n    return this.focusableItem.id;\n  }\n\n  ngAfterViewInit() {\n    this.unlisten = this.renderer.listen(this.el.nativeElement, 'click', () => this.onDropdownItemClick());\n  }\n\n  onDropdownItemClick(): void {\n    if (this.dropdown.isMenuClosable && !this.el.nativeElement.classList.contains('disabled')) {\n      this._dropdownService.closeMenus();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.unlisten) {\n      this.unlisten();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Do NOT Angular this up. It assumes we're in the DOM, plays with native elements, ...\n * It could potentially be used as part of @clr/ui as a vanilla Javascript helper.\n */\n\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { PopoverOptions } from './popover-options.interface';\nexport enum Point {\n  RIGHT_CENTER,\n  RIGHT_TOP,\n  RIGHT_BOTTOM,\n  TOP_CENTER,\n  TOP_RIGHT,\n  TOP_LEFT,\n  BOTTOM_CENTER,\n  BOTTOM_RIGHT,\n  BOTTOM_LEFT,\n  LEFT_CENTER,\n  LEFT_TOP,\n  LEFT_BOTTOM,\n}\n\nconst POSITION_RELATIVE = 'relative';\nconst POSITION_ABSOLUTE = 'absolute';\nconst POSITION_FIXED = 'fixed';\n\nconst OVERFLOW_SCROLL = 'scroll';\nconst OVERFLOW_AUTO = 'auto';\n\nexport class Popover {\n  private _scroll: Subject<void>;\n\n  constructor(private element: any) {\n    // Browsers don't agree with what to do if some of these are not specified, so we set them all to be safe.\n    element.style.position = POSITION_ABSOLUTE;\n    element.style.top = 0;\n    element.style.bottom = 'auto';\n    element.style.left = 0;\n    element.style.right = 'auto';\n  }\n\n  // TODO: need a way to account for parameters that change dynamically (positioning).\n  public anchor(\n    anchor: any,\n    anchorAlign: Point,\n    popoverAlign: Point,\n    { offsetX = 0, offsetY = 0, useAnchorParent = false }: PopoverOptions = {}\n  ): Observable<any> {\n    // TODO: we are assuming here that the popover is inside or next to the anchor.\n    // We'd need to go up the popover tree too otherwise\n\n    this.addScrollEventListeners(anchor);\n    if (useAnchorParent) {\n      anchor = anchor.parentNode;\n    }\n    // explicitly override anchor's style to static\n    anchor.style.position = 'static';\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const popoverRect = this.element.getBoundingClientRect();\n\n    // position of left top corner of anchor + the offset\n    let leftDiff: number = anchorRect.left - popoverRect.left + offsetX;\n    let topDiff: number = anchorRect.top - popoverRect.top + offsetY;\n\n    // first, adjust positioning based on anchor's align point\n    switch (anchorAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n        break;\n      case Point.TOP_CENTER:\n        leftDiff += anchorRect.width / 2;\n        break;\n      case Point.TOP_RIGHT:\n        leftDiff += anchorRect.width;\n        break;\n      case Point.RIGHT_TOP:\n        leftDiff += anchorRect.width;\n        break;\n      case Point.LEFT_BOTTOM:\n        topDiff += anchorRect.height;\n        break;\n      case Point.BOTTOM_LEFT:\n        topDiff += anchorRect.height;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width / 2;\n        break;\n      case Point.BOTTOM_RIGHT:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width;\n        break;\n      case Point.RIGHT_BOTTOM:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff += anchorRect.height / 2;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff += anchorRect.height / 2;\n        leftDiff += anchorRect.width;\n        break;\n      default:\n    }\n\n    // second, adjust positioning based on popover's align point\n    switch (popoverAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n        break;\n      case Point.TOP_CENTER:\n        leftDiff -= popoverRect.width / 2;\n        break;\n      case Point.TOP_RIGHT:\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.RIGHT_TOP:\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.LEFT_BOTTOM:\n        topDiff -= popoverRect.height;\n        break;\n      case Point.BOTTOM_LEFT:\n        topDiff -= popoverRect.height;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width / 2;\n        break;\n      case Point.BOTTOM_RIGHT:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.RIGHT_BOTTOM:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff -= popoverRect.height / 2;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff -= popoverRect.height / 2;\n        leftDiff -= popoverRect.width;\n        break;\n      default:\n    }\n\n    // Third, adjust with popover's margins based on the two align points.\n    // Here, we make an assumption that popover is primarily positioned outside the\n    // anchor with minor offset. Without this assumption, it's impossible to apply\n    // the popover's margins in a predictable way. For example, assume that a popover\n    // and its anchor are exactly the same size. if a popover is positioned inside the\n    // anchor (which is technically possible), then it becomes impossible to know what to do\n    // if the popover has a non-zero margin value all around (because applying the margin in\n    // all four directions will result in no margin visually, which isn't what we want).\n    // Therefore, our logic makes assumptions about margins of interest given the points,\n    // and only covers the cases where popover is outside the anchor.\n\n    const popoverComputedStyle = getComputedStyle(this.element);\n    const marginLeft = parseInt(popoverComputedStyle.marginLeft, 10);\n    const marginRight = parseInt(popoverComputedStyle.marginRight, 10);\n    const marginTop = parseInt(popoverComputedStyle.marginTop, 10);\n    const marginBottom = parseInt(popoverComputedStyle.marginBottom, 10);\n\n    switch (anchorAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n      case Point.TOP_RIGHT:\n      case Point.RIGHT_TOP:\n        if (popoverAlign === Point.BOTTOM_RIGHT || popoverAlign === Point.RIGHT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff -= marginRight;\n        }\n        if (popoverAlign === Point.BOTTOM_LEFT || popoverAlign === Point.LEFT_BOTTOM) {\n          topDiff -= marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_LEFT || popoverAlign === Point.LEFT_TOP) {\n          topDiff += marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_RIGHT || popoverAlign === Point.RIGHT_TOP) {\n          topDiff += marginTop;\n          leftDiff -= marginRight;\n        }\n        break;\n      case Point.LEFT_BOTTOM:\n      case Point.BOTTOM_LEFT:\n      case Point.BOTTOM_RIGHT:\n      case Point.RIGHT_BOTTOM:\n        if (popoverAlign === Point.BOTTOM_LEFT || popoverAlign === Point.LEFT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.BOTTOM_RIGHT || popoverAlign === Point.RIGHT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff -= marginRight;\n        }\n        if (popoverAlign === Point.TOP_LEFT || popoverAlign === Point.LEFT_TOP) {\n          topDiff += marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_RIGHT || popoverAlign === Point.RIGHT_TOP) {\n          topDiff += marginTop;\n          leftDiff -= marginRight;\n        }\n        break;\n      case Point.TOP_CENTER:\n        topDiff -= marginBottom;\n        leftDiff += marginLeft;\n        leftDiff -= marginRight;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff += marginTop;\n        leftDiff += marginLeft;\n        leftDiff -= marginRight;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff += marginTop;\n        topDiff -= marginBottom;\n        leftDiff -= marginRight;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff += marginTop;\n        topDiff -= marginBottom;\n        leftDiff += marginLeft;\n        break;\n      default:\n    }\n\n    this.element.style.transform = `translateX(${Math.round(leftDiff)}px) translateY(${Math.round(topDiff)}px)`;\n    return this._scroll.asObservable();\n  }\n\n  public release() {\n    this.element.style.transform = '';\n    this.removeScrollEventListeners();\n  }\n\n  private isPositioned(container: any) {\n    const position = getComputedStyle(container).position;\n    return position === POSITION_RELATIVE || position === POSITION_ABSOLUTE || position === POSITION_FIXED;\n  }\n\n  /*\n   * Containers up to the first positioned one will have an event on scroll\n   */\n\n  private scrollableElements: HTMLElement[] = [];\n\n  private emitScrollEvent() {\n    this._scroll.next();\n  }\n\n  private boundOnScrollListener: any = this.emitScrollEvent.bind(this);\n\n  private addScrollEventListeners(e: any) {\n    this._scroll = new Subject<void>();\n    const anchor: any = e;\n    let current: any = e;\n    while (current && current !== document) {\n      if (this.scrolls(current)) {\n        current.addEventListener('scroll', this.boundOnScrollListener);\n        this.scrollableElements.push(current);\n      }\n      if (current !== anchor && this.isPositioned(current)) {\n        break;\n      }\n      current = current.parentNode;\n    }\n  }\n\n  private removeScrollEventListeners() {\n    for (const elem of this.scrollableElements) {\n      elem.removeEventListener('scroll', this.boundOnScrollListener);\n    }\n    this.scrollableElements.length = 0;\n    if (this._scroll) {\n      this._scroll.complete();\n      delete this._scroll;\n    }\n  }\n\n  private scrolls(container: any): boolean {\n    const computedStyles = getComputedStyle(container);\n    return (\n      computedStyles.overflowX === OVERFLOW_SCROLL ||\n      computedStyles.overflowX === OVERFLOW_AUTO ||\n      computedStyles.overflowY === OVERFLOW_SCROLL ||\n      computedStyles.overflowY === OVERFLOW_AUTO\n    );\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterViewChecked,\n  ElementRef,\n  HostBinding,\n  Injectable,\n  Injector,\n  OnDestroy,\n  Renderer2,\n  SkipSelf,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\nimport { Point, Popover } from './popover';\nimport { PopoverOptions } from './popover-options.interface';\n\n// Literally any annotation would work here, but writing our own @HoneyBadger annotation feels overkill.\n@Injectable()\nexport abstract class AbstractPopover implements AfterViewChecked, OnDestroy {\n  constructor(injector: Injector, @SkipSelf() protected parentHost: ElementRef) {\n    this.el = injector.get(ElementRef);\n    this.toggleService = injector.get(ClrPopoverToggleService);\n    this.renderer = injector.get(Renderer2);\n    // Default anchor is the parent host\n    this.anchorElem = parentHost.nativeElement;\n\n    this.popoverInstance = new Popover(this.el.nativeElement);\n    this.subscription = this.toggleService.openChange.subscribe(change => {\n      if (change) {\n        this.anchor();\n        this.attachESCListener();\n      } else {\n        this.release();\n        this.detachESCListener();\n      }\n    });\n    if (this.toggleService.open) {\n      this.anchor();\n      this.attachESCListener();\n    }\n  }\n\n  protected el: ElementRef;\n  protected toggleService: ClrPopoverToggleService;\n  protected renderer: Renderer2;\n\n  private popoverInstance: Popover;\n  private subscription: Subscription;\n\n  private updateAnchor = false;\n\n  protected anchorElem: any;\n  protected anchorPoint: Point;\n  protected popoverPoint: Point;\n  protected popoverOptions: PopoverOptions = {};\n\n  protected ignoredElement: any;\n\n  protected anchor() {\n    this.updateAnchor = true;\n    // Ugh\n    this.ignore = this.toggleService.originalEvent;\n  }\n\n  protected release() {\n    this.detachOutsideClickListener();\n    this.popoverInstance.release();\n  }\n\n  ngAfterViewChecked() {\n    if (this.updateAnchor) {\n      this.updateAnchor = false;\n      this.popoverInstance\n        .anchor(this.anchorElem, this.anchorPoint, this.popoverPoint, this.popoverOptions)\n        .subscribe(() => {\n          // if a scroll event is detected, close the popover\n          this.toggleService.open = false;\n        });\n      this.attachOutsideClickListener();\n    }\n  }\n\n  ngOnDestroy() {\n    this.release();\n    this.detachESCListener();\n    this.subscription.unsubscribe();\n  }\n\n  /*\n     * Fallback to hide when *clrIfOpen is not being used\n     */\n\n  @HostBinding('class.is-off-screen')\n  get isOffScreen() {\n    return this.toggleService.open ? false : true;\n  }\n\n  /*\n     * Until https://github.com/angular/angular/issues/8785 is supported, we don't have any way to instantiate\n     * a separate directive on the host. So let's do dirty but performant for now.\n     */\n  public closeOnOutsideClick = false;\n  private hostClickListener: () => void;\n  private documentClickListener: () => void;\n  private documentESCListener: () => void;\n  private ignoredElementClickListener: () => void;\n  private ignore: any;\n\n  private attachESCListener(): void {\n    if (!this.popoverOptions.ignoreGlobalESCListener) {\n      this.documentESCListener = this.renderer.listen('document', 'keydown', event => {\n        if (event && event.key) {\n          if (event.key === 'Escape' || event.key === 'Esc') {\n            this.toggleService.open = false;\n          }\n        }\n      });\n    }\n  }\n\n  private detachESCListener(): void {\n    if (this.documentESCListener) {\n      this.documentESCListener();\n      delete this.documentESCListener;\n    }\n  }\n\n  private attachOutsideClickListener() {\n    if (this.closeOnOutsideClick) {\n      this.hostClickListener = this.renderer.listen(this.el.nativeElement, 'click', event => (this.ignore = event));\n      if (this.ignoredElement) {\n        this.ignoredElementClickListener = this.renderer.listen(\n          this.ignoredElement,\n          'click',\n          event => (this.ignore = event)\n        );\n      }\n      this.documentClickListener = this.renderer.listen('document', 'click', event => {\n        if (event === this.ignore) {\n          delete this.ignore;\n        } else {\n          this.toggleService.open = false;\n        }\n      });\n    }\n  }\n\n  private detachOutsideClickListener() {\n    if (this.closeOnOutsideClick) {\n      if (this.hostClickListener) {\n        this.hostClickListener();\n        delete this.hostClickListener;\n      }\n      if (this.ignoredElementClickListener) {\n        this.ignoredElementClickListener();\n        delete this.ignoredElementClickListener;\n      }\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        delete this.documentClickListener;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  Optional,\n  QueryList,\n  SkipSelf,\n} from '@angular/core';\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { Point } from '../common/popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { DropdownFocusHandler } from './providers/dropdown-focus-handler.service';\nimport { FocusableItem } from '../../utils/focus/focusable-item/focusable-item';\n\n@Component({\n  selector: 'clr-dropdown-menu',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.dropdown-menu]': 'true',\n    '[attr.role]': '\"menu\"',\n  },\n})\nexport class ClrDropdownMenu extends AbstractPopover implements AfterContentInit, OnDestroy {\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef<HTMLElement>,\n    @Optional()\n    @SkipSelf()\n    nested: ClrDropdownMenu,\n    focusHandler: DropdownFocusHandler\n  ) {\n    if (!parentHost) {\n      throw new Error('clr-dropdown-menu should only be used inside of a clr-dropdown');\n    }\n    super(injector, parentHost);\n    if (!nested) {\n      // Default positioning for normal dropdown is bottom-left\n      this.anchorPoint = Point.BOTTOM_LEFT;\n      this.popoverPoint = Point.LEFT_TOP;\n    } else {\n      // Default positioning for nested dropdown is right-top\n      this.anchorPoint = Point.RIGHT_TOP;\n      this.popoverPoint = Point.LEFT_TOP;\n    }\n    this.popoverOptions.allowMultipleOpen = true;\n    this.popoverOptions.ignoreGlobalESCListener = true;\n    this.closeOnOutsideClick = true;\n    this.focusHandler = focusHandler;\n  }\n\n  @Input('clrPosition')\n  set position(position: string) {\n    // set the popover values based on menu position\n    switch (position) {\n      case 'top-right':\n        this.anchorPoint = Point.TOP_RIGHT;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      case 'top-left':\n        this.anchorPoint = Point.TOP_LEFT;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'bottom-right':\n        this.anchorPoint = Point.BOTTOM_RIGHT;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'bottom-left':\n        this.anchorPoint = Point.BOTTOM_LEFT;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'right-top':\n        this.anchorPoint = Point.RIGHT_TOP;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'right-bottom':\n        this.anchorPoint = Point.RIGHT_BOTTOM;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'left-top':\n        this.anchorPoint = Point.LEFT_TOP;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'left-bottom':\n        this.anchorPoint = Point.LEFT_BOTTOM;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      default:\n        this.anchorPoint = Point.BOTTOM_LEFT;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n    }\n  }\n\n  private focusHandler: DropdownFocusHandler;\n  @ContentChildren(FocusableItem) items: QueryList<FocusableItem>;\n\n  ngAfterContentInit() {\n    this.focusHandler.container = this.el.nativeElement;\n    this.items.changes.subscribe(() => this.focusHandler.addChildren(this.items.toArray()));\n    // I saw this on GitHub as a solution to avoid code duplication because of missed QueryList changes\n    this.items.notifyOnChanges();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.focusHandler.resetChildren();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostListener } from '@angular/core';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\nimport { ClrDropdown } from './dropdown';\nimport { DropdownFocusHandler } from './providers/dropdown-focus-handler.service';\n\n@Directive({\n  // We support both selectors for legacy reasons\n  selector: '[clrDropdownTrigger],[clrDropdownToggle]',\n  host: {\n    '[class.dropdown-toggle]': 'isRootLevelToggle',\n    '[class.dropdown-item]': '!isRootLevelToggle',\n    '[class.expandable]': '!isRootLevelToggle',\n    '[class.active]': 'active',\n    '[attr.aria-haspopup]': '\"menu\"',\n    '[attr.aria-expanded]': 'active',\n  },\n})\nexport class ClrDropdownTrigger {\n  public isRootLevelToggle: boolean = true;\n\n  constructor(\n    dropdown: ClrDropdown,\n    private toggleService: ClrPopoverToggleService,\n    el: ElementRef<HTMLElement>,\n    focusHandler: DropdownFocusHandler\n  ) {\n    // if the containing dropdown has a parent, then this is not the root level one\n    if (dropdown.parent) {\n      this.isRootLevelToggle = false;\n    }\n    focusHandler.trigger = el.nativeElement;\n  }\n\n  get active(): boolean {\n    return this.toggleService.open;\n  }\n\n  @HostListener('click', ['$event'])\n  onDropdownTriggerClick(event: any): void {\n    this.toggleService.toggleWithEvent(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\n\nimport { ClrDropdown } from './dropdown';\nimport { ClrDropdownItem } from './dropdown-item';\nimport { ClrDropdownMenu } from './dropdown-menu';\nimport { ClrDropdownTrigger } from './dropdown-trigger';\n\nexport const CLR_DROPDOWN_DIRECTIVES: Type<any>[] = [ClrDropdown, ClrDropdownMenu, ClrDropdownTrigger, ClrDropdownItem];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_DROPDOWN_DIRECTIVES],\n  exports: [CLR_DROPDOWN_DIRECTIVES, ClrConditionalModule, ClrIconModule],\n})\nexport class ClrDropdownModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// @TODO Make this an enum\nexport const ALERT_TYPES: string[] = ['info', 'warning', 'danger', 'success'];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { AlertInfoObject } from '../utils/alert-info-object';\nimport { ALERT_TYPES } from '../utils/alert-types';\nimport { ClrCommonStringsService } from '../../../utils/i18n/common-strings.service';\n\n@Injectable()\nexport class AlertIconAndTypesService {\n  constructor(private commonStrings: ClrCommonStringsService) {}\n\n  private defaultIconShape = 'info-circle';\n  private _alertIconShape = '';\n  private _alertType = 'info';\n\n  get alertType(): string {\n    return this._alertType;\n  }\n  set alertType(val: string) {\n    if (ALERT_TYPES.indexOf(val) > -1) {\n      this._alertType = val;\n    }\n  }\n\n  get alertIconShape(): string {\n    if ('' === this._alertIconShape) {\n      return this.iconInfoFromType(this._alertType).shape;\n    }\n    return this._alertIconShape;\n  }\n  set alertIconShape(val: string) {\n    if (!val) {\n      this._alertIconShape = '';\n    } else if (val !== this._alertIconShape) {\n      this._alertIconShape = val;\n    }\n  }\n\n  get alertIconTitle(): string {\n    return this.iconInfoFromType(this._alertType).title;\n  }\n\n  public iconInfoFromType(type: string): AlertInfoObject {\n    const returnObj = { shape: '', cssClass: '', title: '' };\n\n    switch (type) {\n      case 'warning':\n        returnObj.shape = 'exclamation-triangle';\n        returnObj.cssClass = 'alert-warning';\n        returnObj.title = this.commonStrings.keys.warning;\n        break;\n      case 'danger':\n        returnObj.shape = 'exclamation-circle';\n        returnObj.cssClass = 'alert-danger';\n        returnObj.title = this.commonStrings.keys.danger;\n        break;\n      case 'success':\n        returnObj.shape = 'check-circle';\n        returnObj.cssClass = 'alert-success';\n        returnObj.title = this.commonStrings.keys.success;\n        break;\n      default:\n        returnObj.shape = this.defaultIconShape;\n        returnObj.cssClass = 'alert-info';\n        returnObj.title = this.commonStrings.keys.info;\n        break;\n    }\n\n    return returnObj;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, QueryList } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { ClrAlert } from '../alert';\n\n@Injectable()\nexport class MultiAlertService {\n  private subscription: Subscription;\n\n  private allAlerts: QueryList<ClrAlert>;\n\n  /**\n   * The Observable that lets other classes subscribe to changes\n   */\n  private _change = new Subject<number>();\n  public get changes(): Observable<number> {\n    return this._change.asObservable();\n  }\n\n  private _current: number;\n\n  get current() {\n    return this._current;\n  }\n  set current(index: number) {\n    if (index !== this._current) {\n      this._current = index;\n      this._change.next(index);\n    }\n  }\n\n  get activeAlerts() {\n    return this.allAlerts && this.allAlerts.filter(alert => !alert._closed);\n  }\n\n  get currentAlert() {\n    return this.activeAlerts && this.activeAlerts[this.current];\n  }\n\n  set currentAlert(alert: ClrAlert) {\n    this.current = this.activeAlerts.indexOf(alert);\n  }\n\n  get count() {\n    return (this.activeAlerts && this.activeAlerts.length) || 0;\n  }\n\n  manage(alerts: QueryList<ClrAlert>) {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.allAlerts = alerts;\n    // After receiving alerts' QueryList,\n    // we are picking index 0 as current by default if a user hasn't any index\n    this.current = typeof this._current === 'number' ? this._current : 0;\n    // we have to also broadcast that initial index\n    this._change.next(this.current);\n\n    this.subscription = this.allAlerts.changes.subscribe(() => {\n      if (this.current >= this.allAlerts.length) {\n        this.current = Math.max(0, this.allAlerts.length - 1);\n      }\n    });\n  }\n\n  next() {\n    this.current = this.current === this.activeAlerts.length - 1 ? 0 : this.current + 1;\n  }\n\n  previous() {\n    if (this.activeAlerts.length === 0) {\n      return;\n    }\n    this.current = this.current === 0 ? this.activeAlerts.length - 1 : this.current - 1;\n  }\n\n  close() {\n    this.previous();\n  }\n\n  destroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * @remark\n * This directive is used only of selectin alert text.\n */\n@Directive({\n  selector: '.alert-text',\n})\nexport class ClrAlertText {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  ChangeDetectorRef,\n  ElementRef,\n  Component,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  AfterViewInit,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\n// providers\nimport { AlertIconAndTypesService } from './providers/icon-and-types.service';\nimport { MultiAlertService } from './providers/multi-alert.service';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAriaLiveService, ClrAriaLivePoliteness } from '../../utils/a11y/aria-live.service';\nimport { ClrAlertText } from './alert-text';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'clr-alert',\n  providers: [AlertIconAndTypesService, ClrAriaLiveService],\n  templateUrl: './alert.html',\n  styles: [':host { display: block; }'],\n})\nexport class ClrAlert implements OnInit, OnDestroy, AfterViewInit {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private iconService: AlertIconAndTypesService,\n    private cdr: ChangeDetectorRef,\n    @Optional() private multiAlertService: MultiAlertService,\n    private commonStrings: ClrCommonStringsService,\n    private ariaLiveService: ClrAriaLiveService\n  ) {}\n\n  ngOnInit() {\n    if (this.multiAlertService) {\n      this.subscriptions.push(\n        this.multiAlertService.changes.subscribe(() => {\n          this.hidden = this.multiAlertService.currentAlert !== this;\n        })\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  ngAfterViewInit() {\n    // Announce the first time the alert is render if it is not hidden\n    this.announceAriaLiveMessage();\n  }\n\n  @Input('clrAlertSizeSmall') isSmall: boolean = false;\n  @Input('clrAlertClosable') closable: boolean = true;\n  @Input('clrAlertAppLevel') isAppLevel: boolean = false;\n\n  // Aria\n  @Input() clrCloseButtonAriaLabel: string = this.commonStrings.keys.alertCloseButtonAriaLabel;\n\n  @Input('clrAlertClosed') _closed: boolean = false;\n  @Output('clrAlertClosedChange') _closedChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  @Input('clrAlertType')\n  set alertType(val: string) {\n    this.iconService.alertType = val;\n  }\n\n  get alertType(): string {\n    return this.iconService.alertType;\n  }\n\n  /**\n   * clrPolite is not used in the code. Is here just to provide\n   * code complition and also mark component what type AriaLive\n   * will be used.\n   */\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrPolite') polite: boolean = true;\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrAssertive') assertive: boolean;\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrOff') off: boolean;\n  /**\n   * There is an order on how the attributes will take effect.\n   * Assertive, Off, Polite.\n   *\n   * Polite is default if non is passed.\n   *\n   * In the case of setting all of them to true. Assertive will be used.\n   *\n   */\n  get ariaLive(): ClrAriaLivePoliteness {\n    if (isBooleanAttributeSet(this.assertive)) {\n      return ClrAriaLivePoliteness.assertive;\n    }\n    if (isBooleanAttributeSet(this.off)) {\n      return ClrAriaLivePoliteness.off;\n    }\n    return ClrAriaLivePoliteness.polite;\n  }\n\n  @Input('clrAlertIcon')\n  set alertIconShape(value: string) {\n    this.iconService.alertIconShape = value;\n  }\n\n  get alertClass(): string {\n    return this.iconService.iconInfoFromType(this.iconService.alertType).cssClass;\n  }\n\n  @ContentChildren(ClrAlertText, { descendants: true, read: ElementRef })\n  alertTexts: QueryList<ElementRef>;\n  /**\n   * This handle the find what content to be annonced withing the aria-live container\n   * alerts that are hidden will be ignored.\n   *\n   * @remark\n   * We depend on the ClrAlertText Directive to find and parse the alert messages.\n   * Also this require the HTML markup for the alert to be\n   * ```html\n   * <div class=\"alert\" role=\"alert\">\n   *    <div class=\"alert-items\">\n   *        <div class=\"alert-item static\">\n   *            <span class=\"alert-text\">\n   *                 ...\n   *            </span>\n   *        </div>\n   *    </div>\n   * </div>\n   * ```\n   */\n  private announceAriaLiveMessage(): void {\n    if (!this.hidden && this.alertTexts.length) {\n      const message = this.alertTexts.map(alertText => alertText.nativeElement.textContent).join(' ');\n      // Don't call announce when there is nothing to say\n      if (message) {\n        this.ariaLiveService.announce(message, this.ariaLive);\n      }\n    }\n  }\n\n  private _hidden: boolean;\n\n  set hidden(value: boolean) {\n    if (value !== this._hidden) {\n      this._hidden = value;\n      this.cdr.detectChanges();\n    }\n  }\n\n  get hidden() {\n    return this._hidden;\n  }\n\n  close(): void {\n    if (!this.closable) {\n      return;\n    }\n    this._closed = true;\n    if (this.multiAlertService) {\n      this.multiAlertService.close();\n    }\n    this._closedChanged.emit(true);\n  }\n\n  open(): void {\n    this._closed = false;\n    this._closedChanged.emit(false);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\nimport { AlertIconAndTypesService } from './providers/icon-and-types.service';\n\n@Component({\n  selector: 'clr-alert-item',\n  template: `\n        <div class=\"alert-icon-wrapper\">\n            <clr-icon class=\"alert-icon\" \n              [attr.shape]=\"iconService.alertIconShape\" \n              [attr.title]=\"iconService.alertIconTitle\"></clr-icon>\n        </div>\n        <ng-content></ng-content>\n    `,\n  host: { class: 'alert-item' },\n})\nexport class ClrAlertItem {\n  constructor(public iconService: AlertIconAndTypesService) {}\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { ClrAlert } from './alert';\nimport { MultiAlertService } from './providers/multi-alert.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'clr-alerts',\n  templateUrl: './alerts.html',\n  providers: [MultiAlertService],\n  host: {\n    '[class.alerts]': 'true',\n    '[class.alert-danger]': \"this.currentAlertType == 'danger'\",\n    '[class.alert-info]': \"this.currentAlertType == 'info'\",\n    '[class.alert-success]': \"this.currentAlertType == 'success'\",\n    '[class.alert-warning]': \"this.currentAlertType == 'warning'\",\n  },\n  styles: [':host { display: block }'],\n})\nexport class ClrAlerts implements AfterContentInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  @ContentChildren(ClrAlert)\n  set allAlerts(value: QueryList<ClrAlert>) {\n    this.multiAlertService.manage(value); // provide alerts\n  }\n\n  /**\n   * Input/Output to support two way binding on current alert index\n   */\n  @Input('clrCurrentAlertIndex')\n  public set _inputCurrentIndex(index: number) {\n    if (Number.isInteger(index) && index >= 0) {\n      this.multiAlertService.current = index;\n    }\n  }\n\n  @Output('clrCurrentAlertIndexChange') public currentAlertIndexChange = new EventEmitter<number>(false);\n\n  set currentAlertIndex(index: number) {\n    this.multiAlertService.current = index;\n  }\n  get currentAlertIndex() {\n    return this.multiAlertService.current;\n  }\n\n  /**\n   * Input/Output to support two way binding on current alert instance\n   */\n  @Input('clrCurrentAlert')\n  set currentAlert(alert: ClrAlert) {\n    if (alert) {\n      this.multiAlertService.currentAlert = alert;\n    }\n  }\n  get currentAlert() {\n    return this.multiAlertService.currentAlert;\n  }\n  @Output('clrCurrentAlertChange') public currentAlertChange = new EventEmitter<ClrAlert>(false);\n\n  /**\n   * Ensure we are only dealing with alerts that have not been closed yet\n   */\n  get alerts() {\n    return this.allAlerts.filter(alert => {\n      return alert.hidden === false;\n    });\n  }\n\n  get currentAlertType(): string {\n    if (this.multiAlertService.currentAlert) {\n      return this.multiAlertService.currentAlert.alertType;\n    }\n    return '';\n  }\n\n  constructor(public multiAlertService: MultiAlertService) {}\n\n  ngAfterContentInit() {\n    this.subscriptions.push(\n      this.multiAlertService.changes.subscribe(index => {\n        this.currentAlertIndexChange.next(index);\n        this.currentAlertChange.next(this.multiAlertService.currentAlert);\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.multiAlertService.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrAlert } from './alert';\nimport { MultiAlertService } from './providers/multi-alert.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-alerts-pager',\n  templateUrl: './alerts-pager.html',\n  host: { '[class.alerts-pager]': 'true' },\n})\nexport class ClrAlertsPager implements OnInit, OnDestroy {\n  private multiAlertServiceChanges: Subscription;\n\n  /**\n   * Input/Output to support two way binding on current alert instance\n   */\n  @Input('clrCurrentAlert')\n  set currentAlert(alert: ClrAlert) {\n    if (alert) {\n      this.multiAlertService.currentAlert = alert;\n    }\n  }\n  get currentAlert() {\n    return this.multiAlertService.currentAlert;\n  }\n\n  @Output('clrCurrentAlertChange') currentAlertChange = new EventEmitter<ClrAlert>(false);\n\n  /**\n   * Input/Output to support two way binding on current alert index\n   */\n  @Input('clrCurrentAlertIndex')\n  set currentAlertIndex(index: number) {\n    this.multiAlertService.current = index;\n  }\n  get currentAlertIndex() {\n    return this.multiAlertService.current;\n  }\n\n  @Output('clrCurrentAlertIndexChange') currentAlertIndexChange = new EventEmitter<number>();\n\n  constructor(public multiAlertService: MultiAlertService, public commonStrings: ClrCommonStringsService) {}\n\n  ngOnInit() {\n    this.multiAlertServiceChanges = this.multiAlertService.changes.subscribe(index => {\n      this.currentAlertIndexChange.emit(index);\n      this.currentAlertChange.emit(this.multiAlertService.activeAlerts[index]);\n    });\n  }\n\n  pageUp() {\n    this.multiAlertService.next();\n  }\n\n  pageDown() {\n    this.multiAlertService.previous();\n  }\n\n  ngOnDestroy() {\n    this.multiAlertServiceChanges.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrDropdownModule } from '../../popover/dropdown/dropdown.module';\n\nimport { ClrAlert } from './alert';\nimport { ClrAlertItem } from './alert-item';\nimport { ClrAlerts } from './alerts';\nimport { ClrAlertsPager } from './alerts-pager';\nimport { ClrAlertText } from './alert-text';\n\nexport const CLR_ALERT_DIRECTIVES: Type<any>[] = [ClrAlert, ClrAlertItem, ClrAlerts, ClrAlertsPager, ClrAlertText];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrDropdownModule],\n  declarations: [CLR_ALERT_DIRECTIVES],\n  exports: [CLR_ALERT_DIRECTIVES],\n})\nexport class ClrAlertModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { ClrAlertModule } from './alert/alert.module';\n\n@NgModule({ exports: [ClrAlertModule] })\nexport class ClrEmphasisModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class ResponsiveNavCodes {\n  public static NAV_LEVEL_1: number = 1;\n  public static NAV_LEVEL_2: number = 2;\n  public static NAV_CLOSE_ALL: string = 'NAV_CLOSE_ALL';\n  public static NAV_OPEN: string = 'NAV_OPEN';\n  public static NAV_CLOSE: string = 'NAV_CLOSE';\n  public static NAV_TOGGLE: string = 'NAV_TOGGLE';\n  public static NAV_CLASS_HAMBURGER_MENU: string = 'open-hamburger-menu';\n  public static NAV_CLASS_OVERFLOW_MENU: string = 'open-overflow-menu';\n  public static NAV_CLASS_TRIGGER_1: string = 'header-hamburger-trigger';\n  public static NAV_CLASS_TRIGGER_2: string = 'header-overflow-trigger';\n  public static NAV_CLASS_LEVEL_1: string = 'clr-nav-level-1';\n  public static NAV_CLASS_LEVEL_2: string = 'clr-nav-level-2';\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class ResponsiveNavControlMessage {\n  constructor(private _controlCode: string, private _navLevel: number) {}\n\n  get controlCode(): string {\n    return this._controlCode;\n  }\n\n  get navLevel(): number {\n    return this._navLevel;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReplaySubject, Subject } from 'rxjs';\n\nimport { ResponsiveNavCodes } from '../responsive-nav-codes';\nimport { ResponsiveNavControlMessage } from '../responsive-nav-control-message';\n\n@Injectable({ providedIn: 'root' })\nexport class ResponsiveNavigationService {\n  public responsiveNavList: number[] = [];\n  private registerNavSubject = new ReplaySubject<number[]>();\n  private controlNavSubject = new Subject<ResponsiveNavControlMessage>();\n\n  get registeredNavs(): Observable<number[]> {\n    return this.registerNavSubject.asObservable();\n  }\n\n  get navControl(): Observable<ResponsiveNavControlMessage> {\n    return this.controlNavSubject.asObservable();\n  }\n\n  constructor() {\n    this.closeAllNavs(); // We start with all navs closed\n  }\n\n  registerNav(navLevel: number): void {\n    if (!navLevel || this.isNavRegistered(navLevel)) {\n      return;\n    }\n    this.responsiveNavList.push(navLevel);\n    this.registerNavSubject.next(this.responsiveNavList);\n  }\n\n  isNavRegistered(navLevel: number): boolean {\n    if (this.responsiveNavList.indexOf(navLevel) > -1) {\n      console.error('Multiple clr-nav-level ' + navLevel + ' attributes found. Please make sure that only one exists');\n      return true;\n    }\n    return false;\n  }\n\n  unregisterNav(navLevel: number) {\n    const index = this.responsiveNavList.indexOf(navLevel);\n    if (index > -1) {\n      this.responsiveNavList.splice(index, 1);\n      this.registerNavSubject.next(this.responsiveNavList);\n    }\n  }\n\n  sendControlMessage(controlCode: string, navLevel: number) {\n    const message: ResponsiveNavControlMessage = new ResponsiveNavControlMessage(controlCode, navLevel);\n    this.controlNavSubject.next(message);\n  }\n\n  closeAllNavs() {\n    const message: ResponsiveNavControlMessage = new ResponsiveNavControlMessage(\n      ResponsiveNavCodes.NAV_CLOSE_ALL,\n      -999\n    );\n    this.controlNavSubject.next(message);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ResponsiveNavigationService } from '../nav/providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from '../nav/responsive-nav-codes';\nimport { ResponsiveNavControlMessage } from '../nav/responsive-nav-control-message';\n\n@Directive({ selector: 'clr-main-container', host: { '[class.main-container]': 'true' } })\nexport class ClrMainContainer implements OnDestroy, OnInit {\n  private _subscription: Subscription;\n  private _classList: DOMTokenList;\n\n  constructor(private elRef: ElementRef, private responsiveNavService: ResponsiveNavigationService) {}\n\n  ngOnInit() {\n    this._classList = this.elRef.nativeElement.classList;\n    this._subscription = this.responsiveNavService.navControl.subscribe({\n      next: (message: ResponsiveNavControlMessage) => {\n        this.processMessage(message);\n      },\n    });\n  }\n\n  processMessage(message: ResponsiveNavControlMessage): void {\n    let navClass: string = ResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU;\n    if (message.controlCode === ResponsiveNavCodes.NAV_CLOSE_ALL) {\n      this._classList.remove(ResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU);\n      this._classList.remove(ResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU);\n    } else if (message.navLevel === ResponsiveNavCodes.NAV_LEVEL_1) {\n      this.controlNav(message.controlCode, navClass);\n    } else if (message.navLevel === ResponsiveNavCodes.NAV_LEVEL_2) {\n      navClass = ResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU;\n      this.controlNav(message.controlCode, navClass);\n    }\n  }\n\n  controlNav(controlCode: string, navClass: string): void {\n    if (controlCode === ResponsiveNavCodes.NAV_OPEN) {\n      this._classList.add(navClass);\n    } else if (controlCode === ResponsiveNavCodes.NAV_CLOSE) {\n      this._classList.remove(navClass);\n    } else if (controlCode === ResponsiveNavCodes.NAV_TOGGLE) {\n      this._classList.toggle(navClass);\n    }\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrMainContainer } from './main-container';\n\nexport const CLR_LAYOUT_DIRECTIVES: Type<any>[] = [ClrMainContainer];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule],\n  declarations: [CLR_LAYOUT_DIRECTIVES],\n  exports: [CLR_LAYOUT_DIRECTIVES],\n})\nexport class ClrMainContainerModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-main-container' })\nexport class MainContainerWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { ResponsiveNavigationService } from '../providers/responsive-navigation.service';\nimport { MainContainerWillyWonka } from './main-container-willy-wonka';\n\n@Directive({ selector: 'clr-header' })\nexport class NavDetectionOompaLoompa extends OompaLoompa {\n  private responsiveNavService: ResponsiveNavigationService;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: MainContainerWillyWonka,\n    responsiveNavService: ResponsiveNavigationService\n  ) {\n    if (!willyWonka) {\n      throw new Error('clr-header should only be used inside of a clr-main-container');\n    }\n    super(cdr, willyWonka);\n    this.responsiveNavService = responsiveNavService;\n  }\n\n  // NavDetectionOompaLoompa is the addition of the nav levels\n  // Since we support 2 levels, the possibilities are 0, 1 or 3 (1 + 2)\n  get flavor() {\n    return this.responsiveNavService.responsiveNavList.reduce((sum, navLevel) => sum + navLevel, 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ResponsiveNavigationService } from './providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from './responsive-nav-codes';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-header',\n  template: `\n        <button\n            type=\"button\"\n            *ngIf=\"isNavLevel1OnPage\"\n            class=\"header-hamburger-trigger\"\n            [attr.aria-label]=\"(openNavLevel !== responsiveNavCodes.NAV_LEVEL_1) ? commonStrings.keys.open : commonStrings.keys.close\"\n            (click)=\"toggleNav(responsiveNavCodes.NAV_LEVEL_1)\">\n            <span></span>\n        </button>\n        <ng-content></ng-content>\n        <button\n            type=\"button\"\n            *ngIf=\"isNavLevel2OnPage\"\n            class=\"header-overflow-trigger\"\n            [attr.aria-label]=\"(openNavLevel !== responsiveNavCodes.NAV_LEVEL_2) ? commonStrings.keys.open : commonStrings.keys.close\"\n            (click)=\"toggleNav(responsiveNavCodes.NAV_LEVEL_2)\">\n            <span></span>\n        </button>\n        <div class=\"header-backdrop\" (click)=\"closeOpenNav()\"></div>\n    `,\n  host: { '[class.header]': 'true' },\n})\nexport class ClrHeader implements OnDestroy {\n  isNavLevel1OnPage = false;\n  isNavLevel2OnPage = false;\n  openNavLevel: number = null;\n  responsiveNavCodes = ResponsiveNavCodes;\n  private _subscription: Subscription;\n\n  constructor(\n    private responsiveNavService: ResponsiveNavigationService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._subscription = this.responsiveNavService.registeredNavs.subscribe({\n      next: (navLevelList: number[]) => {\n        this.initializeNavTriggers(navLevelList);\n      },\n    });\n  }\n\n  // reset triggers. handles cases when an application has different nav levels on different pages.\n  resetNavTriggers() {\n    this.isNavLevel1OnPage = false;\n    this.isNavLevel2OnPage = false;\n  }\n\n  // decides which triggers to show on the header\n  initializeNavTriggers(navList: number[]): void {\n    this.resetNavTriggers();\n    if (navList.length > 2) {\n      console.error('More than 2 Nav Levels detected.');\n      return;\n    }\n    navList.forEach(navLevel => {\n      if (navLevel === ResponsiveNavCodes.NAV_LEVEL_1) {\n        this.isNavLevel1OnPage = true;\n      } else if (navLevel === ResponsiveNavCodes.NAV_LEVEL_2) {\n        this.isNavLevel2OnPage = true;\n      }\n    });\n  }\n\n  // closes the nav that is open\n  closeOpenNav() {\n    this.responsiveNavService.closeAllNavs();\n  }\n\n  // toggles the nav that is open\n  toggleNav(navLevel: number) {\n    this.openNavLevel = this.openNavLevel === navLevel ? null : navLevel;\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_TOGGLE, navLevel);\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\n\nimport { ResponsiveNavigationService } from './providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from './responsive-nav-codes';\n\n@Directive({ selector: '[clr-nav-level]' })\nexport class ClrNavLevel implements OnInit {\n  @Input('clr-nav-level') _level: number;\n\n  constructor(private responsiveNavService: ResponsiveNavigationService, private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    if (this.level !== ResponsiveNavCodes.NAV_LEVEL_1 && this.level !== ResponsiveNavCodes.NAV_LEVEL_2) {\n      console.error('Nav Level can only be 1 or 2');\n      return;\n    }\n    this.responsiveNavService.registerNav(this.level);\n    this.addNavClass(this.level);\n  }\n\n  addNavClass(level: number) {\n    const navHostClassList = this.elementRef.nativeElement.classList;\n    if (level === ResponsiveNavCodes.NAV_LEVEL_1) {\n      navHostClassList.add(ResponsiveNavCodes.NAV_CLASS_LEVEL_1);\n    } else if (level === ResponsiveNavCodes.NAV_LEVEL_2) {\n      navHostClassList.add(ResponsiveNavCodes.NAV_CLASS_LEVEL_2);\n    }\n  }\n\n  get level(): number {\n    return this._level;\n  }\n\n  // getter to access the responsive navigation codes from the template\n  get responsiveNavCodes(): ResponsiveNavCodes {\n    return ResponsiveNavCodes;\n  }\n\n  open(): void {\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_OPEN, this.level);\n  }\n\n  close(): void {\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_CLOSE, this.level);\n  }\n\n  // TODO: Figure out whats the best way to do this. Possible methods\n  // 1. HostListener (current solution)\n  // 2. Directives on the .nav-link class. We discussed on moving away from class selectors but I forget the reason\n  // why\n  @HostListener('click', ['$event.target'])\n  onMouseClick(target: any) {\n    let current: any = target; // Get the element in the DOM on which the mouse was clicked\n    const navHost: any = this.elementRef.nativeElement; // Get the current nav native HTML element\n\n    // Start checking if current and navHost are equal.\n    // If not traverse to the parentNode and check again.\n    while (current) {\n      if (current === navHost) {\n        return;\n      } else if (current.classList.contains('nav-link')) {\n        this.close();\n        return;\n      }\n      current = current.parentNode;\n    }\n  }\n\n  ngOnDestroy() {\n    this.responsiveNavService.unregisterNav(this.level);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrDropdownModule } from '../../popover/dropdown/dropdown.module';\n\nimport { MainContainerWillyWonka } from './chocolate/main-container-willy-wonka';\nimport { NavDetectionOompaLoompa } from './chocolate/nav-detection-oompa-loompa';\nimport { ClrHeader } from './header';\nimport { ClrNavLevel } from './nav-level';\n\nexport const CLR_NAVIGATION_DIRECTIVES: Type<any>[] = [\n  ClrHeader,\n  ClrNavLevel,\n  NavDetectionOompaLoompa,\n  MainContainerWillyWonka,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrDropdownModule],\n  declarations: [CLR_NAVIGATION_DIRECTIVES],\n  exports: [CLR_NAVIGATION_DIRECTIVES],\n})\nexport class ClrNavigationModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  template: `\n      <ng-template>\n        <ng-content></ng-content>\n      </ng-template>\n    `,\n})\nexport class TemplateRefContainer {\n  @ViewChild(TemplateRef) template: TemplateRef<any>;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\nimport { TemplateRefContainer } from './template-ref-container';\n\nexport * from './template-ref-container';\n\nexport const TEMPLATE_REF_DIRECTIVES: Type<any>[] = [TemplateRefContainer];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TEMPLATE_REF_DIRECTIVES } from './index';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TEMPLATE_REF_DIRECTIVES],\n  entryComponents: [TEMPLATE_REF_DIRECTIVES],\n  exports: [TEMPLATE_REF_DIRECTIVES],\n})\nexport class ClrTemplateRefModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-tabs' })\nexport class TabsWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Inject, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { IF_ACTIVE_ID, IfActiveService } from '../../../utils/conditional/if-active.service';\n\nimport { TabsWillyWonka } from './tabs-willy-wonka';\n\n@Directive({ selector: '[clrTabLink], clr-tab-content' })\nexport class ActiveOompaLoompa extends OompaLoompa {\n  private ifActive: IfActiveService;\n  private id: number;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: TabsWillyWonka,\n    @Inject(IF_ACTIVE_ID) id: number,\n    ifActive: IfActiveService\n  ) {\n    if (!willyWonka) {\n      throw new Error('clrTabLink and clr-tab-content should only be used inside of a clr-tabs');\n    }\n    super(cdr, willyWonka);\n    this.ifActive = ifActive;\n    this.id = id;\n  }\n\n  get flavor() {\n    return this.ifActive.current === this.id;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\n\n// TODO: if we find more components that could use this, consider moving this to utils\n@Injectable()\nexport class AriaService {\n  public ariaLabelledBy: string;\n  public ariaControls: string;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum TabsLayout {\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical',\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, ViewContainerRef } from '@angular/core';\nimport { ClrTab } from '../tab';\nimport { TabsLayout } from '../enums/tabs-layout.enum';\n\n@Injectable()\nexport class TabsService {\n  private _children: ClrTab[] = [];\n\n  layout: TabsLayout = TabsLayout.HORIZONTAL;\n\n  register(tab: ClrTab) {\n    this._children.push(tab);\n  }\n\n  get children() {\n    return this._children;\n  }\n\n  get activeTab() {\n    return this.children.find((tab: ClrTab) => {\n      return tab.active;\n    });\n  }\n\n  get overflowTabs() {\n    if (this.layout === TabsLayout.VERTICAL) {\n      return [];\n    } else {\n      return this.children.filter((tab: ClrTab) => tab.tabLink.inOverflow === true);\n    }\n  }\n\n  unregister(tab: ClrTab) {\n    const index = this.children.indexOf(tab);\n    if (index > -1) {\n      this.children.splice(index, 1);\n    }\n  }\n\n  tabContentViewContainer: ViewContainerRef;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EmbeddedViewRef, Inject, Input, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\nimport { IF_ACTIVE_ID, IfActiveService } from '../../utils/conditional/if-active.service';\nimport { AriaService } from './providers/aria.service';\nimport { TabsService } from './providers/tabs.service';\n\nlet nbTabContentComponents: number = 0;\n\n@Component({\n  selector: 'clr-tab-content',\n  template: `\n    <ng-template #tabContentProjectedRef>\n      <section [id]=\"tabContentId\" role=\"tabpanel\" class=\"tab-content\" [class.active]=\"active\"\n               [hidden]=\"!active\"\n               [attr.aria-labelledby]=\"ariaLabelledBy\"\n               [attr.aria-expanded]=\"active\"\n               [attr.aria-hidden]=\"!active\">\n        <ng-content></ng-content>\n      </section>\n    </ng-template>\n    `,\n})\nexport class ClrTabContent implements OnDestroy {\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) public id: number,\n    private ariaService: AriaService,\n    private tabsService: TabsService\n  ) {\n    if (!this.tabContentId) {\n      this.tabContentId = 'clr-tab-content-' + nbTabContentComponents++;\n    }\n  }\n\n  private viewRef: EmbeddedViewRef<ClrTabContent>;\n\n  // The template must be applied on the top-down phase of view-child initialization to prevent\n  // components in the content from initializing before a content container exists.\n  // Some child components need their container for sizing calculations.\n  /* tslint:disable:no-unused-variable */\n  @ViewChild('tabContentProjectedRef', { static: true })\n  private set templateRef(value: TemplateRef<ClrTabContent>) {\n    this.viewRef = this.tabsService.tabContentViewContainer.createEmbeddedView(value);\n  }\n  /* tslint:enable:no-unused-variable */\n\n  get ariaLabelledBy(): string {\n    return this.ariaService.ariaLabelledBy;\n  }\n\n  get tabContentId(): string {\n    return this.ariaService.ariaControls;\n  }\n\n  @Input('id')\n  set tabContentId(id: string) {\n    this.ariaService.ariaControls = id;\n  }\n\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n\n  ngOnDestroy(): void {\n    const index = this.tabsService.tabContentViewContainer.indexOf(this.viewRef);\n    if (index > -1) {\n      this.tabsService.tabContentViewContainer.remove(index);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { InjectionToken } from '@angular/core';\n\nlet nbTabsComponent = 0;\n\nexport const TABS_ID = new InjectionToken<number>('TABS_ID');\n\nexport function tokenFactory() {\n  return 'clr-tabs-' + nbTabsComponent++;\n}\n\nexport const TABS_ID_PROVIDER = {\n  provide: TABS_ID,\n  useFactory: tokenFactory,\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { IF_ACTIVE_ID, IfActiveService } from '../../utils/conditional/if-active.service';\nimport { TemplateRefContainer } from '../../utils/template-ref/template-ref-container';\nimport { TabsService } from './providers/tabs.service';\n\nimport { AriaService } from './providers/aria.service';\nimport { TABS_ID } from './tabs-id.provider';\nimport { TabsLayout } from './enums/tabs-layout.enum';\n\nlet nbTabLinkComponents: number = 0;\n\n@Directive({\n  selector: '[clrTabLink]',\n  host: {\n    '[attr.aria-hidden]': 'false',\n    '[class.btn]': 'true',\n    role: 'tab',\n    type: 'button',\n  },\n})\nexport class ClrTabLink {\n  private _inOverflow: boolean;\n\n  @Input('clrTabLinkInOverflow')\n  set inOverflow(inOverflow) {\n    this._inOverflow = inOverflow;\n  }\n\n  get inOverflow(): boolean {\n    return this._inOverflow && this.tabsService.layout !== TabsLayout.VERTICAL;\n  }\n\n  @HostBinding('class.btn-link')\n  @HostBinding('class.nav-link')\n  get addLinkClasses() {\n    return !this.inOverflow;\n  }\n\n  templateRefContainer: TemplateRefContainer;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) private id: number,\n    private ariaService: AriaService,\n    public el: ElementRef,\n    private cfr: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private tabsService: TabsService,\n    @Inject(TABS_ID) public tabsId: number\n  ) {\n    if (!this.tabLinkId) {\n      this.tabLinkId = 'clr-tab-link-' + nbTabLinkComponents++;\n    }\n\n    // Tab links can be rendered in one of two places: in the main area or inside the overflow dropdown menu.\n    // Here, we create a container so that its template can be used to create embeddedView on the fly.\n    // See TabsService's renderView() method and how it's used in Tabs class for an example.\n    const factory = this.cfr.resolveComponentFactory(TemplateRefContainer);\n    this.templateRefContainer = this.viewContainerRef.createComponent(factory, undefined, undefined, [\n      [this.el.nativeElement],\n    ]).instance;\n  }\n\n  @HostBinding('attr.aria-controls')\n  get ariaControls(): string {\n    return this.ariaService.ariaControls;\n  }\n\n  get tabLinkId(): string {\n    return this.ariaService.ariaLabelledBy;\n  }\n\n  @HostBinding('id')\n  @Input('id')\n  set tabLinkId(id: string) {\n    this.ariaService.ariaLabelledBy = id;\n  }\n\n  @HostListener('click')\n  activate() {\n    this.ifActiveService.current = this.id;\n  }\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-selected')\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n\n  @HostBinding('attr.tabindex')\n  get tabindex() {\n    return this.active ? 0 : -1;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild, Inject } from '@angular/core';\n\nimport { IF_ACTIVE_ID, IF_ACTIVE_ID_PROVIDER, IfActiveService } from '../../utils/conditional/if-active.service';\n\nimport { AriaService } from './providers/aria.service';\nimport { TabsService } from './providers/tabs.service';\nimport { ClrTabContent } from './tab-content';\nimport { ClrTabLink } from './tab-link.directive';\n\n@Component({\n  selector: 'clr-tab',\n  template: `\n        <ng-content></ng-content>\n    `,\n  providers: [IF_ACTIVE_ID_PROVIDER, AriaService],\n})\nexport class ClrTab {\n  @ContentChild(ClrTabLink, { static: true })\n  tabLink: ClrTabLink;\n  @ContentChild(ClrTabContent, { static: true })\n  tabContent: ClrTabContent;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) public id: number,\n    private tabsService: TabsService\n  ) {\n    tabsService.register(this);\n  }\n\n  ngOnDestroy() {\n    this.tabsService.unregister(this);\n  }\n\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-tab-overflow-content',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.dropdown-menu]': 'true',\n  },\n})\nexport class ClrTabOverflowContent {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ClrFocusDirection {\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n  BOTH = 'both',\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Inject, PLATFORM_ID, HostBinding } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Directive({\n  selector: '[clrKeyFocusItem]',\n})\nexport class ClrKeyFocusItem {\n  @HostBinding('attr.tabindex') tabIndex: number;\n\n  get nativeElement() {\n    return this.elementRef.nativeElement;\n  }\n\n  constructor(private elementRef: ElementRef, @Inject(PLATFORM_ID) private platformId: Object) {}\n\n  focus() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.elementRef.nativeElement.focus();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  QueryList,\n  ElementRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrFocusDirection } from './enums/focus-direction.enum';\nimport { FocusableItem } from './interfaces';\n\nimport { KeyCodes } from './../../enums/key-codes.enum';\nimport { ClrKeyFocusItem } from './key-focus-item';\nimport { getKeyCodes, preventArrowKeyScroll } from './util';\n\n@Component({\n  selector: '[clrKeyFocus]',\n  template: '<ng-content></ng-content>',\n})\nexport class ClrKeyFocus {\n  constructor(private elementRef: ElementRef) {}\n  @Input('clrDirection') direction = ClrFocusDirection.VERTICAL;\n  @Input('clrFocusOnLoad') focusOnLoad = false;\n  @Output('clrFocusChange') private focusChange: EventEmitter<number> = new EventEmitter<number>();\n  @ContentChildren(ClrKeyFocusItem, { descendants: true })\n  private clrKeyFocusItems: QueryList<ClrKeyFocusItem>;\n\n  private _focusableItems: Array<FocusableItem>;\n  @Input('clrKeyFocus')\n  set focusableItems(elements: Array<FocusableItem>) {\n    // We accept a list of focusable elements (HTMLElements or existing Directives) or auto query for clrKeyFocusItem\n    // We accept a list reference in the cases where we cannot use ContentChildren to query\n    // ContentChildren can be unavailable if content is projected outside the scope of the component (see tabs).\n    if (elements && elements.length) {\n      this._focusableItems = elements;\n      this.initializeFocus();\n    }\n  }\n\n  get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  get focusableItems() {\n    if (this._focusableItems) {\n      return this._focusableItems;\n    } else {\n      return this.clrKeyFocusItems.toArray();\n    }\n  }\n\n  private _current: number = 0;\n\n  get current() {\n    return this._current;\n  }\n\n  set current(value: number) {\n    if (this._current !== value) {\n      this._current = value;\n    }\n  }\n\n  get currentItem() {\n    return this.focusableItems[this._current];\n  }\n\n  get currentItemElement(): HTMLElement {\n    return this.currentItem.nativeElement ? this.currentItem.nativeElement : <HTMLElement>this.currentItem;\n  }\n\n  focusCurrent() {\n    this.currentItem.focus();\n    this.focusChange.next(this._current);\n  }\n\n  moveTo(position: number) {\n    if (this.positionInRange(position)) {\n      this.current = position;\n      this.focusCurrent();\n    }\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngAfterContentInit() {\n    this.subscriptions.push(this.listenForItemUpdates());\n    this.initializeFocus();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  @HostListener('keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    // Make sure event was originated on the current item's element\n    if (this.currentItemElement !== event.target) {\n      const position = this.getItemPosition(<HTMLElement>event.target);\n      if (this.positionInRange(position)) {\n        this.current = position;\n      }\n    }\n\n    if (this.prevKeyPressed(event) && this.currentFocusIsNotFirstItem()) {\n      this.moveTo(this.current - 1);\n    } else if (this.nextKeyPressed(event) && this.currentFocusIsNotLastItem()) {\n      this.moveTo(this.current + 1);\n    } else if (event.code === KeyCodes.Home) {\n      this.moveTo(0);\n    } else if (event.code === KeyCodes.End) {\n      this.moveTo(this.focusableItems.length - 1);\n    }\n\n    preventArrowKeyScroll(event);\n  }\n\n  @HostListener('click', ['$event'])\n  setClickedItemCurrent(event: any) {\n    const position = this.getItemPosition(event.target);\n\n    if (position > -1) {\n      this.moveTo(position);\n    }\n  }\n\n  private getItemPosition(item: HTMLElement) {\n    if (this._focusableItems) {\n      return this.focusableItems.indexOf(item);\n    } else {\n      return this.focusableItems.map(_item => _item.nativeElement).indexOf(item);\n    }\n  }\n\n  private positionInRange(position: number) {\n    return position >= 0 && position < this.focusableItems.length;\n  }\n\n  private currentFocusIsNotFirstItem() {\n    return this._current - 1 >= 0;\n  }\n\n  private currentFocusIsNotLastItem() {\n    return this._current + 1 < this.focusableItems.length;\n  }\n\n  private initializeFocus() {\n    if (this.focusableItems && this.focusableItems.length) {\n      // It is possible that the focus was on an element, whose index is no longer available.\n      // This can happen when some of the focusable elements are being removed.\n      // In such cases, the new focus is initialized on the last focusable element.\n      if (this._current >= this.focusableItems.length) {\n        this._current = this.focusableItems.length - 1;\n      }\n\n      if (this.focusOnLoad) {\n        this.currentItem.focus();\n        this.focusChange.next();\n      }\n    }\n  }\n\n  private listenForItemUpdates() {\n    return this.clrKeyFocusItems.changes.subscribe(() => {\n      this.initializeFocus();\n    });\n  }\n\n  private nextKeyPressed(event: KeyboardEvent) {\n    const keyCodes = getKeyCodes(event);\n\n    switch (this.direction) {\n      case ClrFocusDirection.VERTICAL:\n        return event.key === keyCodes.ArrowDown;\n      case ClrFocusDirection.HORIZONTAL:\n        return event.key === keyCodes.ArrowRight;\n      case ClrFocusDirection.BOTH:\n        return event.key === keyCodes.ArrowDown || event.key === keyCodes.ArrowRight;\n      default:\n        return false;\n    }\n  }\n\n  private prevKeyPressed(event: KeyboardEvent) {\n    const keyCodes = getKeyCodes(event);\n\n    switch (this.direction) {\n      case ClrFocusDirection.VERTICAL:\n        return event.key === keyCodes.ArrowUp;\n      case ClrFocusDirection.HORIZONTAL:\n        return event.key === keyCodes.ArrowLeft;\n      case ClrFocusDirection.BOTH:\n        return event.key === keyCodes.ArrowUp || event.key === keyCodes.ArrowLeft;\n      default:\n        return false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Inject,\n  Input,\n  OnDestroy,\n  QueryList,\n  ViewChild,\n  ViewContainerRef,\n  HostBinding,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { IfActiveService } from '../../utils/conditional/if-active.service';\nimport { ClrKeyFocus } from '../../utils/focus/key-focus/key-focus';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { TabsLayout } from './enums/tabs-layout.enum';\nimport { TabsService } from './providers/tabs.service';\nimport { ClrTab } from './tab';\nimport { ClrTabLink } from './tab-link.directive';\nimport { TABS_ID, TABS_ID_PROVIDER } from './tabs-id.provider';\nimport { ClrTabOverflowContent } from './tab-overflow-content';\n\n@Component({\n  selector: 'clr-tabs',\n  template: `\n        <ul class=\"nav\" role=\"tablist\" [attr.aria-owns]=\"tabIds\" [clrKeyFocus]=\"tabLinkElements\" clrDirection=\"both\" (clrFocusChange)=\"toggleOverflowOnPosition($event)\" (focusout)=\"resetKeyFocusCurrentToActive($event)\">\n            <!--tab links-->\n            <ng-container *ngFor=\"let link of tabLinkDirectives\">\n                <ng-container *ngIf=\"link.tabsId === tabsId && !link.inOverflow\">\n                    <li role=\"presentation\" class=\"nav-item\">\n                        <ng-container [ngTemplateOutlet]=\"link.templateRefContainer.template\"></ng-container>\n                    </li>\n                </ng-container>\n            </ng-container>\n            <ng-container *ngIf=\"tabsService.overflowTabs.length > 0\">\n                <div class=\"tabs-overflow bottom-right\" role=\"presentation\" \n                  [class.open]=\"toggleService.open\">\n                    <li role=\"application\" class=\"nav-item\">\n                        <button #tabOverflowTrigger class=\"btn btn-link nav-link dropdown-toggle\" type=\"button\" aria-hidden=\"true\" \n                        [attr.tabindex]=\"activeTabInOverflow && !toggleService.open? 0: -1\"\n                        [class.active]=\"activeTabInOverflow\"\n                        [class.open]=\"toggleService.open\"\n                        (mousedown)=\"_mousedown = true\"\n                        (focus)=\"openOverflowOnFocus()\"\n                        (click)=\"toggleOverflowOnClick()\">\n                            <clr-icon shape=\"ellipsis-horizontal\"\n                              [class.is-info]=\"toggleService.open\"\n                              [attr.title]=\"commonStrings.keys.more\"></clr-icon>\n                        </button>\n                    </li>\n                    <!--tab links in overflow menu-->\n                    <clr-tab-overflow-content *ngIf=\"toggleService.open\"  \n                      (document:keydown.esc)=\"closeOnEscapeKey()\" \n                      (document:click)=\"closeOnOutsideClick($event, tabOverflowTrigger)\"\n                      (focusout)=\"closeOnFocusOut($event)\">\n                        <ng-container *ngFor=\"let link of tabLinkDirectives\">\n                            <ng-container *ngIf=\"link.tabsId === tabsId && link.inOverflow\"\n                                          [ngTemplateOutlet]=\"link.templateRefContainer.template\">\n                            </ng-container>\n                        </ng-container>\n                    </clr-tab-overflow-content>\n                </div>\n            </ng-container>\n        </ul>\n        <ng-container #tabContentViewContainer></ng-container>\n    `,\n  providers: [IfActiveService, ClrPopoverToggleService, TabsService, TABS_ID_PROVIDER],\n})\nexport class ClrTabs implements AfterContentInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  private get overflowPosition() {\n    return this._tabLinkDirectives.filter(link => !link.inOverflow).length;\n  }\n\n  /* tslint:disable:no-unused-variable */\n  @ViewChild('tabContentViewContainer', { static: true, read: ViewContainerRef })\n  private set tabContentViewContainer(value: ViewContainerRef) {\n    this.tabsService.tabContentViewContainer = value;\n  }\n  /* tslint:enable:no-unused-variable */\n\n  @Input('clrLayout')\n  set layout(layout: TabsLayout) {\n    if (\n      Object.keys(TabsLayout)\n        .map(key => {\n          return TabsLayout[key];\n        })\n        .indexOf(layout) >= 0\n    ) {\n      this.tabsService.layout = layout;\n    }\n  }\n  get layout(): TabsLayout {\n    return this.tabsService.layout;\n  }\n\n  @ContentChildren(ClrTab) private tabs: QueryList<ClrTab>;\n\n  private _tabLinkDirectives: ClrTabLink[] = [];\n  get tabLinkDirectives(): ClrTabLink[] {\n    return this._tabLinkDirectives;\n  }\n\n  tabLinkElements: HTMLElement[] = [];\n\n  @ViewChild(ClrKeyFocus, { static: true })\n  keyFocus: ClrKeyFocus;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    public toggleService: ClrPopoverToggleService,\n    public tabsService: TabsService,\n    @Inject(TABS_ID) public tabsId: number,\n    public commonStrings: ClrCommonStringsService\n  ) {}\n\n  get activeTabInOverflow() {\n    return this.tabsService.overflowTabs.indexOf(this.tabsService.activeTab) > -1;\n  }\n\n  get activeTabPosition() {\n    return this._tabLinkDirectives.findIndex(link => link.active);\n  }\n\n  get tabIds() {\n    return this.tabsService.children.map(tab => tab.tabLink.tabLinkId).join(' ');\n  }\n\n  get isCurrentInOverflow() {\n    return this.keyFocus.current >= this.overflowPosition;\n  }\n\n  @HostBinding('class.tabs-vertical')\n  get isVertical() {\n    return this.layout === TabsLayout.VERTICAL;\n  }\n\n  toggleOverflowOnPosition(position: number) {\n    // we need to check current position to determine\n    // whether we need to open the tab overflow or not\n    this.toggleService.open = position >= this.overflowPosition;\n  }\n\n  private _tabOverflowEl: HTMLElement;\n\n  @ViewChild(ClrTabOverflowContent, { read: ElementRef })\n  set tabOverflowEl(value: ElementRef) {\n    this._tabOverflowEl = value && value.nativeElement;\n    if (this.toggleService.open && value) {\n      // only when tab overflow view element is registered,\n      // we need to move the focus to the first item\n      this.keyFocus.focusCurrent();\n    }\n  }\n\n  resetKeyFocusCurrentToActive(event: FocusEvent) {\n    const keyFocusContainsFocus = this.keyFocus.nativeElement.contains(<HTMLElement>event.relatedTarget);\n    if (!keyFocusContainsFocus && this.keyFocus.current !== this.activeTabPosition) {\n      this.keyFocus.current = this.activeTabPosition;\n    }\n  }\n\n  toggleOverflowOnClick() {\n    if (this.isCurrentInOverflow && this.toggleService.open) {\n      this.keyFocus.moveTo(this.overflowPosition - 1);\n    } else {\n      this.keyFocus.moveTo(this.overflowPosition);\n    }\n\n    // once click handler completes running,\n    // reset the _mousedown flag\n    this._mousedown = false;\n  }\n\n  // in order to check focus is triggered by click\n  // we are using this _mousedown flag\n  _mousedown = false;\n\n  openOverflowOnFocus() {\n    // This method should be called only on keyboard generated focus\n    // when the active tab is in the overflow\n    if (!this._mousedown && !this.toggleService.open) {\n      this.keyFocus.moveTo(this.activeTabPosition);\n    }\n  }\n\n  closeOnFocusOut(event: FocusEvent) {\n    if (\n      !this._tabOverflowEl.contains(<HTMLElement>event.relatedTarget) &&\n      this.toggleService.open &&\n      !this._mousedown\n    ) {\n      this.toggleService.open = false;\n\n      // if the focus is out of overflow and lands on the active tab link\n      // which is currently visible, set the key focus current to activeTabPosition\n      if (this.tabLinkElements[this.activeTabPosition] === event.relatedTarget) {\n        this.keyFocus.current = this.activeTabPosition;\n      }\n    }\n  }\n\n  closeOnEscapeKey() {\n    // Move current to the last visible focusable item\n    this.keyFocus.moveTo(this.overflowPosition - 1);\n  }\n\n  closeOnOutsideClick(event: Event, tabOverflowTrigger: HTMLElement) {\n    // Exit early if the event target is the trigger element itself or element that's inside the trigger element.\n    // This is because we have another handler on the tabOverflowTrigger element itself.\n    // As this handler method is on the document level so the event bubbles up to it and conflicts\n    // with the tabOverflowTrigger handler resulting in opening the tab overflow and closing it right away consecutively.\n    if (event.target === tabOverflowTrigger || tabOverflowTrigger.contains(<HTMLElement>event.target)) {\n      return;\n    }\n\n    // Move current to the last visible focusable item\n    if (!this._tabOverflowEl.contains(<HTMLElement>event.target) && this.isCurrentInOverflow) {\n      this.keyFocus.moveTo(this.overflowPosition - 1);\n    }\n  }\n\n  private listenForTabLinkChanges() {\n    return this.tabs.changes.pipe(startWith(this.tabs.map(tab => tab.tabLink))).subscribe(() => {\n      this._tabLinkDirectives = this.tabs.map(tab => tab.tabLink);\n      this.tabLinkElements = this._tabLinkDirectives.map(tab => tab.el.nativeElement);\n    });\n  }\n\n  ngAfterContentInit() {\n    this.subscriptions.push(this.listenForTabLinkChanges());\n\n    if (typeof this.ifActiveService.current === 'undefined' && this.tabLinkDirectives[0]) {\n      this.tabLinkDirectives[0].activate();\n    }\n\n    // set initial current position\n    this.keyFocus.current = this.activeTabPosition;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => {\n      sub.unsubscribe();\n    });\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrKeyFocus } from './key-focus';\nimport { ClrKeyFocusItem } from './key-focus-item';\n\nconst KEY_FOCUS_DIRECTIVES: Type<any>[] = [ClrKeyFocus, ClrKeyFocusItem];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [KEY_FOCUS_DIRECTIVES],\n  exports: [KEY_FOCUS_DIRECTIVES],\n})\nexport class ClrKeyFocusModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrTemplateRefModule } from '../../utils/template-ref/template-ref.module';\n\nimport { ActiveOompaLoompa } from './chocolate/active-oompa-loompa';\nimport { TabsWillyWonka } from './chocolate/tabs-willy-wonka';\nimport { ClrTab } from './tab';\nimport { ClrTabContent } from './tab-content';\nimport { ClrTabLink } from './tab-link.directive';\nimport { ClrTabOverflowContent } from './tab-overflow-content';\nimport { ClrTabs } from './tabs';\nimport { ClrKeyFocusModule } from '../../utils/focus/key-focus/key-focus.module';\n\nexport const CLR_TABS_DIRECTIVES: Type<any>[] = [\n  ClrTabContent,\n  ClrTab,\n  ClrTabs,\n  ClrTabOverflowContent,\n  ClrTabLink,\n  TabsWillyWonka,\n  ActiveOompaLoompa,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrConditionalModule, ClrIconModule, ClrTemplateRefModule, ClrKeyFocusModule],\n  declarations: [CLR_TABS_DIRECTIVES],\n  exports: [CLR_TABS_DIRECTIVES, ClrConditionalModule],\n})\nexport class ClrTabsModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class VerticalNavGroupRegistrationService {\n  public navGroupCount: number = 0;\n\n  registerNavGroup() {\n    this.navGroupCount++;\n  }\n\n  unregisterNavGroup(): void {\n    this.navGroupCount--;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class VerticalNavIconService {\n  private _icons: number = 0;\n\n  get hasIcons(): boolean {\n    return this._icons > 0;\n  }\n\n  registerIcon(): void {\n    this._icons++;\n  }\n\n  unregisterIcon(): void {\n    this._icons--;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class VerticalNavService {\n  private _animateOnCollapsed: Subject<boolean> = new Subject<boolean>();\n\n  get animateOnCollapsed(): Observable<boolean> {\n    return this._animateOnCollapsed.asObservable();\n  }\n\n  private _collapsedChanged: Subject<boolean> = new Subject<boolean>();\n\n  get collapsedChanged(): Observable<boolean> {\n    return this._collapsedChanged.asObservable();\n  }\n\n  private _collapsed: boolean = false;\n\n  get collapsed(): boolean {\n    return this._collapsed;\n  }\n\n  set collapsed(value: boolean) {\n    value = !!value;\n    if (this.collapsible && this._collapsed !== value) {\n      this.updateCollapseBehavior(value);\n    }\n  }\n\n  private _collapsible: boolean = false;\n\n  get collapsible(): boolean {\n    return this._collapsible;\n  }\n\n  set collapsible(value: boolean) {\n    value = !!value;\n    if (this._collapsible !== value) {\n      if (!value && this.collapsed) {\n        this.updateCollapseBehavior(false);\n      }\n      this._collapsible = value;\n    }\n  }\n\n  private updateCollapseBehavior(value: boolean): void {\n    this._animateOnCollapsed.next(value);\n    this._collapsed = value;\n    this._collapsedChanged.next(value);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { VerticalNavGroupRegistrationService } from './providers/vertical-nav-group-registration.service';\nimport { VerticalNavIconService } from './providers/vertical-nav-icon.service';\nimport { VerticalNavService } from './providers/vertical-nav.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-vertical-nav',\n  templateUrl: './vertical-nav.html',\n  providers: [VerticalNavService, VerticalNavIconService, VerticalNavGroupRegistrationService],\n  host: {\n    class: 'clr-vertical-nav',\n    '[class.is-collapsed]': 'collapsed',\n    '[class.has-nav-groups]': 'hasNavGroups',\n    '[class.has-icons]': 'hasIcons',\n  },\n})\nexport class ClrVerticalNav implements OnDestroy {\n  get collapsible(): boolean {\n    return this._navService.collapsible;\n  }\n\n  @Input('clrVerticalNavCollapsible')\n  set collapsible(value: boolean) {\n    this._navService.collapsible = value;\n  }\n\n  get collapsed(): boolean {\n    return this._navService.collapsed;\n  }\n\n  @Input('clrVerticalNavCollapsed')\n  set collapsed(value: boolean) {\n    this._navService.collapsed = value;\n  }\n\n  @Output('clrVerticalNavCollapsedChange')\n  private _collapsedChanged: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  get hasNavGroups(): boolean {\n    return this._navGroupRegistrationService.navGroupCount > 0;\n  }\n\n  get hasIcons(): boolean {\n    return this._navIconService.hasIcons;\n  }\n\n  get ariaExpanded(): string {\n    if (!this.collapsible) {\n      return null;\n    }\n    return !this.collapsed ? 'true' : 'false';\n  }\n\n  private _sub: Subscription;\n\n  constructor(\n    private _navService: VerticalNavService,\n    private _navIconService: VerticalNavIconService,\n    private _navGroupRegistrationService: VerticalNavGroupRegistrationService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._sub = this._navService.collapsedChanged.subscribe(value => {\n      this._collapsedChanged.emit(value);\n    });\n  }\n\n  toggleByButton() {\n    this.collapsed = !this.collapsed;\n  }\n\n  ngOnDestroy() {\n    this._sub.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class VerticalNavGroupService {\n  private _expandChange: Subject<boolean> = new Subject<boolean>();\n\n  get expandChange(): Observable<boolean> {\n    return this._expandChange.asObservable();\n  }\n\n  expand(): void {\n    this._expandChange.next(true);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, AnimationEvent, state, style, transition, trigger } from '@angular/animations';\nimport { AfterContentInit, Component, EventEmitter, HostBinding, Input, OnDestroy, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\n\nimport { VerticalNavGroupRegistrationService } from './providers/vertical-nav-group-registration.service';\nimport { VerticalNavGroupService } from './providers/vertical-nav-group.service';\nimport { VerticalNavService } from './providers/vertical-nav.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\nconst EXPANDED_STATE: string = 'expanded';\nconst COLLAPSED_STATE: string = 'collapsed';\n\n@Component({\n  selector: 'clr-vertical-nav-group',\n  templateUrl: './vertical-nav-group.html',\n  providers: [IfExpandService, VerticalNavGroupService],\n  animations: [\n    trigger('clrExpand', [\n      state(EXPANDED_STATE, style({ height: '*' })),\n      state(COLLAPSED_STATE, style({ height: 0, 'overflow-y': 'hidden', visibility: 'hidden' })),\n      transition(`${EXPANDED_STATE} <=> ${COLLAPSED_STATE}`, animate('0.2s ease-in-out')),\n    ]),\n  ],\n  host: { class: 'nav-group' },\n})\nexport class ClrVerticalNavGroup implements AfterContentInit, OnDestroy {\n  constructor(\n    private _itemExpand: IfExpandService,\n    private _navGroupRegistrationService: VerticalNavGroupRegistrationService,\n    private _navGroupService: VerticalNavGroupService,\n    private _navService: VerticalNavService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._navGroupRegistrationService.registerNavGroup();\n\n    // FIXME: This subscription handles a corner case\n    // Vertical Nav collapse requires the animation to run first and then\n    // remove the nodes from the DOM. If the user directly sets the input\n    // on the clrIfExpanded directive, we have no chance to run the animation\n    // and wait for it to complete. This subscription makes sure that the\n    // animation states are correct for that edge case.\n    this._subscriptions.push(\n      this._itemExpand.expandChange.subscribe(value => {\n        if (value && this.expandAnimationState === COLLAPSED_STATE) {\n          if (this._navService.collapsed) {\n            this._navService.collapsed = false;\n          }\n          this.expandAnimationState = EXPANDED_STATE;\n        } else if (!value && this.expandAnimationState === EXPANDED_STATE) {\n          this.expandAnimationState = COLLAPSED_STATE;\n        }\n      })\n    );\n\n    // 1. If the nav is collapsing, close the open nav group + save its state\n    // 2. If the nav is expanding, expand the nav group if the previous state was expanded\n    this._subscriptions.push(\n      this._navService.animateOnCollapsed.subscribe((goingToCollapse: boolean) => {\n        if (goingToCollapse && this.expanded) {\n          this.wasExpanded = true;\n          this.expandAnimationState = COLLAPSED_STATE;\n        } else if (!goingToCollapse && this.wasExpanded) {\n          this.expandGroup();\n          this.wasExpanded = false;\n        }\n      })\n    );\n\n    // If a link is clicked, expand the nav group\n    this._subscriptions.push(\n      this._navGroupService.expandChange.subscribe((expand: boolean) => {\n        if (expand && !this.expanded) {\n          this.expandGroup();\n        }\n      })\n    );\n  }\n\n  private wasExpanded: boolean = false;\n\n  @HostBinding('class.is-expanded')\n  get expanded(): boolean {\n    return this._itemExpand.expanded;\n  }\n\n  set expanded(value: boolean) {\n    if (this._itemExpand.expanded !== value) {\n      this._itemExpand.expanded = value;\n      this.expandedChange.emit(value);\n    }\n  }\n\n  @Input('clrVerticalNavGroupExpanded')\n  set userExpandedInput(value: boolean) {\n    value = !!value;\n    if (this.expanded !== value) {\n      // We have to call toggleExpand because some cases require animations to occur first\n      // Directly setting the Expand service value skips the animation and can result in\n      // nodes in the DOM but the nav group still being collapsed\n      this.toggleExpand();\n    }\n  }\n\n  @Output('clrVerticalNavGroupExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  private _subscriptions: Subscription[] = [];\n\n  private _expandAnimationState: string = COLLAPSED_STATE;\n\n  expandGroup(): void {\n    this.expanded = true;\n    // Expanded animation occurs after Expand.expand is set to true\n    this.expandAnimationState = EXPANDED_STATE;\n  }\n\n  collapseGroup(): void {\n    // If a Vertical Nav Group toggle button is clicked while the Vertical Nav is in Collapsed state,\n    // the Vertical Nav should be expanded first.\n    this.expandAnimationState = COLLAPSED_STATE;\n  }\n\n  // closes a group after the collapse animation\n  expandAnimationDone($event: AnimationEvent) {\n    if ($event.toState === COLLAPSED_STATE) {\n      this.expanded = false;\n    }\n  }\n\n  get expandAnimationState(): string {\n    return this._expandAnimationState;\n  }\n\n  set expandAnimationState(value: string) {\n    if (value !== this._expandAnimationState) {\n      this._expandAnimationState = value;\n    }\n  }\n\n  toggleExpand(): void {\n    if (this.expanded) {\n      this.collapseGroup();\n    } else {\n      // If nav is collasped, first open the nav\n      if (this._navService.collapsed) {\n        this._navService.collapsed = false;\n      }\n      // then expand the nav group\n      this.expandGroup();\n    }\n  }\n\n  ngAfterContentInit() {\n    // This makes sure that if someone marks a nav group expanded in a collapsed nav\n    // the expanded property is switched back to collapsed state.\n    if (this._navService.collapsed && this.expanded) {\n      this.wasExpanded = true;\n      this.expandAnimationState = COLLAPSED_STATE;\n    }\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    this._navGroupRegistrationService.unregisterNavGroup();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-vertical-nav-group-children',\n  template: `\n        <ng-content></ng-content>\n    `,\n})\nexport class ClrVerticalNavGroupChildren {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, OnDestroy } from '@angular/core';\nimport { VerticalNavIconService } from './providers/vertical-nav-icon.service';\n\n@Directive({ selector: '[clrVerticalNavIcon]', host: { class: 'nav-icon' } })\nexport class ClrVerticalNavIcon implements OnDestroy {\n  constructor(private _verticalNavIconService: VerticalNavIconService) {\n    this._verticalNavIconService.registerIcon();\n  }\n\n  ngOnDestroy() {\n    this._verticalNavIconService.unregisterIcon();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, HostListener, Optional } from '@angular/core';\nimport { VerticalNavGroupService } from './providers/vertical-nav-group.service';\n\n@Component({\n  selector: '[clrVerticalNavLink]',\n  template: `\n        <ng-content select=\"[clrVerticalNavIcon]\"></ng-content>\n        <span class=\"nav-text\">\n            <ng-content></ng-content>    \n        </span>\n    `,\n  host: { class: 'nav-link' },\n})\nexport class ClrVerticalNavLink {\n  constructor(@Optional() private _navGroupService: VerticalNavGroupService) {}\n\n  @HostListener('click')\n  public expandParentNavGroup(): void {\n    if (this._navGroupService) {\n      this._navGroupService.expand();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';\n\nimport { ClrVerticalNav } from './vertical-nav';\nimport { ClrVerticalNavGroup } from './vertical-nav-group';\nimport { ClrVerticalNavGroupChildren } from './vertical-nav-group-children';\nimport { ClrVerticalNavIcon } from './vertical-nav-icon';\nimport { ClrVerticalNavLink } from './vertical-nav-link';\n\nexport const CLR_VERTICAL_NAV_DIRECTIVES: Type<any>[] = [\n  ClrVerticalNav,\n  ClrVerticalNavLink,\n  ClrVerticalNavGroup,\n  ClrVerticalNavGroupChildren,\n  ClrVerticalNavIcon,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrConditionalModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_VERTICAL_NAV_DIRECTIVES],\n  exports: [CLR_VERTICAL_NAV_DIRECTIVES, ClrConditionalModule, ClrIconModule, ClrFocusOnViewInitModule],\n})\nexport class ClrVerticalNavModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrMainContainerModule } from './main-container/main-container.module';\nimport { ClrNavigationModule } from './nav/navigation.module';\nimport { ClrTabsModule } from './tabs/tabs.module';\nimport { ClrVerticalNavModule } from './vertical-nav/vertical-nav.module';\n\n@NgModule({ exports: [ClrMainContainerModule, ClrNavigationModule, ClrTabsModule, ClrVerticalNavModule] })\nexport class ClrLayoutModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n@Injectable()\nexport class ScrollingService {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  stopScrolling(): void {\n    this._document.body.classList.add('no-scrolling');\n  }\n\n  resumeScrolling(): void {\n    if (this._document.body.classList.contains('no-scrolling')) {\n      this._document.body.classList.remove('no-scrolling');\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationEvent, style, transition, trigger } from '@angular/animations';\nimport {\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChange,\n  ViewChild,\n} from '@angular/core';\nimport { FocusTrapDirective } from '../utils/focus-trap/focus-trap.directive';\nimport { ClrCommonStringsService } from '../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../utils/id-generator/id-generator.service';\nimport { ScrollingService } from '../utils/scrolling/scrolling-service';\n\n@Component({\n  selector: 'clr-modal',\n  viewProviders: [ScrollingService],\n  templateUrl: './modal.html',\n  styles: [\n    `\n        :host { display: none; }\n        :host.open { display: inline; }\n    `,\n  ],\n  animations: [\n    trigger('fadeDown', [\n      transition('* => false', [style({ opacity: 0, transform: 'translate(0, -25%)' }), animate('0.2s ease-in-out')]),\n      transition('false => *', [animate('0.2s ease-in-out', style({ opacity: 0, transform: 'translate(0, -25%)' }))]),\n    ]),\n    trigger('fade', [\n      transition('void => *', [style({ opacity: 0 }), animate('0.2s ease-in-out', style({ opacity: 0.85 }))]),\n      transition('* => void', [animate('0.2s ease-in-out', style({ opacity: 0 }))]),\n    ]),\n  ],\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrModal implements OnChanges, OnDestroy {\n  @ViewChild(FocusTrapDirective) focusTrap: FocusTrapDirective;\n\n  @HostBinding('class.open')\n  @Input('clrModalOpen')\n  _open: boolean = false;\n  @Output('clrModalOpenChange') _openChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  @Input('clrModalClosable') closable: boolean = true;\n  @Input('clrModalSize') size: string;\n  @Input('clrModalStaticBackdrop') staticBackdrop: boolean = true;\n  @Input('clrModalSkipAnimation') skipAnimation: string = 'false';\n\n  // presently this is only used by wizards\n  @Input('clrModalOverrideScrollService') bypassScrollService: boolean = false;\n  @Input('clrModalPreventClose') stopClose: boolean = false;\n  @Output('clrModalAlternateClose') altClose: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  constructor(\n    private _scrollingService: ScrollingService,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(UNIQUE_ID) public modalId: string\n  ) {}\n\n  // Detect when _open is set to true and set no-scrolling to true\n  ngOnChanges(changes: { [propName: string]: SimpleChange }): void {\n    if (!this.bypassScrollService && changes && changes.hasOwnProperty('_open')) {\n      if (changes._open.currentValue) {\n        this._scrollingService.stopScrolling();\n      } else {\n        this._scrollingService.resumeScrolling();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._scrollingService.resumeScrolling();\n  }\n\n  open(): void {\n    if (this._open) {\n      return;\n    }\n    this._open = true;\n    this._openChanged.emit(true);\n  }\n\n  @HostListener('body:keyup.escape')\n  close(): void {\n    if (this.stopClose) {\n      this.altClose.emit(false);\n      return;\n    }\n    if (!this.closable || !this._open) {\n      return;\n    }\n    this._open = false;\n    // SPECME\n    this.focusTrap.setPreviousFocus(); // Handles moving focus back to the element that had it before.\n  }\n\n  fadeDone(e: AnimationEvent) {\n    if (e.toState === 'void') {\n      // TODO: Investigate if we can decouple from animation events\n      this._openChanged.emit(false);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener } from '@angular/core';\n\n/**\n * Allows modal overflow area to be scrollable via keyboard.\n * The modal body will focus with keyboard navigation only.\n * This allows inner focusable items to be focused without\n * the overflow scroll being focused.\n */\n@Directive({\n  selector: '.modal-body',\n  host: {\n    '[attr.tabindex]': 'tabindex',\n  },\n})\nexport class ClrModalBody {\n  tabindex = 0;\n\n  @HostListener('mousedown')\n  mouseDown() {\n    // tabindex = 0 binding should be removed\n    // so it won't be focused when click starts with mousedown\n    delete this.tabindex;\n  }\n\n  @HostListener('mouseup')\n  mouseUp() {\n    // set the tabindex binding back when click is completed with mouseup\n    this.tabindex = 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../icon/icon.module';\nimport { ClrFocusTrapModule } from '../utils/focus-trap/focus-trap.module';\nimport { ClrModal } from './modal';\nimport { ClrModalBody } from './modal-body';\nimport { ClrFocusOnViewInitModule } from '../utils/focus/focus-on-view-init/focus-on-view-init.module';\n\nexport const CLR_MODAL_DIRECTIVES: Type<any>[] = [ClrModal, ClrModalBody];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrFocusTrapModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_MODAL_DIRECTIVES],\n  exports: [CLR_MODAL_DIRECTIVES, ClrIconModule, ClrFocusOnViewInitModule],\n})\nexport class ClrModalModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Point } from '../common/popover';\n\nexport interface Position {\n  anchorPoint: Point;\n  popoverPoint: Point;\n  offsetY: number;\n  offsetX: number;\n}\n\nexport const SIGNPOST_POSITIONS: { [input: string]: Position } = {\n  'top-left': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_RIGHT, offsetY: -10, offsetX: 0 },\n  'top-middle': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_CENTER, offsetY: -10, offsetX: 0 },\n  'top-right': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_LEFT, offsetY: -10, offsetX: 0 },\n  'right-top': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_BOTTOM, offsetY: 2, offsetX: 14 },\n  'right-middle': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_CENTER, offsetY: 6, offsetX: 14 },\n  'right-bottom': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_TOP, offsetY: -1, offsetX: 14 },\n  'bottom-right': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_LEFT, offsetY: 9, offsetX: -1 },\n  'bottom-middle': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_CENTER, offsetY: 9, offsetX: 12 },\n  'bottom-left': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_RIGHT, offsetY: 9, offsetX: 0 },\n  'left-bottom': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_TOP, offsetY: 0, offsetX: -14 },\n  'left-middle': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_CENTER, offsetY: 4, offsetX: -14 },\n  'left-top': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_BOTTOM, offsetY: 0, offsetX: -14 },\n  default: { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_CENTER, offsetY: 6, offsetX: 14 },\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, Inject, Injector, Input, Optional, OnDestroy, PLATFORM_ID } from '@angular/core';\n\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\n\nimport { SIGNPOST_POSITIONS } from './signpost-positions';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\n\n// aka where the arrow / pointer is at in relation to the anchor\nconst POSITIONS: string[] = [\n  'top-left',\n  'top-middle',\n  'top-right',\n  'right-top',\n  'right-middle', // default\n  'right-bottom',\n  'bottom-right',\n  'bottom-middle',\n  'bottom-left',\n  'left-bottom',\n  'left-middle',\n  'left-top',\n];\n\n@Component({\n  selector: 'clr-signpost-content',\n  template: `\n      <div class=\"signpost-wrap\">\n          <div class=\"popover-pointer\"></div>\n          <div class=\"signpost-content-header\">\n              <button type=\"button\" [attr.aria-label]=\"commonStrings.keys.signpostClose\" class=\"signpost-action close\"\n                      (click)=\"close()\" [attr.aria-controls]=\"signpostContentId\">\n                  <clr-icon shape=\"close\" [attr.title]=\"commonStrings.keys.close\"></clr-icon>\n              </button>\n          </div>\n          <div class=\"signpost-content-body\">\n              <ng-content></ng-content>\n          </div>\n      </div>\n  `,\n  host: { '[class.signpost-content]': 'true', '[id]': 'signpostContentId' },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrSignpostContent extends AbstractPopover implements OnDestroy {\n  private document: Document;\n\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(UNIQUE_ID) public signpostContentId: string,\n    private signpostIdService: SignpostIdService,\n    private signpostFocusManager: SignpostFocusManager,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(DOCUMENT) document: any\n  ) {\n    super(injector, parentHost);\n    if (!parentHost) {\n      throw new Error('clr-signpost-content should only be used inside of a clr-signpost');\n    }\n    // Defaults\n    this.position = 'right-middle';\n    this.closeOnOutsideClick = true;\n    this.signpostIdService.setId(signpostContentId);\n\n    this.document = document;\n  }\n\n  /**********\n   *\n   * @description\n   * Close function that uses the signpost instance to toggle the state of the content popover.\n   *\n   */\n  close() {\n    this.toggleService.open = false;\n  }\n\n  private _position: string;\n\n  get position() {\n    return this._position;\n  }\n\n  /*********\n   *\n   * @description\n   * A setter for the position of the ClrSignpostContent popover. This is a combination of the following:\n   * - anchorPoint - where on the trigger to anchor the ClrSignpostContent\n   * - popoverPoint - where on the ClrSignpostContent container to align with the anchorPoint\n   * - offsetY - where on the Y axis to align the ClrSignpostContent so it meets specs\n   * - offsetX - where on the X axis to align the ClrSignpostContent so it meets specs\n   * There are 12 possible positions to place a ClrSignpostContent container:\n   * - top-left\n   * - top-middle\n   * - top-right\n   * - right-top\n   * - right-middle\n   * - right-bottom\n   * - bottom-right\n   * - bottom-middle\n   * - bottom-left\n   * - left-bottom\n   * - left-middle\n   * - left-top\n   *\n   * I think of it as follows for 'top-left' -> CONTAINER_SIDE-SIDE_POSITION. In this case CONTAINER_SIDE is 'top'\n   * meaning the top of the trigger icon (above the icon that hides/shows) the ClrSignpostContent. And, SIDE_POSITION\n   * is 'left' meaning two things: 1) the ClrSignpostContent container extends to the left and 2) the 'arrow/pointer'\n   * linking the SingpostContent to the trigger points down at the horizontal center of the trigger icon.\n   *\n   * @param newPosition\n   */\n  @Input('clrPosition')\n  set position(position: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, this.position);\n    if (position && POSITIONS.indexOf(position) > -1) {\n      this._position = position;\n    } else {\n      this._position = 'right-middle';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, this.position);\n\n    const setPosition = SIGNPOST_POSITIONS[this.position];\n    this.anchorPoint = setPosition.anchorPoint;\n    this.popoverPoint = setPosition.popoverPoint;\n    this.popoverOptions.offsetY = setPosition.offsetY;\n    this.popoverOptions.offsetX = setPosition.offsetX;\n  }\n\n  ngOnDestroy() {\n    if (isPlatformBrowser(this.platformId) && this.el.nativeElement.contains(this.document.activeElement)) {\n      this.signpostFocusManager.focusTrigger();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';\n\nimport { ClrSignpost } from './signpost';\nimport { ClrSignpostContent } from './signpost-content';\nimport { ClrSignpostTrigger } from './signpost-trigger';\n\nexport const CLR_SIGNPOST_DIRECTIVES: Type<any>[] = [ClrSignpost, ClrSignpostContent, ClrSignpostTrigger];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_SIGNPOST_DIRECTIVES],\n  exports: [CLR_SIGNPOST_DIRECTIVES, ClrConditionalModule],\n})\nexport class ClrSignpostModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class TooltipIdService {\n  private _id: Subject<string> = new Subject<string>();\n\n  updateId(id: string) {\n    this._id.next(id);\n  }\n\n  get id(): Observable<string> {\n    return this._id.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef } from '@angular/core';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\n\n@Component({\n  selector: 'clr-tooltip',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.tooltip]': 'true',\n  },\n  providers: [\n    ClrPopoverToggleService,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    // TODO: consider centralizing the unique id string on a service that provides ariaAttributes that need it\n    // AriaService in layout/tabs/providers might be a good starting point.\n    UNIQUE_ID_PROVIDER,\n    TooltipIdService,\n  ],\n})\nexport class ClrTooltip {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, Inject, Injector, Input, Optional } from '@angular/core';\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { Point } from '../common/popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\n\nconst POSITIONS: string[] = ['bottom-left', 'bottom-right', 'top-left', 'top-right', 'right', 'left'];\n\nconst SIZES: string[] = ['xs', 'sm', 'md', 'lg'];\n\n@Component({\n  selector: 'clr-tooltip-content',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.tooltip-content]': 'true',\n    '[style.opacity]': '1',\n    '[attr.role]': '\"tooltip\"',\n    '[id]': 'id',\n  },\n})\nexport class ClrTooltipContent extends AbstractPopover {\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef,\n    @Inject(UNIQUE_ID) public uniqueId: string,\n    private tooltipIdService: TooltipIdService\n  ) {\n    super(injector, parentHost);\n\n    if (!parentHost) {\n      throw new Error('clr-tooltip-content should only be used inside of a clr-tooltip');\n    }\n\n    // Defaults\n    this.position = 'right';\n    this.size = 'sm';\n\n    // Set the default id in case consumer does not supply a custom id.\n    this.updateId(uniqueId);\n  }\n\n  private _position: string;\n\n  get position() {\n    return this._position;\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  @Input()\n  set id(value: string) {\n    value ? this.updateId(value) : this.updateId('');\n  }\n  private _id;\n\n  private updateId(id: string) {\n    this._id = id;\n    this.tooltipIdService.updateId(id);\n  }\n\n  @Input('clrPosition')\n  set position(position: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, 'tooltip-' + this.position);\n    if (position && POSITIONS.indexOf(position) > -1) {\n      this._position = position;\n    } else {\n      this._position = 'right';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, 'tooltip-' + this.position);\n\n    // set the popover values based on direction\n    switch (position) {\n      case 'top-right':\n        this.anchorPoint = Point.TOP_CENTER;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'top-left':\n        this.anchorPoint = Point.TOP_CENTER;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      case 'bottom-right':\n        this.anchorPoint = Point.BOTTOM_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'bottom-left':\n        this.anchorPoint = Point.BOTTOM_CENTER;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'right':\n        this.anchorPoint = Point.RIGHT_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'left':\n        this.anchorPoint = Point.LEFT_CENTER;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      default:\n        this.anchorPoint = Point.RIGHT_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n    }\n  }\n\n  private _size: string;\n\n  get size() {\n    return this._size;\n  }\n\n  @Input('clrSize')\n  set size(size: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, 'tooltip-' + this.size);\n    if (size && SIZES.indexOf(size) > -1) {\n      this._size = size;\n    } else {\n      this._size = 'sm';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, 'tooltip-' + this.size);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener } from '@angular/core';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrTooltipTrigger]',\n  host: {\n    tabindex: '0',\n    '[class.tooltip-trigger]': 'true',\n    '[attr.aria-describedby]': 'ariaDescribedBy',\n    '[attr.role]': '\"button\"',\n  },\n})\nexport class ClrTooltipTrigger {\n  public ariaDescribedBy;\n  private subs: Subscription[] = [];\n  constructor(private toggleService: ClrPopoverToggleService, private tooltipIdService: TooltipIdService) {\n    // The aria-described by comes from the id of content. It\n    this.subs.push(this.tooltipIdService.id.subscribe(tooltipId => (this.ariaDescribedBy = tooltipId)));\n  }\n\n  @HostListener('mouseenter')\n  @HostListener('focus')\n  showTooltip(): void {\n    this.toggleService.open = true;\n  }\n\n  @HostListener('mouseleave')\n  @HostListener('blur')\n  hideTooltip(): void {\n    this.toggleService.open = false;\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\n\nimport { ClrTooltip } from './tooltip';\nimport { ClrTooltipContent } from './tooltip-content';\nimport { ClrTooltipTrigger } from './tooltip-trigger';\n\nexport const CLR_TOOLTIP_DIRECTIVES: Type<any>[] = [ClrTooltip, ClrTooltipTrigger, ClrTooltipContent];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_TOOLTIP_DIRECTIVES],\n  exports: [CLR_TOOLTIP_DIRECTIVES, ClrConditionalModule, ClrIconModule],\n})\nexport class ClrTooltipModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrDropdownModule } from './dropdown/dropdown.module';\nimport { ClrSignpostModule } from './signpost/signpost.module';\nimport { ClrTooltipModule } from './tooltip/tooltip.module';\n\n@NgModule({ exports: [ClrDropdownModule, ClrSignpostModule, ClrTooltipModule] })\nexport class ClrPopoverModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class ButtonHubService {\n  public buttonsReady: boolean = false;\n\n  private _previousBtnClicked = new Subject<any>();\n  public get previousBtnClicked(): Observable<any> {\n    return this._previousBtnClicked.asObservable();\n  }\n\n  private _nextBtnClicked = new Subject<any>();\n  public get nextBtnClicked(): Observable<any> {\n    return this._nextBtnClicked.asObservable();\n  }\n\n  private _dangerBtnClicked = new Subject<any>();\n  public get dangerBtnClicked(): Observable<any> {\n    return this._dangerBtnClicked.asObservable();\n  }\n\n  private _cancelBtnClicked = new Subject<any>();\n  public get cancelBtnClicked(): Observable<any> {\n    return this._cancelBtnClicked.asObservable();\n  }\n\n  private _finishBtnClicked = new Subject<any>();\n  public get finishBtnClicked(): Observable<any> {\n    return this._finishBtnClicked.asObservable();\n  }\n\n  private _customBtnClicked = new Subject<any>();\n  public get customBtnClicked(): Observable<any> {\n    return this._customBtnClicked.asObservable();\n  }\n\n  public buttonClicked(buttonType: string): void {\n    if ('previous' === buttonType) {\n      this._previousBtnClicked.next();\n    } else if ('next' === buttonType) {\n      this._nextBtnClicked.next();\n    } else if ('finish' === buttonType) {\n      this._finishBtnClicked.next();\n    } else if ('danger' === buttonType) {\n      this._dangerBtnClicked.next();\n    } else if ('cancel' === buttonType) {\n      this._cancelBtnClicked.next();\n    } else {\n      this._customBtnClicked.next(buttonType);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, QueryList } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrWizardPage } from '../wizard-page';\n\n/**\n * PageCollectionService manages the collection of pages assigned to the wizard and offers\n * a number of functions useful across the wizards providers and subcomponents -- all related\n * to essentially lookups on the collection of pages.\n *\n * The easiest way to access PageCollectionService is via the wizard. The\n * following example would allow you to access your instance of the wizard from your host\n * component and thereby access the page collection via YourHostComponent.wizard.pageCollection.\n *\n * @example\n * <clr-wizard #wizard ...>\n *\n * @example\n * export class YourHostComponent {\n *   @ViewChild(\"wizard\") wizard: Wizard;\n *   ...\n * }\n *\n * The heart of the page collection is the query list of pages, which it is assigned as a\n * reference to the Wizard.pages QueryList when the wizard is created.\n *\n */\n@Injectable()\nexport class PageCollectionService {\n  /**\n   * A reference to the Wizard.pages QueryList.\n   *\n   * Populated when the wizard is created.\n   *\n   * @memberof PageCollectionService\n   */\n  public pages: QueryList<ClrWizardPage>;\n\n  /**\n   * Converts the PageCollectionService.pages QueryList to an array and returns it.\n   *\n   * Useful for many instances when you would prefer a QueryList to act like an array.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesAsArray(): ClrWizardPage[] {\n    return this.pages ? this.pages.toArray() : [];\n  }\n\n  /**\n   * Returns the length of the pages query list.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesCount(): number {\n    return this.pages ? this.pages.length : 0;\n  }\n\n  /**\n   * Returns the next-to-last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get penultimatePage(): ClrWizardPage {\n    const pageCount = this.pagesCount;\n\n    if (pageCount < 2) {\n      return;\n    }\n\n    return this.pagesAsArray[pageCount - 2];\n  }\n\n  /**\n   * Returns the last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get lastPage(): ClrWizardPage {\n    const pageCount = this.pagesCount;\n\n    if (pageCount < 1) {\n      return;\n    }\n\n    return this.pagesAsArray[pageCount - 1];\n  }\n\n  /**\n   * Returns the first page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get firstPage(): ClrWizardPage {\n    if (!this.pagesCount) {\n      return;\n    }\n\n    return this.pagesAsArray[0];\n  }\n\n  /**\n   * Used mostly internally, but accepts a string ID and returns a ClrWizardPage\n   * object that matches the ID passed. Note that IDs here should include the prefix\n   * \"clr-wizard-page-\".\n   *\n   * Returns the next-to-last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageById(id: string): ClrWizardPage {\n    const foundPages: ClrWizardPage[] = this.pages.filter((page: ClrWizardPage) => id === page.id);\n    return this.checkResults(foundPages, id);\n  }\n\n  /**\n   * Accepts s number as a parameter and treats that number as the index of the page\n   * you're looking for in the collection of pages. Returns a  wizard page object.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageByIndex(index: number): ClrWizardPage {\n    const pageCount = this.pagesCount;\n    const pagesLastIndex: number = pageCount > 1 ? pageCount - 1 : 0;\n\n    if (index < 0) {\n      throw new Error('Cannot retrieve page with index of ' + index);\n    }\n\n    if (index > pagesLastIndex) {\n      throw new Error('Page index is greater than length of pages array.');\n    }\n\n    return this.pagesAsArray[index];\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns its index in the\n   * collection of pages.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageIndex(page: ClrWizardPage): number {\n    const index = this.pagesAsArray.indexOf(page);\n\n    if (index < 0) {\n      throw new Error('Requested page cannot be found in collection of pages.');\n    }\n\n    return index;\n  }\n\n  /**\n   * Consolidates guard logic that prevents a couple of unfortunate edge cases with\n   * look ups on the collection of pages.\n   *\n   * @memberof PageCollectionService\n   */\n  private checkResults(results: ClrWizardPage[], requestedPageId: string) {\n    const foundPagesCount: number = results.length || 0;\n\n    if (foundPagesCount > 1) {\n      throw new Error('More than one page has the requested id ' + requestedPageId + '.');\n    } else if (foundPagesCount < 1) {\n      throw new Error('No page can be found with the id ' + requestedPageId + '.');\n    } else {\n      return results[0];\n    }\n  }\n\n  /**\n   * Accepts two numeric indexes and returns an array of wizard page objects that include\n   * all wizard pages in the page collection from the first index to the second.\n   *\n   * @memberof PageCollectionService\n   */\n  public pageRange(start: number, end: number): ClrWizardPage[] {\n    let pages: ClrWizardPage[] = [];\n\n    if (start < 0 || end < 0) {\n      return [];\n    }\n\n    if (start === null || typeof start === 'undefined' || isNaN(start)) {\n      return [];\n    }\n\n    if (end === null || typeof end === 'undefined' || isNaN(end)) {\n      return [];\n    }\n\n    if (end > this.pagesCount) {\n      end = this.pagesCount;\n    }\n\n    pages = this.pagesAsArray;\n\n    if (end - start === 0) {\n      // just return the one page they want\n      return [this.getPageByIndex(start)];\n    }\n\n    // slice end does not include item referenced by end index, which is weird for users\n    // incrementing end index here to correct that so users and other methods\n    // don't have to think about it\n    end = end + 1;\n\n    // slice does not return the last one in the range but it does include the first one\n    // does not modify original array\n    return pages.slice(start, end);\n  }\n\n  /**\n   * Accepts two wizard page objects and returns those page objects with all other page\n   * objects between them in the page collection. It doesn't care which page is ahead of the\n   * other in the parameters. It will be smart enough to figure that out  on its own.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageRangeFromPages(page: ClrWizardPage, otherPage: ClrWizardPage): ClrWizardPage[] {\n    const pageIndex = this.getPageIndex(page);\n    const otherPageIndex = this.getPageIndex(otherPage);\n    let startIndex: number;\n    let endIndex: number;\n\n    if (pageIndex <= otherPageIndex) {\n      startIndex = pageIndex;\n      endIndex = otherPageIndex;\n    } else {\n      startIndex = otherPageIndex;\n      endIndex = pageIndex;\n    }\n    return this.pageRange(startIndex, endIndex);\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns the wizard page object of\n   * the page immediately before it in the page collection. Returns null if there is\n   * no page before the page it is passed.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPreviousPage(page: ClrWizardPage) {\n    const myPageIndex = this.getPageIndex(page);\n    const previousPageIndex = myPageIndex - 1;\n    if (previousPageIndex < 0) {\n      return null;\n    }\n    return this.getPageByIndex(previousPageIndex);\n  }\n\n  /**\n   * Accepts a wizard page object as a parameter and returns a Boolean that says if\n   * the page you sent it is complete.\n   *\n   * @memberof PageCollectionService\n   */\n  public previousPageIsCompleted(page: ClrWizardPage) {\n    let previousPage: ClrWizardPage;\n\n    if (!page) {\n      return false;\n    }\n\n    previousPage = this.getPreviousPage(page);\n\n    if (null === previousPage) {\n      // page is the first page. no previous page.\n      return true;\n    }\n\n    return previousPage.completed;\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns the wizard page object of\n   * the page immediately after it in the page collection. Returns null if there is\n   * no page after the page it is passed.\n   *\n   * @memberof PageCollectionService\n   */\n  public getNextPage(page: ClrWizardPage) {\n    const myPageIndex = this.getPageIndex(page);\n    const nextPageIndex = myPageIndex + 1;\n\n    if (nextPageIndex >= this.pagesAsArray.length) {\n      return null;\n    }\n    return this.getPageByIndex(nextPageIndex);\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and generates a step item id from the\n   * page ID. Returns the generated step item ID as a string.\n   *\n   * @memberof PageCollectionService\n   */\n  public getStepItemIdForPage(page: ClrWizardPage) {\n    const pageId = page.id;\n    const pageIdParts = pageId.split('-').reverse();\n\n    pageIdParts[1] = 'step';\n    return pageIdParts.reverse().join('-');\n  }\n\n  /**\n   * Generally only used internally to mark that a specific page has been \"committed\".\n   * This involves marking the page complete and firing the ClrWizardPage.onCommit\n   * (clrWizardPageOnCommit) output. Takes the wizard page object that you intend to\n   * mark completed as a parameter.\n   *\n   * @memberof PageCollectionService\n   */\n  public commitPage(page: ClrWizardPage) {\n    const pageHasOverrides = page.stopNext || page.preventDefault;\n    page.completed = true;\n\n    if (!pageHasOverrides) {\n      // prevent loop of event emission; alternate flows work off\n      // of event emitters this is how they break that cycle.\n      page.onCommit.emit(page.id);\n    }\n  }\n\n  // used by the navService to navigate back to first possible step after\n  // pages are reset\n\n  /**\n   *\n   * @memberof PageCollectionService\n   */\n  private _pagesReset = new Subject<boolean>();\n\n  /**\n   * An observable that the navigation service listens to in order to know when\n   * the page collection completed states have been reset to false so that way it\n   * can also reset the navigation to make the first page in the page collection\n   * current/active.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesReset(): Observable<boolean> {\n    return this._pagesReset.asObservable();\n  }\n\n  /**\n   * Sets all completed states of the pages in the page collection to false and\n   * notifies the navigation service to likewise reset the navigation.\n   *\n   * @memberof PageCollectionService\n   */\n  public reset() {\n    this.pagesAsArray.forEach((page: ClrWizardPage) => {\n      page.completed = false;\n    });\n    this._pagesReset.next(true);\n  }\n\n  /**\n   * Rolls through all the pages in the page collection to make sure there are no\n   * incomplete pages sandwiched between completed pages in the workflow. Identifies\n   * the first incomplete page index and sets all pages behind it to a completed\n   * state of false.\n   *\n   * @memberof PageCollectionService\n   */\n  public updateCompletedStates(): void {\n    const firstIncompleteIndex = this.findFirstIncompletePageIndex();\n\n    if (firstIncompleteIndex === this.pagesAsArray.length - 1) {\n      // all complete no need to do anything\n      return;\n    }\n\n    this.pagesAsArray.forEach((page: ClrWizardPage, index: number) => {\n      if (index > firstIncompleteIndex) {\n        page.completed = false;\n      }\n    });\n  }\n\n  /**\n   * Retrieves the index of the first incomplete page in the page collection.\n   *\n   * @memberof PageCollectionService\n   */\n  public findFirstIncompletePageIndex(): number {\n    let returnIndex: number = null;\n    this.pagesAsArray.forEach((page: ClrWizardPage, index: number) => {\n      if (null === returnIndex && false === page.completed) {\n        returnIndex = index;\n      }\n    });\n\n    // fallthrough, all completed, return last page\n    if (null === returnIndex) {\n      returnIndex = this.pagesCount - 1;\n    }\n\n    return returnIndex;\n  }\n\n  public findFirstIncompletePage(): ClrWizardPage {\n    const myIncompleteIndex = this.findFirstIncompletePageIndex();\n    return this.pagesAsArray[myIncompleteIndex];\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\nimport { ClrWizardPage } from '../wizard-page';\n\nimport { ButtonHubService } from './button-hub.service';\nimport { PageCollectionService } from './page-collection.service';\n\n/**\n * Performs navigation functions for a wizard and manages the current page. Presented as a\n * separate service to encapsulate the behavior of navigating and completing the wizard so\n * that it can be shared across the wizard and its sub-components.\n *\n * The easiest way to access the navigation service is there a reference on your wizard. The\n * Following example would allow you to access your instance of the wizard from your host\n * component and thereby access the navigation service via YourHostComponent.wizard.navService.\n *\n * @example\n * <clr-wizard #wizard ...>\n *\n * @example\n * export class YourHostComponent {\n *   @ViewChild(\"wizard\") wizard: Wizard;\n *   ...\n * }\n *\n */\n@Injectable()\nexport class WizardNavigationService implements OnDestroy {\n  /**\n   * Is notified when a previous button is clicked in the wizard. Performs checks\n   * before alerting the current page of the button click. Enacts navigation to\n   * the previous page if not overridden at the page level.\n   *\n   * @memberof WizardNavigationService\n   */\n  public previousButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Next button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public nextButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a danger button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public dangerButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a  finish button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public finishButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Custom button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public customButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Cancel button is clicked in the wizard. Notifies the wizard,\n   * which handles all cancel functionality, if cancel is not overridden at the page\n   * level.\n   *\n   * @memberof WizardNavigationService\n   */\n  public cancelButtonSubscription: Subscription;\n\n  /**\n   * Resets navigation to make the first page current when the page collection service\n   * emits an event notifying WizardNavigationService that it has reset all pages\n   * to their pristine, incomplete state.\n   *\n   * @memberof WizardNavigationService\n   */\n  public pagesResetSubscription: Subscription;\n\n  /**\n   * Creates an instance of WizardNavigationService. Also sets up subscriptions\n   * that listen to the button service to determine when a button has been clicked\n   * in the wizard. Is also responsible for taking action when the page collection\n   * requests that navigation be reset to its pristine state.\n   *\n   * @memberof WizardNavigationService\n   */\n  constructor(public pageCollection: PageCollectionService, public buttonService: ButtonHubService) {\n    this.previousButtonSubscription = this.buttonService.previousBtnClicked.subscribe(() => {\n      const currentPage = this.currentPage;\n      if (this.currentPageIsFirst || currentPage.previousStepDisabled) {\n        return;\n      }\n      currentPage.previousButtonClicked.emit(currentPage);\n      if (!currentPage.preventDefault) {\n        this.previous();\n      }\n    });\n\n    this.nextButtonSubscription = this.buttonService.nextBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('next');\n    });\n\n    this.dangerButtonSubscription = this.buttonService.dangerBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('danger');\n    });\n\n    this.finishButtonSubscription = this.buttonService.finishBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('finish');\n    });\n\n    this.customButtonSubscription = this.buttonService.customBtnClicked.subscribe((type: string) => {\n      if (!this.wizardStopNavigation) {\n        this.currentPage.customButtonClicked.emit(type);\n      }\n    });\n\n    this.cancelButtonSubscription = this.buttonService.cancelBtnClicked.subscribe(() => {\n      if (this.wizardStopNavigation) {\n        return;\n      }\n\n      if (this.currentPage.preventDefault) {\n        this.currentPage.pageOnCancel.emit(this.currentPage);\n      } else {\n        this.cancel();\n      }\n    });\n\n    this.pagesResetSubscription = this.pageCollection.pagesReset.subscribe(() => {\n      this.setFirstPageCurrent();\n    });\n  }\n\n  /**\n   *\n   * @memberof WizardNavigationService\n   */\n  ngOnDestroy(): void {\n    this.previousButtonSubscription.unsubscribe();\n    this.nextButtonSubscription.unsubscribe();\n    this.dangerButtonSubscription.unsubscribe();\n    this.finishButtonSubscription.unsubscribe();\n    this.customButtonSubscription.unsubscribe();\n    this.cancelButtonSubscription.unsubscribe();\n    this.pagesResetSubscription.unsubscribe();\n  }\n\n  /**\n   *\n   * @memberof WizardNavigationService\n   */\n  private _currentChanged = new Subject<ClrWizardPage>();\n\n  /**\n   * An Observable that is predominantly used amongst the subcomponents and services\n   * of the wizard. It is recommended that users listen to the ClrWizardPage.onLoad\n   * (clrWizardPageOnLoad) output instead of this Observable.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageChanged(): Observable<ClrWizardPage> {\n    // TODO: MAKE SURE EXTERNAL OUTPUTS SAY 'CHANGE' NOT 'CHANGED'\n    // A BREAKING CHANGE SO AWAITING MINOR RELEASE\n    return this._currentChanged.asObservable();\n  }\n\n  /**\n   * A Boolean flag used by the ClrWizardPage to avoid a race condition when pages are\n   * loading and there is no current page defined.\n   *\n   * @memberof WizardNavigationService\n   */\n  public navServiceLoaded = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.forceForward (clrWizardForceForwardNavigation) input. When true,\n   * navigating backwards in the stepnav menu will reset any skipped pages' completed\n   * state to false.\n   *\n   * This is useful when a wizard executes validation on a page-by-page basis when\n   * the next button is clicked.\n   *\n   * @memberof WizardNavigationService\n   */\n  public forceForwardNavigation = false;\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  public get currentPageTitle(): TemplateRef<any> {\n    // when the querylist of pages is empty. this is the first place it fails...\n    if (!this.currentPage) {\n      return null;\n    }\n    return this.currentPage.title;\n  }\n\n  /**\n   * Returns a Boolean that tells you whether or not the current page is the first\n   * page in the Wizard.\n   *\n   * This is helpful for determining whether a page is navigable.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageIsFirst(): boolean {\n    return this.pageCollection.firstPage === this.currentPage;\n  }\n\n  /**\n   * Returns a Boolean that tells you whether or not the current page is the\n   * last page in the Wizard.\n   *\n   * This is used to determine which buttons should display in the wizard footer.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageIsLast(): boolean {\n    return this.pageCollection.lastPage === this.currentPage;\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _currentPage: ClrWizardPage;\n\n  /**\n   * Returns the ClrWizardPage object of the current page or null.\n   *\n   * @memberof WizardNavigationService\n   */\n  get currentPage(): ClrWizardPage {\n    if (!this._currentPage) {\n      return null;\n    }\n    return this._currentPage;\n  }\n\n  /**\n   * Accepts a ClrWizardPage object, since that object to be the current/active\n   * page in the wizard, and emits the ClrWizardPage.onLoad (clrWizardPageOnLoad)\n   * event for that page.\n   *\n   * Note that all of this work is bypassed if the ClrWizardPage object is already\n   * the current page.\n   *\n   * @memberof WizardNavigationService\n   */\n  set currentPage(page: ClrWizardPage) {\n    if (this._currentPage !== page && !this.wizardStopNavigation) {\n      this._currentPage = page;\n      page.onLoad.emit(page.id);\n      this._currentChanged.next(page);\n    }\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _movedToNextPage = new Subject<boolean>();\n\n  /**\n   * An observable used internally to alert the wizard that forward navigation\n   * has occurred. It is recommended that you use the Wizard.onMoveNext\n   * (clrWizardOnNext) output instead of this one.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get movedToNextPage(): Observable<boolean> {\n    return this._movedToNextPage.asObservable();\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _wizardFinished = new Subject<boolean>();\n\n  /**\n   * An observable used internally to alert the wizard that the nav service\n   * has approved completion of the wizard.\n   *\n   * It is recommended that you use the Wizard.wizardFinished (clrWizardOnFinish)\n   * output instead of this one.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get wizardFinished(): Observable<boolean> {\n    return this._wizardFinished.asObservable();\n  }\n\n  /**\n   * This is a public function that can be used to programmatically advance\n   * the user to the next page.\n   *\n   * When invoked, this method will move the wizard to the next page after\n   * successful validation. Note that this method goes through all checks\n   * and event emissions as if Wizard.next(false) had been called.\n   *\n   * In most cases, it makes more sense to use Wizard.next(false).\n   *\n   * @memberof WizardNavigationService\n   */\n  public next(): void {\n    if (this.currentPageIsLast) {\n      this.checkAndCommitCurrentPage('finish');\n    } else {\n      this.checkAndCommitCurrentPage('next');\n    }\n  }\n\n  /**\n   * Bypasses checks and most event emissions to force a page to navigate forward.\n   *\n   * Comparable to calling Wizard.next() or Wizard.forceNext().\n   *\n   * @memberof WizardNavigationService\n   */\n  public forceNext(): void {\n    const currentPage: ClrWizardPage = this.currentPage;\n    const nextPage: ClrWizardPage = this.pageCollection.getNextPage(currentPage);\n\n    // catch errant null or undefineds that creep in\n    if (!nextPage) {\n      throw new Error('The wizard has no next page to go to.');\n    }\n\n    if (this.wizardStopNavigation) {\n      return;\n    }\n\n    if (!currentPage.completed) {\n      // this is a state that alt next flows can get themselves in...\n      this.pageCollection.commitPage(currentPage);\n    }\n    this.currentPage = nextPage;\n  }\n\n  /**\n   * Accepts a button/action type as a parameter. Encapsulates all logic for\n   * event emissions, state of the current page, and wizard and page level overrides.\n   *\n   * Avoid calling this function directly unless you really know what you're doing.\n   *\n   * @memberof WizardNavigationService\n   */\n  public checkAndCommitCurrentPage(buttonType: string): void {\n    const currentPage: ClrWizardPage = this.currentPage;\n    let iAmTheLastPage: boolean;\n\n    let isNext: boolean;\n    let isDanger: boolean;\n    let isDangerNext: boolean;\n    let isDangerFinish: boolean;\n    let isFinish: boolean;\n\n    if (!currentPage.readyToComplete || this.wizardStopNavigation) {\n      return;\n    }\n\n    iAmTheLastPage = this.currentPageIsLast;\n\n    isNext = buttonType === 'next';\n    isDanger = buttonType === 'danger';\n    isDangerNext = isDanger && !iAmTheLastPage;\n    isDangerFinish = isDanger && iAmTheLastPage;\n    isFinish = buttonType === 'finish' || isDangerFinish;\n\n    if (isFinish && !iAmTheLastPage) {\n      return;\n    }\n\n    currentPage.primaryButtonClicked.emit(buttonType);\n\n    if (isFinish) {\n      currentPage.finishButtonClicked.emit(currentPage);\n    } else if (isDanger) {\n      currentPage.dangerButtonClicked.emit();\n    } else if (isNext) {\n      currentPage.nextButtonClicked.emit();\n    }\n\n    if (currentPage.stopNext || currentPage.preventDefault) {\n      currentPage.onCommit.emit(currentPage.id);\n      return;\n    }\n\n    // order is very important with these emitters!\n    if (isFinish) {\n      // mark page as complete\n      if (!this.wizardHasAltNext) {\n        this.pageCollection.commitPage(currentPage);\n      }\n      this._wizardFinished.next();\n    }\n\n    if (this.wizardHasAltNext) {\n      this.pageCollection.commitPage(currentPage);\n\n      if (isNext || isDangerNext) {\n        this._movedToNextPage.next(true);\n      }\n      // jump out here, no matter what type we're looking at\n      return;\n    }\n\n    if (isNext || isDangerNext) {\n      this.forceNext();\n    }\n\n    if (!this.wizardHasAltNext && !this.wizardStopNavigation) {\n      this._movedToNextPage.next(true);\n    }\n  }\n\n  /**\n   * This is a public function that can be used to programmatically conclude\n   * the wizard.\n   *\n   * When invoked, this method will  initiate the work involved with finalizing\n   * and finishing the wizard workflow. Note that this method goes through all\n   * checks and event emissions as if Wizard.finish(false) had been called.\n   *\n   * In most cases, it makes more sense to use Wizard.finish(false).\n   *\n   * @memberof WizardNavigationService\n   */\n  public finish(): void {\n    this.checkAndCommitCurrentPage('finish');\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _movedToPreviousPage = new Subject<boolean>();\n\n  /**\n   * Notifies the wizard when backwards navigation has occurred via the\n   * previous button.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get movedToPreviousPage(): Observable<boolean> {\n    return this._movedToPreviousPage.asObservable();\n  }\n\n  /**\n   * Programmatically moves the wizard to the page before the current page.\n   *\n   * In most instances, it makes more sense to call Wizard.previous()\n   * which does the same thing.\n   *\n   * @memberof WizardNavigationService\n   */\n  public previous(): void {\n    let previousPage: ClrWizardPage;\n\n    if (this.currentPageIsFirst || this.wizardStopNavigation) {\n      return;\n    }\n\n    previousPage = this.pageCollection.getPreviousPage(this.currentPage);\n\n    if (!previousPage) {\n      return;\n    }\n\n    this._movedToPreviousPage.next(true);\n\n    if (this.forceForwardNavigation) {\n      this.currentPage.completed = false;\n    }\n\n    this.currentPage = previousPage;\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _cancelWizard = new Subject<any>();\n\n  /**\n   * Notifies the wizard that a user is trying to cancel it.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get notifyWizardCancel(): Observable<any> {\n    return this._cancelWizard.asObservable();\n  }\n\n  /**\n   * Allows a hook into the cancel workflow of the wizard from the nav service. Note that\n   * this route goes through all checks and event emissions as if a cancel button had\n   * been clicked.\n   *\n   * In most cases, users looking for a hook into the cancel routine are actually looking\n   * for a way to close the wizard from their host component because they have prevented\n   * the default cancel action.\n   *\n   * In this instance, it is recommended that you use Wizard.close() to avoid any event\n   * emission loop resulting from an event handler calling back into routine that will\n   * again evoke the events it handles.\n   *\n   * @memberof WizardNavigationService\n   */\n  public cancel(): void {\n    this._cancelWizard.next();\n  }\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopCancel (clrWizardPreventDefaultCancel) input. When true, the cancel\n   * routine is subverted and must be reinstated in the host component calling Wizard.close()\n   * at some point.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardHasAltCancel: boolean = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopNext (clrWizardPreventDefaultNext) input. When true, the next and finish\n   * routines are subverted and must be reinstated in the host component calling Wizard.next(),\n   * Wizard.forceNext(), Wizard.finish(), or Wizard.forceFinish().\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardHasAltNext: boolean = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopNavigation (clrWizardPreventNavigation) input. When true, all\n   * navigational elements in the wizard are disabled.\n   *\n   * This is intended to freeze the wizard in place. Events are not fired so this is\n   * not a way to implement alternate functionality for navigation.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardStopNavigation: boolean = false;\n\n  /**\n   * A boolean flag shared with the stepnav items that prevents user clicks on\n   * stepnav items from navigating the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardDisableStepnav: boolean = false;\n\n  /**\n   * Performs all required checks to determine if a user can navigate to a page. Checking at each\n   * point if a page is navigable -- completed where the page immediately after the last completed\n   * page.\n   *\n   * Takes two parameters. The first one must be either the ClrWizardPage object or the ID of the\n   * ClrWizardPage object that you want to make the current page.\n   *\n   * The second parameter is optional and is a Boolean flag for \"lazy completion\". What this means\n   * is the Wizard will mark all pages between the current page and the page you want to navigate\n   * to as completed. This is useful for informational wizards that do not require user action,\n   * allowing an easy means for users to jump ahead.\n   *\n   * To avoid checks on navigation, use ClrWizardPage.makeCurrent() instead.\n   *\n   * @memberof WizardNavigationService\n   */\n  public goTo(pageToGoToOrId: any, lazyComplete: boolean = false) {\n    let pageToGoTo: ClrWizardPage;\n    let currentPage: ClrWizardPage;\n    let myPages: PageCollectionService;\n    let pagesToCheck: ClrWizardPage[];\n    let okayToMove: boolean;\n    let goingForward: boolean;\n    let currentPageIndex: number;\n    let goToPageIndex: number;\n\n    myPages = this.pageCollection;\n    pageToGoTo = typeof pageToGoToOrId === 'string' ? myPages.getPageById(pageToGoToOrId) : pageToGoToOrId;\n    currentPage = this.currentPage;\n\n    // no point in going to the current page. you're there already!\n    // also hard block on any navigation when stopNavigation is true\n    if (pageToGoTo === currentPage || this.wizardStopNavigation) {\n      return;\n    }\n\n    currentPageIndex = myPages.getPageIndex(currentPage);\n    goToPageIndex = myPages.getPageIndex(pageToGoTo);\n    goingForward = goToPageIndex > currentPageIndex;\n    pagesToCheck = myPages.getPageRangeFromPages(this.currentPage, pageToGoTo);\n\n    okayToMove = lazyComplete || this.canGoTo(pagesToCheck);\n\n    if (!okayToMove) {\n      return;\n    }\n\n    if (goingForward && lazyComplete) {\n      pagesToCheck.forEach((page: ClrWizardPage) => {\n        if (page !== pageToGoTo) {\n          page.completed = true;\n        }\n      });\n    } else if (!goingForward && this.forceForwardNavigation) {\n      pagesToCheck.forEach((page: ClrWizardPage) => {\n        page.completed = false;\n      });\n    }\n\n    this.currentPage = pageToGoTo;\n  }\n\n  /**\n   * Accepts a range of ClrWizardPage objects as a parameter. Performs the work of checking\n   * those objects to determine if navigation can be accomplished.\n   *\n   * @memberof WizardNavigationService\n   */\n  public canGoTo(pagesToCheck: ClrWizardPage[]): boolean {\n    let okayToMove = true;\n    const myPages = this.pageCollection;\n\n    // previous page can be important when moving because if it's completed it\n    // allows us to move to the page even if it's incomplete...\n    let previousPagePasses: boolean;\n\n    if (!pagesToCheck || pagesToCheck.length < 1) {\n      return false;\n    }\n\n    pagesToCheck.forEach((page: ClrWizardPage) => {\n      let previousPage: ClrWizardPage;\n\n      if (!okayToMove) {\n        return;\n      }\n\n      if (page.completed) {\n        // default is true. just jump out instead of complicating it.\n        return;\n      }\n\n      // so we know our page is not completed...\n      previousPage = myPages.getPageIndex(page) > 0 ? myPages.getPreviousPage(page) : null;\n      previousPagePasses = previousPage === null || previousPage.completed === true;\n\n      // we are false if not the current page AND previous page is not completed\n      // (but must have a previous page)\n      if (!page.current && !previousPagePasses) {\n        okayToMove = false;\n      }\n      // falls through to true as default\n    });\n\n    return okayToMove;\n  }\n\n  /**\n   * Looks through the collection of pages to find the first one that is incomplete\n   * and makes that page the current/active page.\n   *\n   * @memberof WizardNavigationService\n   */\n  public setLastEnabledPageCurrent(): void {\n    const allPages: ClrWizardPage[] = this.pageCollection.pagesAsArray;\n    let lastCompletedPageIndex: number = null;\n\n    allPages.forEach((page: ClrWizardPage, index: number) => {\n      if (page.completed) {\n        lastCompletedPageIndex = index;\n      }\n    });\n\n    if (lastCompletedPageIndex === null) {\n      // always is at least the first item...\n      lastCompletedPageIndex = 0;\n    } else if (lastCompletedPageIndex + 1 < allPages.length) {\n      lastCompletedPageIndex = lastCompletedPageIndex + 1;\n    }\n\n    this.currentPage = allPages[lastCompletedPageIndex];\n  }\n\n  /**\n   * Finds the first page in the collection of pages and makes that page the\n   * current/active page.\n   *\n   * @memberof WizardNavigationService\n   */\n  public setFirstPageCurrent(): void {\n    this.currentPage = this.pageCollection.pagesAsArray[0];\n  }\n\n  /**\n   * Updates the stepnav on the left side of the wizard when pages are dynamically\n   * added or removed from the collection of pages.\n   *\n   * @memberof WizardNavigationService\n   */\n  public updateNavigation(): void {\n    let toSetCurrent: ClrWizardPage;\n    let currentPageRemoved: boolean;\n\n    this.pageCollection.updateCompletedStates();\n\n    currentPageRemoved = this.pageCollection.pagesAsArray.indexOf(this.currentPage) < 0;\n    if (currentPageRemoved) {\n      toSetCurrent = this.pageCollection.findFirstIncompletePage();\n      this.currentPage = toSetCurrent;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, QueryList } from '@angular/core';\nimport { ClrWizardHeaderAction } from '../wizard-header-action';\nimport { WizardNavigationService } from './wizard-navigation.service';\n\n@Injectable()\nexport class HeaderActionService {\n  // this service communicates information about the presence/display of header actions\n  // across the wizard\n\n  constructor(public navService: WizardNavigationService) {}\n\n  public wizardHeaderActions: QueryList<ClrWizardHeaderAction>;\n\n  public get wizardHasHeaderActions(): boolean {\n    const wizardHdrActions = this.wizardHeaderActions;\n    if (!wizardHdrActions) {\n      return false;\n    }\n    return wizardHdrActions.toArray().length > 0;\n  }\n\n  public get currentPageHasHeaderActions(): boolean {\n    return this.navService.currentPage ? this.navService.currentPage.hasHeaderActions : false;\n  }\n\n  public get showWizardHeaderActions(): boolean {\n    return !this.currentPageHasHeaderActions && this.wizardHasHeaderActions;\n  }\n\n  public get displayHeaderActionsWrapper(): boolean {\n    return this.currentPageHasHeaderActions || this.wizardHasHeaderActions;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nlet wizardHeaderActionIndex = 0;\n\n@Component({\n  selector: 'clr-wizard-header-action',\n  template: `\n        <button \n            type=\"button\"\n            class=\"btn clr-wizard-header-action btn-link\"\n            [id]=\"id\"\n            [class.disabled]=\"disabled\"\n            (click)=\"click()\"\n            [title]=\"title\">\n            <ng-content></ng-content>\n        </button>\n    `,\n  host: { class: 'clr-wizard-header-action-wrapper' },\n})\nexport class ClrWizardHeaderAction {\n  // title is explanatory text added to the header action\n  @Input('title') title: string = '';\n\n  // If our host has an ID attribute, we use this instead of our index.\n  @Input('id') _id: string = (wizardHeaderActionIndex++).toString();\n\n  public get id(): string {\n    return `clr-wizard-header-action-${this._id}`;\n  }\n\n  @Input('clrWizardHeaderActionDisabled') public disabled: boolean = false;\n\n  @Output('actionClicked') headerActionClicked: EventEmitter<string> = new EventEmitter(false);\n\n  click(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    // passing the header action id allows users to have one method that\n    // routes to many different actions based on the type of header action\n    // clicked. this is further aided by users being able to specify ids\n    // for their header actions.\n    this.headerActionClicked.emit(this._id);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageButtons]' })\nexport class ClrWizardPageButtons {\n  constructor(public pageButtonsTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageHeaderActions]' })\nexport class ClrWizardPageHeaderActions {\n  constructor(public pageHeaderActionsTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageNavTitle]' })\nexport class ClrWizardPageNavTitle {\n  constructor(public pageNavTitleTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageTitle]' })\nexport class ClrWizardPageTitle {\n  constructor(public pageTitleTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardPageButtons } from './wizard-page-buttons';\nimport { ClrWizardPageHeaderActions } from './wizard-page-header-actions';\nimport { ClrWizardPageNavTitle } from './wizard-page-navtitle';\nimport { ClrWizardPageTitle } from './wizard-page-title';\n\nlet wizardPageIndex = 0;\n\n/**\n * The ClrWizardPage component is responsible for displaying the content of each step\n * in the wizard workflow.\n *\n * ClrWizardPage component has hooks into the navigation service (ClrWizardPage.navService),\n * page collection (ClrWizardPage.pageCollection), and button service\n * (ClrWizardPage.buttonService). These three providers are shared across the components\n * within each instance of a Wizard.\n *\n */\n@Component({\n  selector: 'clr-wizard-page',\n  template: '<ng-content></ng-content>',\n  host: {\n    '[id]': 'id',\n    '[attr.aria-hidden]': '!current',\n    '[attr.aria-labelledby]': 'stepItemId',\n    '[class.active]': 'current',\n    '[class.clr-wizard-page]': 'true',\n  },\n})\nexport class ClrWizardPage implements OnInit {\n  /**\n   * Creates an instance of ClrWizardPage.\n   *\n   * @memberof WizardPage\n   */\n  constructor(\n    private navService: WizardNavigationService,\n    public pageCollection: PageCollectionService,\n    public buttonService: ButtonHubService\n  ) {}\n\n  /**\n   * Contains a reference to the page title which is used for a number\n   * of different tasks for display in the wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageTitle, { static: true })\n  public pageTitle: ClrWizardPageTitle;\n\n  /**\n   * Contains a reference to the desired title for the page's step in the\n   * navigation on the left side of the wizard. Can be projected to change the\n   * navigation link's text.\n   *\n   * If not defined, then ClrWizardPage.pageTitle will be displayed in the stepnav.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageNavTitle, { static: true })\n  public pageNavTitle: ClrWizardPageNavTitle;\n\n  /**\n   * Contains a reference to the buttons defined within the page. If not defined,\n   * the wizard defaults to the set of buttons defined as a direct child of the\n   * wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageButtons, { static: true })\n  public _buttons: ClrWizardPageButtons;\n\n  /**\n   * Contains a reference to the header actions defined within the page. If not defined,\n   * the wizard defaults to the set of header actions defined as a direct child of the\n   * wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageHeaderActions, { static: true })\n  public _headerActions: ClrWizardPageHeaderActions;\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _nextStepDisabled = false;\n\n  /**\n   * A getter that tells whether or not the wizard should be allowed\n   * to move to the next page.\n   *\n   * Useful for in-page validation because it prevents forward navigation\n   * and visibly disables the next button.\n   *\n   * Does not require that you re-implement navigation routines like you\n   * would if you were using ClrWizardPage.preventDefault or\n   * Wizard.preventDefault.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get nextStepDisabled(): boolean {\n    return this._nextStepDisabled;\n  }\n\n  /**\n   * Sets whether the page should allow forward navigation.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPageNextDisabled')\n  public set nextStepDisabled(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._nextStepDisabled) {\n      this._nextStepDisabled = valBool;\n      this.nextStepDisabledChange.emit(valBool);\n    }\n  }\n\n  /**\n   * Emits when the value of ClrWizardPage.nextStepDisabled changes.\n   * Should emit the new value of nextStepDisabled.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageNextDisabledChange') nextStepDisabledChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _previousStepDisabled = false;\n\n  /**\n   * A getter that tells whether or not the wizard should be allowed\n   * to move to the previous page.\n   *\n   * Useful for in-page validation because it prevents backward navigation\n   * and visibly disables the previous button.\n   *\n   * Does not require that you re-implement navigation routines like you\n   * would if you were using ClrWizardPage.preventDefault or\n   * Wizard.preventDefault.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get previousStepDisabled(): boolean {\n    return this._previousStepDisabled;\n  }\n\n  /**\n   * Sets whether the page should allow backward navigation.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPagePreviousDisabled')\n  public set previousStepDisabled(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._previousStepDisabled) {\n      this._previousStepDisabled = valBool;\n      this.previousStepDisabledChange.emit(valBool);\n    }\n  }\n\n  /**\n   * Emits when the value of ClrWizardPage.previousStepDisabled changes.\n   * Should emit the new value of previousStepDisabled.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePreviousDisabledChange')\n  public previousStepDisabledChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _hasError = false;\n\n  /**\n   * A getter that tells whether or not the page has an error.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get hasError() {\n    return this._hasError;\n  }\n\n  /**\n   * Sets whether the page has an error and also resolve the \"falsy\" value. The\n   * current logic treat a \"0\" or an empty string as false and likewise will treat any\n   * \"truthy\" value as true.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPageHasError')\n  public set hasError(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._hasError) {\n      this._hasError = valBool;\n    }\n  }\n\n  /**\n   * Overrides all actions from the page level, so you can use an alternate function for\n   * validation or data-munging with a ClrWizardPage.onCommit (clrWizardPageOnCommit output),\n   * ClrWizardPage.onCancel (clrWizardPageOnCancel output), or one\n   * of the granular page-level button click event emitters.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPagePreventDefault') public preventDefault: boolean = false;\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _stopCancel = false;\n\n  /**\n   * A getter that retrieves whether the page is preventing the cancel action.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stopCancel(): boolean {\n    return this._stopCancel;\n  }\n\n  /**\n   * Overrides the cancel action from the page level. Allows you to use an\n   * alternate function for validation or data-munging before cancelling the\n   * wizard when combined with the ClrWizardPage.onCancel\n   * (the clrWizardPageOnCancel output).\n   *\n   * Requires that you manually close the wizard from your host component,\n   * usually with a call to Wizard.forceNext() or wizard.next();\n   *\n   * @memberof ClrWizardPage\n   */\n  @Input('clrWizardPagePreventDefaultCancel')\n  public set stopCancel(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._stopCancel) {\n      this._stopCancel = valBool;\n      this.stopCancelChange.emit(valBool);\n    }\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePreventDefaultCancelChange') stopCancelChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _stopNext = false;\n\n  /**\n   * A getter that tells you whether the page is preventing the next action.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stopNext(): boolean {\n    return this._stopNext;\n  }\n\n  /**\n   * Overrides forward navigation from the page level. Allows you to use an\n   * alternate function for validation or data-munging before moving the\n   * wizard to the next pagewhen combined with the ClrWizardPage.onCommit\n   * (clrWizardPageOnCommit) or ClrWizardPage.nextButtonClicked\n   * (clrWizardPageNext) outputs.\n   *\n   * Requires that you manually tell the wizard to navigate forward from\n   * the hostComponent, usually with a call to Wizard.forceNext() or\n   * wizard.next();\n   *\n   * @memberof ClrWizardPage\n   */\n  @Input('clrWizardPagePreventDefaultNext')\n  public set stopNext(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._stopNext) {\n      this._stopNext = valBool;\n    }\n  }\n\n  /**\n   * An event emitter carried over from a legacy version of ClrWizardPage.\n   * Fires an event on ClrWizardPage whenever the next or finish buttons\n   * are clicked and the page is the current page of the Wizard.\n   *\n   * Note that this does not automatically emit an event when a custom\n   * button is used in place of a next or finish button.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnCommit') onCommit: EventEmitter<string> = new EventEmitter<string>(false);\n\n  /**\n   * Emits an event when ClrWizardPage becomes the current page of the\n   * Wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnLoad') onLoad: EventEmitter<string> = new EventEmitter();\n\n  /**\n   * Emits an event when the ClrWizardPage invokes the cancel routine for the wizard.\n   *\n   * Can be used in conjunction with the ClrWizardPage.stopCancel\n   * (clrWizardPagePreventDefaultCancel) or ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) inputs to implement custom cancel\n   * functionality at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before cancelling the wizard.\n   *\n   * Note that this requires you to call Wizard.close() from the host component.\n   * This constitues a full replacement of the cancel functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnCancel') pageOnCancel: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the finish button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom finish\n   * functionality at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to complete\n   * the wizard.\n   *\n   * Note that this requires you to call Wizard.finish() or Wizard.forceFinish()\n   * from the host component. This combination creates a full replacement of\n   * the finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageFinish') finishButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the previous button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom backwards\n   * navigation at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to go\n   * backwards in the wizard.\n   *\n   * Note that this requires you to call Wizard.previous()\n   * from the host component. This combination creates a full replacement of\n   * the backwards navigation functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePrevious') previousButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the next button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * navigation at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to go\n   * to the next page in the wizard.\n   *\n   * Note that this requires you to call Wizard.forceNext() or Wizard.next()\n   * from the host component. This combination creates a full replacement of\n   * the forward navigation functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageNext') nextButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when a danger button is clicked and the ClrWizardPage is\n   * the wizard's current page. By default, a danger button will act as\n   * either a \"next\" or \"finish\" button depending on if the ClrWizardPage is the\n   * last page or not.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * or finish navigation at the page level when the danger button is clicked.\n   * This is useful if you would like to do validation, save data, or warn\n   * users before allowing them to go to the next page in the wizard or\n   * finish the wizard.\n   *\n   * Note that this requires you to call Wizard.finish(), Wizard.forceFinish(),\n   * Wizard.forceNext() or Wizard.next() from the host component. This\n   * combination creates a full replacement of the forward navigation and\n   * finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageDanger') dangerButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when a next, finish, or danger button is clicked and the\n   * ClrWizardPage is the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * or finish navigation at the page level, regardless of the type of\n   * primary button.\n   *\n   * This is useful if you would like to do validation, save data, or warn\n   * users before allowing them to go to the next page in the wizard or\n   * finish the wizard.\n   *\n   * Note that this requires you to call Wizard.finish(), Wizard.forceFinish(),\n   * Wizard.forceNext() or Wizard.next() from the host component. This\n   * combination creates a full replacement of the forward navigation and\n   * finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePrimary') primaryButtonClicked: EventEmitter<string> = new EventEmitter();\n\n  @Output('clrWizardPageCustomButton') customButtonClicked: EventEmitter<string> = new EventEmitter();\n\n  /**\n   * An input value that is used internally to generate the ClrWizardPage ID as\n   * well as the step nav item ID.\n   *\n   * Typed as any because it should be able to accept numbers as well as\n   * strings. Passing an index for wizard whose pages are created with an\n   * ngFor loop is a common use case.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('id') _id: any = (wizardPageIndex++).toString();\n\n  /**\n   * A read-only getter that generates an ID string for the wizard page from\n   * either the value passed to the ClrWizardPage \"id\" input or a wizard page\n   * counter shared across all wizard pages in the application.\n   *\n   * Note that the value passed into the ID input Will be prefixed with\n   * \"clr-wizard-page-\".\n   *\n   * @readonly\n   *\n   * @memberof ClrWizardPage\n   */\n  public get id() {\n    // covers things like null, undefined, false, and empty string\n    // while allowing zero to pass\n    const idIsNonZeroFalsy = !this._id && this._id !== 0;\n\n    // in addition to non-zero falsy we also want to make sure _id is not a negative\n    // number.\n    if (idIsNonZeroFalsy || this._id < 0) {\n      // guard here in the event that input becomes undefined or null by accident\n      this._id = (wizardPageIndex++).toString();\n    }\n    return `clr-wizard-page-${this._id}`;\n  }\n\n  /**\n   * A read-only getter that serves as a convenience for those who would rather\n   * not think in the terms of !ClrWizardPage.nextStepDisabled. For some use cases,\n   * ClrWizardPage.readyToComplete is more logical and declarative.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get readyToComplete(): boolean {\n    return !this.nextStepDisabled;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _complete: boolean = false;\n\n  /**\n   * A page is marked as completed if it is both readyToComplete and completed,\n   * as in the next or finish action has been executed while this page was current.\n   *\n   * Note there is and open question about how to handle pages that are marked\n   * complete but who are no longer readyToComplete. This might indicate an error\n   * state for the ClrWizardPage. Currently, the wizard does not acknowledge this state\n   * and only returns that the page is incomplete.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get completed(): boolean {\n    return this._complete && this.readyToComplete;\n\n    // FOR V2: UNWIND COMPLETED, READYTOCOMPLETE, AND ERRORS\n    // SUCH THAT ERRORS IS ITS OWN INPUT. IF A STEP IS\n    // INCOMPLETE AND ERRORED, ERRORED WILL NOT SHOW.\n    // FIRST QUESTION: AM I GREY OR COLORED?\n    // SECOND QUESTION: AM I GREEN OR RED?\n  }\n\n  /**\n   * A ClrWizardPage can be manually set to completed using this boolean setter.\n   * It is recommended that users rely on the convenience functions in the wizard\n   * and navigation service instead of manually setting pages’ completion state.\n   *\n   * @memberof ClrWizardPage\n   */\n  public set completed(value: boolean) {\n    this._complete = value;\n  }\n\n  /**\n   * Checks with the navigation service to see if it is the current page.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get current(): boolean {\n    return this.navService.currentPage === this;\n  }\n\n  public get disabled(): boolean {\n    return !this.enabled;\n  }\n\n  /**\n   * A read-only getter that returns whether or not the page is navigable\n   * in the wizard. A wizard page can be navigated to if it is completed\n   * or the page before it is completed.\n   *\n   * This getter handles the logic for enabling or disabling the links in\n   * the step nav on the left Side of the wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get enabled(): boolean {\n    return this.current || this.completed || this.previousCompleted;\n  }\n\n  /**\n   * A read-only getter that returns whether or not the page before this\n   * ClrWizardPage is completed. This is useful for determining whether or not\n   * a page is navigable if it is not current or already completed.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get previousCompleted(): boolean {\n    const previousPage = this.pageCollection.getPreviousPage(this);\n\n    if (!previousPage) {\n      return true;\n    }\n\n    return previousPage.completed;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get title(): TemplateRef<any> {\n    return this.pageTitle.pageTitleTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get navTitle(): TemplateRef<any> {\n    if (this.pageNavTitle) {\n      return this.pageNavTitle.pageNavTitleTemplateRef;\n    }\n    return this.pageTitle.pageTitleTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get headerActions(): TemplateRef<any> {\n    if (!this._headerActions) {\n      return;\n    }\n    return this._headerActions.pageHeaderActionsTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get hasHeaderActions(): boolean {\n    return !!this._headerActions;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get buttons(): TemplateRef<any> {\n    if (!this._buttons) {\n      return;\n    }\n    return this._buttons.pageButtonsTemplateRef;\n  }\n\n  /**\n   * A read-only getter that returns a boolean that says whether or\n   * not the ClrWizardPage includes buttons. Used to determine if the\n   * Wizard should override the default button set defined as\n   * its direct children.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get hasButtons(): boolean {\n    return !!this._buttons;\n  }\n\n  /**\n   * Uses the nav service to make the ClrWizardPage the current page in the\n   * wizard. Bypasses all checks but still emits the ClrWizardPage.onLoad\n   * (clrWizardPageOnLoad) output.\n   *\n   * In most cases, it is better to use the default navigation functions\n   * in Wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public makeCurrent(): void {\n    this.navService.currentPage = this;\n  }\n\n  /**\n   * Links the nav service and establishes the current page if one is not defined.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public ngOnInit(): void {\n    const navService = this.navService;\n    if (!navService.currentPage && !navService.navServiceLoaded) {\n      this.makeCurrent();\n      this.navService.navServiceLoaded = true;\n    }\n  }\n\n  /**\n   * A read-only getter that returns the id used by the step nav item associated with the page.\n   *\n   * ClrWizardPage needs this ID string for aria information.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stepItemId(): string {\n    return this.pageCollection.getStepItemIdForPage(this);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  IterableDiffers,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  PLATFORM_ID,\n  Inject,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { HeaderActionService } from './providers/header-actions.service';\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardHeaderAction } from './wizard-header-action';\nimport { ClrWizardPage } from './wizard-page';\n\n@Component({\n  selector: 'clr-wizard',\n  providers: [WizardNavigationService, PageCollectionService, ButtonHubService, HeaderActionService],\n  templateUrl: './wizard.html',\n  host: {\n    '[class.clr-wizard]': 'true',\n    '[class.wizard-md]': \"size == 'md'\",\n    '[class.wizard-lg]': \"size == 'lg'\",\n    '[class.wizard-xl]': \"size == 'xl'\",\n    '[class.lastPage]': 'navService.currentPageIsLast',\n  },\n})\nexport class ClrWizard implements OnDestroy, AfterContentInit, DoCheck {\n  /**\n   * Set the modal size of the wizard. Set using `[clrWizardSize]` input.\n   */\n  @Input('clrWizardSize') size = 'xl';\n\n  /**\n   * Tells the modal part of the wizard whether it should have a close \"X\"\n   * in the top right corner. Set using `[clrWizardClosable]` input.\n   */\n  @Input('clrWizardClosable') closable = true;\n\n  /**\n   * Resets page completed states when navigating backwards.\n   * Set using `[clrWizardForceForwardNavigation]` input.\n   */\n  @Input('clrWizardForceForwardNavigation')\n  set forceForward(value: boolean) {\n    this._forceForward = !!value;\n    this.navService.forceForwardNavigation = value;\n  }\n  private _forceForward: boolean = false;\n  get forceForward(): boolean {\n    return this._forceForward;\n  }\n\n  _open = false;\n  /**\n   * Toggles open/close of the wizard component.\n   * Set using the `[clrWizardOpen]` input.\n   */\n  @Input('clrWizardOpen')\n  set clrWizardOpen(open: boolean) {\n    if (open) {\n      this.buttonService.buttonsReady = true;\n    }\n    this._open = open;\n  }\n\n  /**\n   * Prevents ClrWizard from moving to the next page or closing itself on finishing.\n   * Set using the `[clrWizardPreventDefaultNext]` input. Note that using stopNext\n   * will require you to create your own calls to .next() and .finish() in your\n   * host component to make the ClrWizard work as expected.\n   */\n  @Input('clrWizardPreventDefaultNext')\n  set stopNext(value: boolean) {\n    this._stopNext = !!value;\n    this.navService.wizardHasAltNext = value;\n  }\n  private _stopNext: boolean = false;\n  get stopNext() {\n    return this._stopNext;\n  }\n\n  /**\n   * Prevents ClrWizard from closing when the cancel button or close \"X\" is clicked.\n   * Set using the `[clrWizardPreventDefaultCancel]` input.\n   *\n   * Note that using stopCancel will require you to create your own calls to `close()` in your host compone`nt\n   * to make the ClrWizard work as expected. Useful for doing checks or prompts\n   * before closing a ClrWizard.\n   */\n  @Input('clrWizardPreventDefaultCancel')\n  set stopCancel(value: boolean) {\n    this._stopCancel = !!value;\n    this.navService.wizardHasAltCancel = value;\n  }\n  private _stopCancel: boolean = false;\n  get stopCancel(): boolean {\n    return this._stopCancel;\n  }\n\n  /**\n   * Prevents ClrWizard from performing any form of navigation away from the current\n   * page. Set using the `[clrWizardPreventNavigation]` input.\n   * Note that stopNavigation is meant to freeze the wizard in place, typically\n   * during a long validation or background action where you want the wizard to\n   * display loading content but not allow the user to execute navigation in\n   * the stepnav, close X, or the  back, finish, or next buttons.\n   */\n  @Input('clrWizardPreventNavigation')\n  set stopNavigation(value: boolean) {\n    this._stopNavigation = !!value;\n    this.navService.wizardStopNavigation = value;\n  }\n  private _stopNavigation = false;\n  get stopNavigation() {\n    return this._stopNavigation;\n  }\n\n  /**\n   * Prevents clicks on the links in the stepnav from working.\n   * Set using `[clrWizardDisableStepnav]` input.\n   * A more granular bypassing of navigation which can be useful when your\n   * ClrWizard is in a state of completion and you don't want users to be\n   * able to jump backwards and change things.\n   */\n  @Input('clrWizardDisableStepnav')\n  set disableStepnav(value: boolean) {\n    this._disableStepnav = !!value;\n    this.navService.wizardDisableStepnav = value;\n  }\n  private _disableStepnav: boolean = false;\n  get disableStepnav(): boolean {\n    return this._disableStepnav;\n  }\n\n  /**\n   * Used to communicate to the underlying modal that animations are not\n   * wanted. Primary use is for the display of static/inline wizards.\n   * Set using `[clrWizardPreventModalAnimation]` input.\n   */\n  /** @deprecated since 3.0, input should be removed in 4.0 because is only related to inline wizards */\n  @Input('clrWizardPreventModalAnimation') _stopModalAnimations: boolean = false;\n  get stopModalAnimations(): string {\n    return this._stopModalAnimations ? 'true' : 'false';\n  }\n\n  /**\n   * Emits when the wizard is opened or closed.\n   * Listen via `(clrWizardOpenChange)` event.\n   */\n  @Output('clrWizardOpenChange') _openChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /**\n   * Emits when the wizard is canceled. Listen via `(clrWizardOnCancel)` event.\n   * Can be combined with the `[clrWizardPreventDefaultCancel]` input to create\n   * wizard-level custom cancel routines.\n   */\n  @Output('clrWizardOnCancel') onCancel: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard is completed. Listen via `(clrWizardOnFinish)` event.\n   * Can be combined with the `[clrWizardPreventDefaultNext]` input to create\n   * wizard-level custom completion routines.\n   */\n  @Output('clrWizardOnFinish') wizardFinished: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard is reset. Listen via `(clrWizardOnReset)` event.\n   */\n  @Output('clrWizardOnReset') onReset: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the current page has changed. Listen via `(clrWizardCurrentPageChanged)` event.\n   * output. Useful for non-blocking validation.\n   */\n  @Output('clrWizardCurrentPageChanged') currentPageChanged: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard moves to the next page. Listen via `(clrWizardOnNext)` event.\n   * Can be combined with the `[clrWizardPreventDefaultNext]` input to create\n   * wizard-level custom navigation routines, which are useful for validation.\n   */\n  @Output('clrWizardOnNext') onMoveNext: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard moves to the previous page. Can be useful for validation.\n   * Listen via `(clrWizardOnPrevious)` event.\n   */\n\n  @Output('clrWizardOnPrevious') onMovePrevious: EventEmitter<any> = new EventEmitter<any>(false);\n\n  @ContentChildren(ClrWizardPage, { descendants: true })\n  pages: QueryList<ClrWizardPage>;\n  @ContentChildren(ClrWizardHeaderAction) headerActions: QueryList<ClrWizardHeaderAction>;\n  @ViewChild('wizardTitle') wizardTitle: ElementRef;\n\n  public get currentPage() {\n    return this.navService.currentPage;\n  }\n\n  public set currentPage(page: ClrWizardPage) {\n    this.navService.goTo(page, true);\n  }\n\n  public get isLast() {\n    return this.navService.currentPageIsLast;\n  }\n\n  public get isFirst() {\n    return this.navService.currentPageIsFirst;\n  }\n\n  public get isStatic() {\n    return (this.elementRef.nativeElement as HTMLElement).classList.contains('clr-wizard--inline');\n  }\n\n  private differ: any; // for marking when the collection of wizard pages has been added to or deleted from\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    public navService: WizardNavigationService,\n    public pageCollection: PageCollectionService,\n    public buttonService: ButtonHubService,\n    public headerActionService: HeaderActionService,\n    private elementRef: ElementRef,\n    differs: IterableDiffers\n  ) {\n    this.subscriptions.push(\n      this.listenForNextPageChanges(),\n      this.listenForPreviousPageChanges(),\n      this.listenForCancelChanges(),\n      this.listenForFinishedChanges(),\n      this.listenForPageChanges()\n    );\n\n    this.differ = differs.find([]).create(null);\n  }\n\n  public ngAfterContentInit() {\n    this.pageCollection.pages = this.pages;\n    this.headerActionService.wizardHeaderActions = this.headerActions;\n    this.initializeButtons();\n  }\n\n  public ngDoCheck() {\n    this.updateNavOnPageChanges();\n  }\n\n  public ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  /**\n   * Marks Wizard as finished. By default it does not execute event\n   * emissions or checks before completing and closing. This method is commonly\n   * used as part of an alternative navigation with `[clrWizardPreventDefaultNext]`.\n   *\n   * If `skipChecksAndEmits` is true, the wizard will complete and close\n   * regardless of the state of its current page. This is useful for alternative\n   * navigation where event emissions have already been done and firing them again\n   * may cause an event loop.\n   */\n  public finish(skipChecksAndEmits = true) {\n    if (skipChecksAndEmits) {\n      this.forceFinish();\n    } else {\n      this.navService.finish();\n    }\n  }\n\n  /**\n   * Marks the wizard as finished but does run checks and emissions.\n   * Good for a last step in an alternate workflow. Does the same thing as\n   * calling `ClrWizard.finish(true)` or `ClrWizard.finish()` without a parameter.\n   */\n  public forceFinish() {\n    if (this.stopNavigation) {\n      return;\n    }\n\n    this.close();\n  }\n\n  /**\n   * Opens the wizard. If there is no current page defined, sets the first page in the wizard to be current.\n   */\n  public open(): void {\n    this._open = true;\n\n    if (!this.currentPage) {\n      this.navService.setFirstPageCurrent();\n    }\n\n    // Only render buttons when wizard is opened, to avoid chocolate errors\n    this.buttonService.buttonsReady = true;\n\n    this._openChanged.emit(true);\n  }\n\n  /**\n   * Closes the wizard. Call this directly instead of `cancel()` to implement alternative cancel functionality.\n   */\n  public close(): void {\n    if (this.stopNavigation) {\n      return;\n    }\n\n    this._open = false;\n    this._openChanged.emit(false);\n  }\n\n  /**\n   * Used to open and close the wizard. By default the wizard will\n   * close if invoked with no parameter. If parameter is true wizard will open\n   * else if false will close.\n   */\n  public toggle(open: boolean): void {\n    if (open) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  /**\n   * Moves the wizard to the previous page.\n   */\n  public previous(): void {\n    this.navService.previous();\n  }\n\n  /**\n   * By default, `next()` does not execute event emissions.\n   * This method is commonly called as part of an alternative navigation\n   * with `[clrWizardPreventDefaultNext]`. The wizard will move to the next page\n   * regardless of the state of its current page. This is useful for alternative\n   * navigation where event emissions have already been done and firing them again\n   * may cause an event loop.\n   *\n   * If `skipChecksAndEmits` is false, the wizard will execute default checks\n   * and emit events as normal. This is useful for custom buttons or programmatic\n   * workflows that are not executing the wizards default checks and emissions.\n   * It is another way to navigate without having to rewrite the wizard’s default\n   * functionality from scratch.\n   */\n  public next(skipChecksAndEmits: boolean = true): void {\n    if (skipChecksAndEmits) {\n      this.forceNext();\n    } else {\n      this.navService.next();\n    }\n  }\n\n  /**\n   * Moves the wizard to the next page without the checks and emissions.\n   * Good for a last step in an alternate workflow.\n   * Alias for `ClrWizard.next(true)` or `ClrWizard.next()`\n   */\n  public forceNext(): void {\n    this.navService.forceNext();\n  }\n\n  /**\n   * Cancels and closes the wizard. Do not use this for an override of the cancel\n   * the functionality with `[clrWizardPreventDefaultCancel]`, `[clrWizardPreventPageDefaultCancel]`,\n   * or `[clrWizardPagePreventDefault]` because it will initiate the same checks\n   * and event emissions that invoked your event handler. Use `ClrWizard.close()` instead.\n   */\n  public cancel(): void {\n    this.navService.cancel();\n  }\n\n  /**\n   * Overrides behavior of the underlying modal to avoid collisions with\n   * alternative cancel functionality. In most cases, use `ClrWizard.cancel()` instead.\n   */\n  public modalCancel(): void {\n    if (this.closable) {\n      this.checkAndCancel();\n    }\n  }\n\n  /**\n   * Checks for alternative cancel flows defined at the current page or\n   * wizard level. Performs a canceled if not. Emits events that initiate\n   * the alternative cancel outputs `(clrWizardPageOnCancel)` and `(clrWizardOnCancel)`.\n   */\n  public checkAndCancel(): void {\n    const currentPage = this.currentPage;\n    const currentPageHasOverrides = currentPage.stopCancel || currentPage.preventDefault;\n\n    if (this.stopNavigation) {\n      return;\n    }\n\n    currentPage.pageOnCancel.emit();\n    if (!currentPageHasOverrides) {\n      this.onCancel.emit();\n    }\n\n    if (!this.stopCancel && !currentPageHasOverrides) {\n      this.close();\n    }\n  }\n\n  /**\n   * Navigates to a given page in the Wizard. Navigation will invoke the wizard’s default\n   * checks and event emissions.\n   *\n   * The format of the expected ID parameter can be found in the return of the\n   * ClrWizardPage.id getter, usually prefixed with `clr-wizard-page-` and then either a\n   * numeric ID or the ID specified for the `ClrWizardPage` component’s `id` input.\n   */\n  public goTo(pageId: string): void {\n    if (!pageId) {\n      return;\n    }\n\n    this.navService.goTo(pageId);\n  }\n\n  /**\n   * Reset sets all WizardPages to incomplete and sets the first page in the `ClrWizard` to\n   * be the current page, resetting the wizard navigation.\n   * Use `(clrWizardOnReset)` event to reset the data or model of your wizard.\n   */\n  public reset(): void {\n    this.pageCollection.reset();\n    this.onReset.next();\n  }\n\n  private listenForNextPageChanges(): Subscription {\n    return this.navService.movedToNextPage.pipe(filter(() => isPlatformBrowser(this.platformId))).subscribe(() => {\n      this.onMoveNext.emit();\n      this.wizardTitle.nativeElement.focus();\n    });\n  }\n\n  private listenForPreviousPageChanges(): Subscription {\n    return this.navService.movedToPreviousPage.pipe(filter(() => isPlatformBrowser(this.platformId))).subscribe(() => {\n      this.onMovePrevious.emit();\n      this.wizardTitle.nativeElement.focus();\n    });\n  }\n\n  private listenForCancelChanges(): Subscription {\n    return this.navService.notifyWizardCancel.subscribe(() => this.checkAndCancel());\n  }\n\n  private listenForFinishedChanges(): Subscription {\n    return this.navService.wizardFinished.subscribe(() => this.emitWizardFinished());\n  }\n\n  private listenForPageChanges(): Subscription {\n    return this.navService.currentPageChanged.subscribe(() => this.currentPageChanged.emit());\n  }\n\n  private updateNavOnPageChanges(): void {\n    const changes = this.differ.diff(this.pages);\n    if (changes) {\n      changes.forEachAddedItem(() => this.navService.updateNavigation());\n      changes.forEachRemovedItem(() => this.navService.updateNavigation());\n    }\n  }\n\n  private initializeButtons(): void {\n    // Only trigger buttons ready if default is open (inlined)\n    if (this._open) {\n      this.buttonService.buttonsReady = true;\n    }\n  }\n\n  private emitWizardFinished(): void {\n    if (!this.stopNext) {\n      this.forceFinish();\n    }\n    this.wizardFinished.emit();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\n\nexport const DEFAULT_BUTTON_TYPES: any = {\n  cancel: 'cancel',\n  previous: 'previous',\n  next: 'next',\n  finish: 'finish',\n  danger: 'danger',\n};\n\nexport const CUSTOM_BUTTON_TYPES: any = {\n  cancel: 'custom-cancel',\n  previous: 'custom-previous',\n  next: 'custom-next',\n  finish: 'custom-finish',\n  danger: 'custom-danger',\n};\n\n@Component({\n  selector: 'clr-wizard-button',\n  template: `\n        <button\n            type=\"button\"\n            class=\"btn clr-wizard-btn\"\n            [class.btn-link]=\"isCancel\"\n            [class.clr-wizard-btn--tertiary]=\"isCancel\"\n            [class.btn-outline]=\"isPrevious\"\n            [class.clr-wizard-btn--secondary]=\"isPrevious\"\n            [class.btn-primary]=\"isPrimaryAction\"\n            [class.clr-wizard-btn--primary]=\"isPrimaryAction\"\n            [class.btn-success]=\"isFinish\"\n            [class.btn-danger]=\"isDanger\"\n            [class.disabled]=\"isDisabled\"\n            [attr.disabled]=\"_disabledAttribute\"\n            (click)=\"click()\">\n            <ng-content></ng-content>\n        </button>\n    `,\n  host: { class: 'clr-wizard-btn-wrapper', '[attr.aria-hidden]': 'isHidden' },\n  styles: ['[aria-hidden=\"true\"] { display: none; }'],\n})\nexport class ClrWizardButton {\n  @Input('type') public type: string = '';\n\n  @Input('clrWizardButtonDisabled') public disabled: boolean = false;\n\n  @Input('clrWizardButtonHidden') public hidden: boolean = false;\n\n  // EventEmitter which is emitted when a button is clicked.\n  @Output('clrWizardButtonClicked') wasClicked: EventEmitter<string> = new EventEmitter<string>(false);\n\n  constructor(public navService: WizardNavigationService, public buttonService: ButtonHubService) {}\n\n  private checkDefaultAndCustomType(valueToCheck: string = '', typeToLookUp: string) {\n    if (DEFAULT_BUTTON_TYPES[typeToLookUp] === valueToCheck) {\n      return true;\n    }\n    if (CUSTOM_BUTTON_TYPES[typeToLookUp] === valueToCheck) {\n      return true;\n    }\n    return false;\n  }\n\n  public get isCancel(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'cancel');\n  }\n\n  public get isNext(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'next');\n  }\n\n  public get isPrevious(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'previous');\n  }\n\n  public get isFinish(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'finish');\n  }\n\n  public get isDanger(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'danger');\n  }\n\n  public get isPrimaryAction(): boolean {\n    return this.isNext || this.isDanger || this.isFinish;\n  }\n\n  public get _disabledAttribute(): string | null {\n    if (this.isDisabled) {\n      return '';\n    }\n    return null;\n  }\n\n  public get isDisabled(): boolean {\n    // dealing with negatives here. cognitively easier to think of it like this...\n    const disabled = true;\n    const nav = this.navService;\n    const page = this.navService.currentPage;\n\n    // Ensure we don't change the response until buttons are ready to avoid chocolate\n    if (!this.buttonService.buttonsReady) {\n      return !disabled;\n    }\n\n    if (this.disabled || nav.wizardStopNavigation || !page) {\n      return true;\n    }\n\n    if (this.isCancel) {\n      return !disabled;\n    }\n\n    if (this.isPrevious && (nav.currentPageIsFirst || page.previousStepDisabled)) {\n      return disabled;\n    }\n\n    if (this.isDanger && !page.readyToComplete) {\n      return disabled;\n    }\n\n    if (this.isNext && (nav.currentPageIsLast || !page.readyToComplete)) {\n      return disabled;\n    }\n\n    if (this.isFinish && (!nav.currentPageIsLast || !page.readyToComplete)) {\n      return disabled;\n    }\n\n    return !disabled;\n  }\n\n  public get isHidden(): boolean {\n    // dealing with negatives here. cognitively easier to think of it like this...\n    const hidden = true;\n    const nav = this.navService;\n\n    // Ensure we don't change the response until buttons are ready to avoid chocolate\n    if (!this.buttonService.buttonsReady) {\n      return !hidden;\n    }\n\n    if (this.hidden) {\n      return true;\n    }\n\n    if (this.isCancel) {\n      return !hidden;\n    }\n\n    if (this.isPrevious && nav.currentPageIsFirst) {\n      return hidden;\n    }\n\n    if (this.isNext && nav.currentPageIsLast) {\n      return hidden;\n    }\n\n    if (this.isFinish && !nav.currentPageIsLast) {\n      return hidden;\n    }\n\n    return !hidden;\n  }\n\n  click(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.wasClicked.emit(this.type);\n    this.buttonService.buttonClicked(this.type);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-wizard-title, clr-wizard-pagetitle' })\nexport class ClrWizardCustomTags {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\nimport { PageCollectionService } from './providers/page-collection.service';\n\n@Component({\n  selector: 'clr-wizard-stepnav',\n  template: `\n    <div class=\"clr-wizard-stepnav-list\">\n      <div *ngFor=\"let page of pageService.pages; let i = index\" clr-wizard-stepnav-item [page]=\"page\" class=\"clr-wizard-stepnav-item\">{{i + 1}}</div>\n    </div>\n  `,\n  host: { class: 'clr-wizard-stepnav' },\n})\nexport class ClrWizardStepnav {\n  constructor(public pageService: PageCollectionService) {}\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardPage } from './wizard-page';\n\n@Component({\n  selector: '[clr-wizard-stepnav-item]',\n  template: `\n        <button type=\"button\" class=\"btn btn-link clr-wizard-stepnav-link\" (click)=\"click()\" [attr.disabled]=\"isDisabled ? '' : null\">\n            <span class=\"clr-wizard-stepnav-link-suffix\">\n              <clr-icon shape=\"error-standard\" class=\"is-error clr-wizard-stepnav-item-error-icon\" *ngIf=\"hasError\"></clr-icon>\n              <ng-content *ngIf=\"!hasError\"></ng-content>              \n            </span>\n            <span class=\"clr-wizard-stepnav-link-title\">\n              <ng-template [ngTemplateOutlet]=\"page.navTitle\"></ng-template> \n            </span>\n        </button>\n    `,\n  host: {\n    '[id]': 'id',\n    '[attr.aria-selected]': 'isCurrent',\n    '[attr.aria-controls]': 'id',\n    '[class.clr-nav-link]': 'true',\n    '[class.nav-item]': 'true',\n    '[class.active]': 'isCurrent',\n    '[class.disabled]': 'isDisabled',\n    '[class.no-click]': '!canNavigate',\n    '[class.complete]': 'isComplete',\n    '[class.error]': 'hasError',\n  },\n})\nexport class ClrWizardStepnavItem {\n  @Input('page') public page: ClrWizardPage;\n\n  constructor(public navService: WizardNavigationService, public pageCollection: PageCollectionService) {}\n\n  private pageGuard(): void {\n    if (!this.page) {\n      throw new Error('Wizard stepnav item is not associated with a wizard page.');\n    }\n  }\n\n  public get id(): string {\n    this.pageGuard();\n    return this.pageCollection.getStepItemIdForPage(this.page);\n  }\n\n  public get isDisabled(): boolean {\n    this.pageGuard();\n    return this.page.disabled || this.navService.wizardStopNavigation || this.navService.wizardDisableStepnav;\n  }\n\n  public get isCurrent(): boolean {\n    this.pageGuard();\n    return this.page.current;\n  }\n\n  public get isComplete(): boolean {\n    this.pageGuard();\n    return this.page.completed;\n  }\n\n  public get hasError(): boolean {\n    this.pageGuard();\n    return this.page.hasError && this.isComplete;\n  }\n\n  public get canNavigate(): boolean {\n    this.pageGuard();\n    return this.pageCollection.previousPageIsCompleted(this.page);\n  }\n\n  click(): void {\n    this.pageGuard();\n\n    // if we click on our own stepnav or a disabled stepnav, we don't want to do anything\n    if (this.isDisabled || this.isCurrent) {\n      return;\n    }\n\n    this.navService.goTo(this.page);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrAlertModule } from '../emphasis/alert/alert.module';\nimport { ClrModalModule } from '../modal/modal.module';\n\nimport { ClrWizard } from './wizard';\nimport { ClrWizardButton } from './wizard-button';\nimport { ClrWizardCustomTags } from './wizard-custom-tags';\nimport { ClrWizardHeaderAction } from './wizard-header-action';\nimport { ClrWizardPage } from './wizard-page';\nimport { ClrWizardPageButtons } from './wizard-page-buttons';\nimport { ClrWizardPageHeaderActions } from './wizard-page-header-actions';\nimport { ClrWizardPageNavTitle } from './wizard-page-navtitle';\nimport { ClrWizardPageTitle } from './wizard-page-title';\nimport { ClrWizardStepnav } from './wizard-stepnav';\nimport { ClrWizardStepnavItem } from './wizard-stepnav-item';\n\nexport const CLR_WIZARD_DIRECTIVES: any[] = [\n  ClrWizard,\n  ClrWizardPage,\n  ClrWizardStepnav,\n  ClrWizardStepnavItem,\n  ClrWizardButton,\n  ClrWizardHeaderAction,\n  ClrWizardCustomTags,\n  ClrWizardPageTitle,\n  ClrWizardPageNavTitle,\n  ClrWizardPageButtons,\n  ClrWizardPageHeaderActions,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrModalModule, ClrAlertModule],\n  declarations: [CLR_WIZARD_DIRECTIVES],\n  exports: [CLR_WIZARD_DIRECTIVES],\n})\nexport class ClrWizardModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum AccordionStrategy {\n  Default = 'default', // only one panel at a time\n  Multi = 'multi', // can have multiple panels open at a time\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum AccordionStatus {\n  Inactive = 'inactive',\n  Error = 'error',\n  Complete = 'complete',\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { AccordionStrategy } from '../enums/accordion-strategy.enum';\nimport { AccordionStatus } from '../enums/accordion-status.enum';\n\nlet accordionCount = 0;\n\nexport class AccordionPanelModel {\n  status = AccordionStatus.Inactive;\n  index: number = null;\n  disabled = false;\n  open = false;\n  templateId = `${this.id}-${this.accordionId}`;\n  constructor(public id: string, public accordionId: number | string) {}\n}\n\nexport class AccordionModel {\n  protected strategy = AccordionStrategy.Default;\n  protected accordionCount = accordionCount++;\n  protected _panels: { [id: string]: AccordionPanelModel } = {};\n\n  get panels(): AccordionPanelModel[] {\n    return Object.keys(this._panels).map(id => this._panels[id]);\n  }\n\n  setStrategy(strategy: AccordionStrategy) {\n    this.strategy = strategy;\n  }\n\n  updatePanelOrder(ids: string[]) {\n    ids.forEach((id, index) => (this._panels[id].index = index));\n    this.removeOldPanels(ids);\n  }\n\n  addPanel(id: string, open = false) {\n    this._panels[id] = new AccordionPanelModel(id, this.accordionCount);\n    this._panels[id].open = open;\n  }\n\n  togglePanel(panelId: string, open?: boolean) {\n    const panelIsOpen = this._panels[panelId].open;\n    if (this.strategy === AccordionStrategy.Default) {\n      this.closeAllPanels();\n    }\n\n    this._panels[panelId].open = open !== undefined ? open : !panelIsOpen;\n  }\n\n  disablePanel(panelId: string, disabled: boolean) {\n    this._panels[panelId].disabled = disabled;\n  }\n\n  private closeAllPanels() {\n    this.panels.forEach(panel => (this._panels[panel.id].open = false));\n  }\n\n  private removeOldPanels(ids: string[]) {\n    this.panels\n      .filter(panel => ids.find(id => id === panel.id) === undefined)\n      .forEach(panel => delete this._panels[panel.id]);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AccordionModel, AccordionPanelModel } from '../models/accordion.model';\nimport { AccordionStrategy } from '../enums/accordion-strategy.enum';\n\n@Injectable()\nexport class AccordionService {\n  protected accordion = new AccordionModel();\n  protected readonly _panelsChanges = new BehaviorSubject<AccordionPanelModel[]>(this.accordion.panels);\n\n  getPanelChanges(panelId: string): Observable<AccordionPanelModel> {\n    return this._panelsChanges.pipe(map(panels => panels.find(s => s.id === panelId)));\n  }\n\n  setStrategy(strategy: AccordionStrategy) {\n    this.accordion.setStrategy(strategy);\n  }\n\n  addPanel(panelId: string, open = false) {\n    this.accordion.addPanel(panelId, open);\n    this.emitUpdatedPanels();\n  }\n\n  togglePanel(panelId: string, open?: boolean) {\n    this.accordion.togglePanel(panelId, open);\n    this.emitUpdatedPanels();\n  }\n\n  disablePanel(panelId: string, disabled?: boolean) {\n    this.accordion.disablePanel(panelId, disabled);\n    this.emitUpdatedPanels();\n  }\n\n  updatePanelOrder(ids: string[]) {\n    this.accordion.updatePanelOrder(ids);\n    this.emitUpdatedPanels();\n  }\n\n  protected emitUpdatedPanels() {\n    this._panelsChanges.next(this.accordion.panels);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport const defaultAnimationTiming = '0.2s ease-in-out';\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, style, transition, trigger } from '@angular/animations';\n\nimport { defaultAnimationTiming } from '../../utils/animations/constants';\n\nexport const panelAnimation = [\n  trigger('skipInitialRender', [transition(':enter', [])]),\n  trigger('toggle', [\n    transition('void => *', [\n      style({ display: 'block', height: 0 }),\n      animate(defaultAnimationTiming, style({ height: '*' })),\n    ]),\n  ]),\n];\n\nexport const stepAnimation = [\n  trigger('skipInitialRender', [transition(':enter', [])]),\n  trigger('toggle', [\n    transition('void => *', [\n      style({ display: 'block', height: 0 }),\n      animate(defaultAnimationTiming, style({ height: '*' })),\n    ]),\n    transition('* => void', [\n      style({ display: 'block' }),\n      animate(defaultAnimationTiming, style({ height: 0, display: 'none' })),\n    ]),\n  ]),\n];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-description, clr-step-description',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion-description]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionDescription {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  EventEmitter,\n  Output,\n  SimpleChanges,\n  Inject,\n  OnInit,\n  OnChanges,\n  ContentChildren,\n  QueryList,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../utils/id-generator/id-generator.service';\nimport { ClrCommonStringsService } from '../utils/i18n/common-strings.service';\nimport { AccordionService } from './providers/accordion.service';\nimport { AccordionStatus } from './enums/accordion-status.enum';\nimport { panelAnimation } from './utils/animation';\nimport { IfExpandService } from '../utils/conditional/if-expanded.service';\nimport { AccordionPanelModel } from './models/accordion.model';\nimport { ClrAccordionDescription } from './accordion-description';\n\n@Component({\n  selector: 'clr-accordion-panel',\n  templateUrl: './accordion-panel.html',\n  host: { '[class.clr-accordion-panel]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: panelAnimation,\n  providers: [IfExpandService, UNIQUE_ID_PROVIDER],\n})\nexport class ClrAccordionPanel implements OnInit, OnChanges {\n  @Input('clrAccordionPanelDisabled') disabled = false;\n  @Input('clrAccordionPanelOpen') panelOpen = false;\n  @Output('clrAccordionPanelOpenChange') panelOpenChange = new EventEmitter<boolean>();\n  @ContentChildren(ClrAccordionDescription) accordionDescription: QueryList<ClrAccordionDescription>;\n\n  panel: Observable<AccordionPanelModel>;\n  readonly AccordionStatus = AccordionStatus;\n  isAccordion = true;\n\n  constructor(\n    public commonStrings: ClrCommonStringsService,\n    private accordionService: AccordionService,\n    private ifExpandService: IfExpandService,\n    @Inject(UNIQUE_ID) public id: string\n  ) {}\n\n  ngOnInit() {\n    this.panel = this.accordionService.getPanelChanges(this.id).pipe(tap(panel => this.emitPanelChange(panel)));\n    this.accordionService.addPanel(this.id, this.panelOpen);\n    this.accordionService.togglePanel(this.id, this.panelOpen);\n    this.accordionService.disablePanel(this.id, this.disabled);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.panel && changes.panelOpen && changes.panelOpen.currentValue !== changes.panelOpen.previousValue) {\n      this.accordionService.togglePanel(this.id, changes.panelOpen.currentValue);\n    }\n\n    if (this.panel && changes.disabled && changes.disabled.currentValue !== changes.disabled.previousValue) {\n      this.accordionService.disablePanel(this.id, changes.disabled.currentValue);\n    }\n  }\n\n  togglePanel() {\n    this.accordionService.togglePanel(this.id);\n  }\n\n  collapsePanelOnAnimationDone(panel: AccordionPanelModel) {\n    if (!panel.open) {\n      this.ifExpandService.expanded = false;\n    }\n  }\n\n  getPanelStateClasses(panel: AccordionPanelModel) {\n    return `clr-accordion-panel-${panel.status} ${panel.open ? 'clr-accordion-panel-open' : ''}`;\n  }\n\n  getAccordionContentId(id: string) {\n    return `clr-accordion-content-${id}'`;\n  }\n\n  getAccordionHeaderId(id: string) {\n    return `clr-accordion-header-${id}`;\n  }\n\n  private emitPanelChange(panel: AccordionPanelModel) {\n    this.panelOpenChange.emit(panel.open);\n\n    if (panel.open) {\n      this.ifExpandService.expanded = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-title, clr-step-title',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion-title]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionTitle {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  QueryList,\n  ChangeDetectionStrategy,\n  Input,\n  SimpleChanges,\n  OnInit,\n  OnChanges,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport { startWith } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { AccordionService } from './providers/accordion.service';\nimport { ClrAccordionPanel } from './accordion-panel';\nimport { AccordionStrategy } from './enums/accordion-strategy.enum';\n\n@Component({\n  selector: 'clr-accordion',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion]': 'true' },\n  providers: [AccordionService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordion implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input('clrAccordionMultiPanel') multiPanel = false;\n  @ContentChildren(ClrAccordionPanel, { descendants: true })\n  panels: QueryList<ClrAccordionPanel>;\n  subscriptions: Subscription[] = [];\n\n  constructor(private accordionService: AccordionService) {}\n\n  ngOnInit() {\n    this.setAccordionStrategy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.multiPanel.currentValue !== changes.multiPanel.previousValue) {\n      this.setAccordionStrategy();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(this.listenForDOMChanges());\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private setAccordionStrategy() {\n    const strategy = this.multiPanel ? AccordionStrategy.Multi : AccordionStrategy.Default;\n    this.accordionService.setStrategy(strategy);\n  }\n\n  private listenForDOMChanges() {\n    return this.panels.changes\n      .pipe(startWith(this.panels))\n      .subscribe(panels => this.accordionService.updatePanelOrder(panels.toArray().map(p => p.id)));\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-content, clr-step-content',\n  template: `<ng-content></ng-content>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionContent {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\nimport { WillyWonka } from '../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-accordion' })\nexport class AccordionWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../utils/chocolate/oompa-loompa';\nimport { AccordionWillyWonka } from './accordion-willy-wonka';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\n\n@Directive({ selector: 'clr-accordion-panel' })\nexport class AccordionOompaLoompa extends OompaLoompa {\n  private expand: IfExpandService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: AccordionWillyWonka, ifExpandService: IfExpandService) {\n    if (!willyWonka) {\n      throw new Error('clr-accordion-panel should only be used inside of clr-accordion');\n    }\n    super(cdr, willyWonka);\n    this.expand = ifExpandService;\n  }\n\n  get flavor() {\n    return this.expand.expanded;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrIconModule } from '../icon/icon.module';\nimport { ClrAccordionPanel } from './accordion-panel';\nimport { ClrAccordionTitle } from './accordion-title';\nimport { ClrAccordionDescription } from './accordion-description';\nimport { ClrAccordion } from './accordion';\nimport { ClrAccordionContent } from './accordion-content';\nimport { AccordionOompaLoompa } from './chocolate/accordion-oompa-loompa';\nimport { AccordionWillyWonka } from './chocolate/accordion-willy-wonka';\n\nconst declarations = [\n  ClrAccordion,\n  ClrAccordionPanel,\n  ClrAccordionTitle,\n  ClrAccordionDescription,\n  ClrAccordionContent,\n  AccordionOompaLoompa,\n  AccordionWillyWonka,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule],\n  declarations: [...declarations],\n  exports: [...declarations],\n})\nexport class ClrAccordionModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { AccordionModel } from '../../models/accordion.model';\nimport { AccordionStatus } from '../../enums/accordion-status.enum';\n\nexport class StepperModel extends AccordionModel {\n  private stepperModelInitialize: boolean = false;\n\n  get allPanelsCompleted(): boolean {\n    return this.panels.length && this.getNumberOfIncompletePanels() === 0 && this.getNumberOfOpenPanels() === 0;\n  }\n\n  addPanel(id: string, open = false) {\n    super.addPanel(id, open);\n    this._panels[id].disabled = true;\n  }\n\n  updatePanelOrder(ids: string[]) {\n    super.updatePanelOrder(ids);\n    if (this.stepperModelInitialize === false) {\n      this.openFirstPanel();\n    }\n  }\n\n  togglePanel(panelId: string) {\n    if (this._panels[panelId].status === AccordionStatus.Complete) {\n      this._panels[panelId].open = !this._panels[panelId].open;\n    }\n  }\n\n  navigateToNextPanel(currentPanelId: string, currentPanelValid = true) {\n    if (currentPanelValid) {\n      this.completePanel(currentPanelId);\n      this.openNextPanel(this._panels[currentPanelId].id);\n    } else {\n      this.setPanelError(currentPanelId);\n    }\n  }\n\n  overrideInitialPanel(panelId: string) {\n    this.panels.filter(() => this._panels[panelId] !== undefined).forEach(panel => {\n      if (panel.index < this._panels[panelId].index) {\n        this.completePanel(panel.id);\n      } else if (panel.id === panelId) {\n        this._panels[panel.id].open = true;\n      } else {\n        this._panels[panel.id].open = false;\n      }\n    });\n  }\n\n  setPanelsWithErrors(ids: string[]) {\n    ids.forEach(id => this.setPanelError(id));\n  }\n\n  resetPanels() {\n    /* return stepper to initialize state */\n    this.stepperModelInitialize = false;\n    this.panels.forEach(p => this.resetPanel(p.id));\n    this.openFirstPanel();\n  }\n\n  getNextPanel(currentPanelId: string) {\n    return this.panels.find(s => s.index === this._panels[currentPanelId].index + 1);\n  }\n\n  private resetAllFuturePanels(panelId: string) {\n    this.panels.filter(panel => panel.index >= this._panels[panelId].index).forEach(panel => this.resetPanel(panel.id));\n  }\n\n  private resetPanel(panelId: string) {\n    this._panels[panelId].status = AccordionStatus.Inactive;\n    this._panels[panelId].open = false;\n    this._panels[panelId].disabled = true;\n  }\n\n  private openFirstPanel() {\n    const firstPanel = this.getFirstPanel();\n    /**\n     * You need to call updatePanelOrder first to get the correct order,\n     * else the list of panels will not have `index` set and we won't know\n     * how to find the first panel.\n     */\n    if (!firstPanel) {\n      return;\n    }\n    this._panels[firstPanel.id].open = true;\n    this._panels[firstPanel.id].disabled = true;\n    this.stepperModelInitialize = true;\n  }\n\n  private completePanel(panelId: string) {\n    this._panels[panelId].status = AccordionStatus.Complete;\n    this._panels[panelId].disabled = false;\n    this._panels[panelId].open = false;\n  }\n\n  private openNextPanel(currentPanelId: string) {\n    const nextPanel = this.getNextPanel(currentPanelId);\n\n    if (nextPanel) {\n      this.resetAllFuturePanels(nextPanel.id);\n      this._panels[nextPanel.id].open = true;\n      this._panels[nextPanel.id].disabled = true;\n    }\n  }\n\n  private setPanelError(panelId: string) {\n    this.resetAllFuturePanels(panelId);\n    this._panels[panelId].open = true;\n    this._panels[panelId].status = AccordionStatus.Error;\n  }\n\n  private getFirstPanel() {\n    return this.panels.find(panel => panel.index === 0);\n  }\n\n  private getNumberOfIncompletePanels() {\n    return this.panels.reduce((prev, next) => (next.status !== AccordionStatus.Complete ? prev + 1 : prev), 0);\n  }\n\n  private getNumberOfOpenPanels() {\n    return this.panels.reduce((prev, next) => (next.open !== false ? prev + 1 : prev), 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\nimport { Observable, Subject } from 'rxjs';\n\nimport { AccordionService } from './../../providers/accordion.service';\nimport { StepperModel } from '../models/stepper.model';\n\n@Injectable()\nexport class StepperService extends AccordionService {\n  readonly panelsCompleted = this.getAllCompletedPanelChanges();\n  protected accordion = new StepperModel();\n\n  private _activeStepChanges = new Subject<string>();\n  readonly activeStep = this._activeStepChanges.asObservable();\n\n  resetPanels() {\n    this.accordion.resetPanels();\n    this.emitUpdatedPanels();\n  }\n\n  setPanelsWithErrors(ids: string[]) {\n    this.accordion.setPanelsWithErrors(ids);\n    this.emitUpdatedPanels();\n  }\n\n  navigateToNextPanel(currentPanelId: string, currentPanelValid = true) {\n    this.accordion.navigateToNextPanel(currentPanelId, currentPanelValid);\n    this.updateNextStep(currentPanelId, currentPanelValid);\n    this.emitUpdatedPanels();\n  }\n\n  overrideInitialPanel(panelId: string) {\n    this.accordion.overrideInitialPanel(panelId);\n    this.emitUpdatedPanels();\n  }\n\n  private updateNextStep(currentPanelId: string, currentPanelValid: boolean) {\n    const nextPanel = this.accordion.getNextPanel(currentPanelId);\n\n    if (currentPanelValid && nextPanel) {\n      this._activeStepChanges.next(nextPanel.id);\n    } else if (currentPanelValid) {\n      this._activeStepChanges.next(currentPanelId);\n    }\n  }\n\n  private getAllCompletedPanelChanges(): Observable<boolean> {\n    return this._panelsChanges.pipe(map(() => this.accordion.allPanelsCompleted), distinctUntilChanged());\n  }\n}\n","/*\n* Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n* This software is released under MIT license.\n* The full license information can be found in LICENSE in the root directory of this project.\n*/\n\nimport { FormGroup, FormControl } from '@angular/forms';\n\nexport function triggerAllFormControlValidation(formGroup: FormGroup) {\n  Object.keys(formGroup.controls).forEach(field => {\n    const control = formGroup.get(field);\n    if (control instanceof FormControl) {\n      control.markAsTouched();\n      control.markAsDirty();\n      control.updateValueAndValidity();\n    } else if (control instanceof FormGroup) {\n      triggerAllFormControlValidation(control);\n    }\n  });\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Optional,\n  Inject,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { FormGroupName, NgModelGroup } from '@angular/forms';\nimport { tap, filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { StepperService } from './providers/stepper.service';\nimport { stepAnimation } from '../utils/animation';\nimport { triggerAllFormControlValidation } from '../../utils/forms/validation';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { AccordionPanelModel } from '../models/accordion.model';\nimport { AccordionStatus } from '../enums/accordion-status.enum';\nimport { ClrAccordionPanel } from '../accordion-panel';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'clr-stepper-panel',\n  templateUrl: './../accordion-panel.html',\n  host: { '[class.clr-accordion-panel]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: stepAnimation,\n  providers: [IfExpandService, UNIQUE_ID_PROVIDER],\n})\nexport class ClrStepperPanel extends ClrAccordionPanel implements OnInit {\n  isAccordion = false;\n\n  @ViewChild('headerButton') headerButton: ElementRef;\n  private subscriptions: Subscription[] = [];\n\n  get formGroup() {\n    return this.formGroupName ? this.formGroupName.control : this.ngModelGroup.control;\n  }\n\n  get id(): string {\n    return this.formGroupName ? this.formGroupName.name.toString() : this.ngModelGroup.name;\n  }\n\n  set id(_value: string) {} // overriding parent id required empty setter\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    public commonStrings: ClrCommonStringsService,\n    @Optional() private formGroupName: FormGroupName,\n    @Optional() private ngModelGroup: NgModelGroup,\n    private stepperService: StepperService,\n    ifExpandService: IfExpandService,\n    @Inject(UNIQUE_ID) id: string\n  ) {\n    super(commonStrings, stepperService, ifExpandService, id);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.panel = this.panel.pipe(tap(panel => this.triggerAllFormControlValidationIfError(panel)));\n    this.stepperService.disablePanel(this.id, true);\n    this.listenToFocusChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private listenToFocusChanges() {\n    this.subscriptions.push(\n      this.stepperService.activeStep\n        .pipe(filter(panelId => isPlatformBrowser(this.platformId) && panelId === this.id))\n        .subscribe(() => this.headerButton.nativeElement.focus())\n    );\n  }\n\n  private triggerAllFormControlValidationIfError(panel: AccordionPanelModel) {\n    if (panel.status === AccordionStatus.Error) {\n      triggerAllFormControlValidation(this.formGroup);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener, HostBinding, Input, OnInit } from '@angular/core';\n\nimport { StepperService } from './providers/stepper.service';\nimport { ClrStepperPanel } from './stepper-panel';\n\nexport enum ClrStepButtonType {\n  Next = 'next',\n  Submit = 'submit',\n}\n\n@Directive({\n  selector: '[clrStepButton]',\n  host: {\n    '[class.clr-step-button]': 'true',\n    '[class.btn]': 'true',\n    '[type]': \"'button'\",\n  },\n})\nexport class ClrStepButton implements OnInit {\n  @Input('clrStepButton') type: ClrStepButtonType | string = ClrStepButtonType.Next;\n  @HostBinding('class.btn-primary') submitButton = false;\n\n  constructor(private clrStep: ClrStepperPanel, private stepperService: StepperService) {}\n\n  ngOnInit() {\n    this.submitButton = this.type === ClrStepButtonType.Submit;\n  }\n\n  @HostListener('click')\n  navigateToNextPanel() {\n    this.stepperService.navigateToNextPanel(this.clrStep.id, this.clrStep.formGroup.valid);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  QueryList,\n  Optional,\n  ChangeDetectionStrategy,\n  Input,\n  SimpleChanges,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n  OnChanges,\n} from '@angular/core';\nimport { FormGroupDirective, NgForm } from '@angular/forms';\nimport { startWith, filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { StepperService } from './providers/stepper.service';\nimport { AccordionService } from '../providers/accordion.service';\nimport { ClrStepperPanel } from './stepper-panel';\n\n@Component({\n  selector: 'form[clrStepper]',\n  template: `<ng-content></ng-content>`,\n  host: {\n    '[class.clr-accordion]': 'true',\n    '[class.clr-stepper-forms]': 'true',\n  },\n  providers: [StepperService, { provide: AccordionService, useExisting: StepperService }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrStepper implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input('clrInitialStep') initialPanel: string;\n  @ContentChildren(ClrStepperPanel, { descendants: true })\n  panels: QueryList<ClrStepperPanel>;\n  subscriptions: Subscription[] = [];\n  form: FormGroupDirective | NgForm;\n\n  constructor(\n    @Optional() private formGroup: FormGroupDirective,\n    @Optional() private ngForm: NgForm,\n    private stepperService: StepperService\n  ) {}\n\n  ngOnInit() {\n    if (!this.formGroup && !this.ngForm) {\n      throw new Error('To use stepper a Reactive or Template Form is required.');\n    }\n\n    this.form = this.formGroup ? this.formGroup : this.ngForm;\n    this.subscriptions.push(this.listenForPanelsCompleted());\n    this.subscriptions.push(this.listenForFormResetChanges());\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.initialPanel.currentValue !== changes.initialPanel.previousValue) {\n      this.stepperService.overrideInitialPanel(this.initialPanel);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(this.listenForDOMChanges());\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private listenForFormResetChanges() {\n    return this.form.statusChanges\n      .pipe(filter(() => this.form.pristine)) // https://github.com/angular/angular/issues/10887\n      .subscribe(() => this.stepperService.resetPanels());\n  }\n\n  private listenForPanelsCompleted() {\n    return this.stepperService.panelsCompleted.subscribe(panelsCompleted => {\n      if (panelsCompleted && this.form.valid) {\n        this.form.ngSubmit.emit();\n      } else if (!this.form.valid && this.form.touched) {\n        this.setPanelsWithFormErrors();\n      }\n    });\n  }\n\n  private setPanelsWithFormErrors() {\n    const panelsWithErrors = this.panels.reduce((panels, p) => (p.formGroup.invalid ? [...panels, p.id] : panels), []);\n    this.stepperService.setPanelsWithErrors(panelsWithErrors);\n  }\n\n  private listenForDOMChanges() {\n    return this.panels.changes.pipe(startWith(this.panels)).subscribe(panels => {\n      this.stepperService.updatePanelOrder(panels.toArray().map(p => p.id));\n\n      if (this.initialPanel) {\n        this.stepperService.overrideInitialPanel(this.initialPanel);\n      }\n    });\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'form[clrStepper]' })\nexport class StepperWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { StepperWillyWonka } from './stepper-willy-wonka';\nimport { IfExpandService } from '../../../utils/conditional/if-expanded.service';\n\n@Directive({ selector: 'clr-stepper-panel, [clrStepButton]' })\nexport class StepperOompaLoompa extends OompaLoompa {\n  private expand: IfExpandService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: StepperWillyWonka, ifExpandService: IfExpandService) {\n    if (!willyWonka) {\n      throw new Error('clr-stepper-panel should only be used inside of clrStepper');\n    }\n    super(cdr, willyWonka);\n    this.expand = ifExpandService;\n  }\n\n  get flavor() {\n    return this.expand.expanded;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrAccordionModule } from '../accordion.module';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrStepButton } from './../stepper/step-button';\nimport { ClrStepper } from './../stepper/stepper';\nimport { ClrStepperPanel } from './stepper-panel';\nimport { StepperOompaLoompa } from './chocolate/stepper-oompa-loompa';\nimport { StepperWillyWonka } from './chocolate/stepper-willy-wonka';\n\nconst declarations = [ClrStepper, ClrStepButton, ClrStepperPanel, StepperOompaLoompa, StepperWillyWonka];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrAccordionModule],\n  declarations: [...declarations],\n  exports: [...declarations, ClrAccordionModule],\n})\nexport class ClrStepperModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input, HostBinding } from '@angular/core';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\nimport { ClrAriaLiveService, ClrAriaLivePoliteness } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  providers: [ClrAriaLiveService],\n  selector: 'clr-progress-bar',\n  template: `\n    <progress [id]=\"id\" [attr.max]=\"max\" [attr.value]=\"value\" [attr.data-displayval]=\"displayValue\"></progress>\n    <span *ngIf=\"displayAriaLive()\">{{ displayValue }}</span>\n  `,\n})\nexport class ClrProgressBar {\n  constructor(private ariaLiveService: ClrAriaLiveService) {}\n\n  /**\n   * Handle component ID\n   */\n  private _ID: string;\n  @HostBinding('attr.id') externalId: string = '';\n  @Input()\n  set id(value: string) {\n    this._ID = value;\n    this.externalId = null;\n  }\n  get id() {\n    return this._ID;\n  }\n\n  // Progress\n  @Input('clrMax') max: number = 100;\n  @Input('clrDisplayval') displayval: string;\n\n  private _value: number = 0;\n  @Input('clrValue')\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this._value = value;\n    if (this.displayAriaLive()) {\n      this.ariaLiveService.announce(this.displayValue, this.ariaLive);\n    }\n  }\n\n  // Styles\n  @HostBinding('class.progress')\n  get progressClass() {\n    return true;\n  }\n\n  private _labeled: boolean;\n  @HostBinding('class.labeled')\n  get labeledClass() {\n    return this._labeled;\n  }\n\n  @Input('clrLabeled')\n  set clrLabeled(value: boolean | string) {\n    this._labeled = isBooleanAttributeSet(value);\n  }\n\n  private _fade: boolean;\n  @HostBinding('class.progress-fade')\n  get fadeClass() {\n    return this._fade;\n  }\n\n  @Input('clrFade')\n  set clrFade(value: boolean | string) {\n    this._fade = isBooleanAttributeSet(value);\n  }\n\n  private _loop: boolean;\n  @HostBinding('class.loop')\n  get loopClass() {\n    return this._loop;\n  }\n\n  @Input('clrLoop')\n  set clrLoop(value: boolean | string) {\n    this._loop = isBooleanAttributeSet(value);\n  }\n\n  private _success: boolean;\n  @HostBinding('class.success')\n  get successClass() {\n    return this._success;\n  }\n\n  /** @deprecated since 2.0, remove in 4.0 */\n  @Input('clrSuccess')\n  set clrSuccess(value: boolean | string) {\n    this._success = isBooleanAttributeSet(value);\n  }\n\n  private _danger: boolean;\n  @HostBinding('class.danger')\n  get dangerClass() {\n    return this._danger;\n  }\n\n  /** @deprecated since 2.0, remove in 4.0 */\n  @Input('clrDanger')\n  set clrDanger(value: boolean | string) {\n    this._danger = isBooleanAttributeSet(value);\n  }\n\n  private _flash: boolean;\n  @HostBinding('class.flash')\n  get flashClass() {\n    return this._flash;\n  }\n\n  @Input('clrFlash')\n  set clrFlash(value: boolean | string) {\n    this._flash = isBooleanAttributeSet(value);\n  }\n\n  private _flashDanger: boolean;\n  @HostBinding('class.flash-danger')\n  get flashDangerClass() {\n    return this._flashDanger;\n  }\n\n  /** @deprecated since 2.0, remove in 4.0 */\n  @Input('clrFlashDanger')\n  set clrFlashDanger(value: boolean | string) {\n    this._flashDanger = isBooleanAttributeSet(value);\n  }\n\n  // Aria Live\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrAssertive') assertive: boolean;\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrOff') off: boolean;\n\n  /**\n   * Make sure that we always will have something that is readable\n   * for the screen reader\n   */\n  get displayValue() {\n    if (this.displayval) {\n      return this.displayval;\n    }\n    return `${this.value}%`;\n  }\n\n  /**\n   * Display aria-live only when there is value and it's not 0 or equal to the max value\n   */\n  displayAriaLive() {\n    return (this.value !== undefined || this.value !== 0) && this.value !== this.max;\n  }\n\n  get ariaLive(): ClrAriaLivePoliteness {\n    if (isBooleanAttributeSet(this.assertive)) {\n      return ClrAriaLivePoliteness.assertive;\n    }\n    if (isBooleanAttributeSet(this.off)) {\n      return ClrAriaLivePoliteness.off;\n    }\n    return ClrAriaLivePoliteness.polite;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrProgressBar } from './progress-bar';\n\nexport const CLR_PROGRESS_BAR_DIRECTIVES: Type<any>[] = [ClrProgressBar];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_PROGRESS_BAR_DIRECTIVES],\n  exports: [CLR_PROGRESS_BAR_DIRECTIVES],\n})\nexport class ClrProgressBarModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ClrTimelineLayout {\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical',\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ClrTimelineStepState {\n  NOT_STARTED = 'not-started',\n  CURRENT = 'current',\n  PROCESSING = 'processing',\n  SUCCESS = 'success',\n  ERROR = 'error',\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrTimelineStepState } from '../enums/timeline-step-state.enum';\nimport { IconAttributes } from '../interface/icon-attribute.iterface';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TimelineIconAttributeService {\n  private attributeMap: Map<ClrTimelineStepState, IconAttributes> = new Map<ClrTimelineStepState, IconAttributes>();\n\n  constructor(commonStrings: ClrCommonStringsService) {\n    this.attributeMap.set(ClrTimelineStepState.NOT_STARTED, {\n      iconShape: 'circle',\n      ariaLabel: commonStrings.keys.timelineStepNotStarted,\n    });\n    this.attributeMap.set(ClrTimelineStepState.CURRENT, {\n      iconShape: 'dot-circle',\n      ariaLabel: commonStrings.keys.timelineStepCurrent,\n    });\n    this.attributeMap.set(ClrTimelineStepState.PROCESSING, {\n      iconShape: undefined,\n      ariaLabel: commonStrings.keys.timelineStepProcessing,\n    });\n    this.attributeMap.set(ClrTimelineStepState.SUCCESS, {\n      iconShape: 'success-standard',\n      ariaLabel: commonStrings.keys.timelineStepSuccess,\n    });\n    this.attributeMap.set(ClrTimelineStepState.ERROR, {\n      iconShape: 'error-standard',\n      ariaLabel: commonStrings.keys.timelineStepError,\n    });\n  }\n\n  public getAriaLabel(step: ClrTimelineStepState): string {\n    return this.attributeMap.get(step).ariaLabel;\n  }\n\n  public getIconShape(step: ClrTimelineStepState): string {\n    return this.attributeMap.get(step).iconShape;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input, HostBinding } from '@angular/core';\n\nimport { ClrTimelineLayout } from './enums/timeline-layout.enum';\nimport { TimelineIconAttributeService } from './providers/timeline-icon-attribute.service';\n\n@Component({\n  selector: 'clr-timeline',\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: { '[class.clr-timeline]': 'true' },\n  providers: [TimelineIconAttributeService],\n})\nexport class ClrTimeline {\n  @Input('clrLayout') layout: ClrTimelineLayout = ClrTimelineLayout.HORIZONTAL;\n\n  @HostBinding('class.clr-timeline-vertical')\n  get isVertical(): boolean {\n    return this.layout === ClrTimelineLayout.VERTICAL;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n/**\n * Note: Why does this component have aria-hidden attribute?\n *\n * tl;dr: we want screen readers to ignore this element when its reading out to blind users.\n *\n * In order to make a timeline step accessible to screen readers we need the title read out before the\n * icon. In order to do this, ClrTimeLine step has a ContentChild that queries for the ClrTimelineStepTitle and\n * then adds the projected text into a .clr-sr-only element that is a sibling element to the icon. See the\n * ClrTimlineStep template for the DOM structure.\n */\n@Component({\n  selector: 'clr-timeline-step-title',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: { '[class.clr-timeline-step-title]': 'true', '[attr.aria-hidden]': 'true' },\n})\nexport class ClrTimelineStepTitle {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, ElementRef, Inject, Input, PLATFORM_ID } from '@angular/core';\n\nimport { ClrTimelineStepState } from './enums/timeline-step-state.enum';\nimport { TimelineIconAttributeService } from './providers/timeline-icon-attribute.service';\nimport { ClrTimelineStepTitle } from './timeline-step-title';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'clr-timeline-step',\n  template: `\n        <ng-content select=\"clr-timeline-step-header\"></ng-content>\n        <span class=\"clr-sr-only\">{{stepTitleText}}</span>\n        <ng-container *ngIf=\"!isProcessing; else processing\">\n            <clr-icon\n                    [attr.shape]=\"iconShape\"\n                    [attr.aria-label]=\"iconAriaLabel\"\n                    [attr.aria-current]=\"iconAriaCurrent\">\n            </clr-icon>\n        </ng-container>\n        <div class=\"clr-timeline-step-body\">\n            <ng-content select=\"clr-timeline-step-title\"></ng-content>\n            <ng-content select=\"clr-timeline-step-description\"></ng-content>\n        </div>\n\n        <ng-template #processing>\n            <clr-spinner clrMedium [attr.aria-label]=\"iconAriaLabel\"></clr-spinner>\n        </ng-template>\n    `,\n  host: { '[class.clr-timeline-step]': 'true' },\n})\nexport class ClrTimelineStep {\n  @Input('clrState') state: ClrTimelineStepState = ClrTimelineStepState.NOT_STARTED;\n\n  public stepTitleText: string;\n  @ContentChild(ClrTimelineStepTitle, { read: ElementRef })\n  stepTitle: ElementRef;\n\n  constructor(\n    private iconAttributeService: TimelineIconAttributeService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {}\n\n  ngAfterContentInit() {\n    if (this.stepTitle && isPlatformBrowser(this.platformId)) {\n      this.stepTitleText = this.stepTitle.nativeElement.innerText;\n    }\n  }\n\n  get iconAriaCurrent(): boolean {\n    return this.state === ClrTimelineStepState.CURRENT;\n  }\n\n  get iconAriaLabel(): string {\n    return this.iconAttributeService.getAriaLabel(this.state);\n  }\n\n  get iconShape(): string {\n    return this.iconAttributeService.getIconShape(this.state);\n  }\n\n  get isProcessing(): boolean {\n    return this.state === ClrTimelineStepState.PROCESSING;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-timeline-step-description',\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: { '[class.clr-timeline-step-description]': 'true' },\n})\nexport class ClrTimelineStepDescription {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-timeline-step-header',\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: { '[class.clr-timeline-step-header]': 'true' },\n})\nexport class ClrTimelineStepHeader {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../icon/icon.module';\nimport { ClrSpinnerModule } from '../progress/spinner/spinner.module';\n\nimport { ClrTimeline } from './timeline';\nimport { ClrTimelineStep } from './timeline-step';\nimport { ClrTimelineStepDescription } from './timeline-step-description';\nimport { ClrTimelineStepHeader } from './timeline-step-header';\nimport { ClrTimelineStepTitle } from './timeline-step-title';\n\nconst CLR_TIMELINE_DIRECTIVES: Type<any>[] = [\n  ClrTimeline,\n  ClrTimelineStep,\n  ClrTimelineStepDescription,\n  ClrTimelineStepHeader,\n  ClrTimelineStepTitle,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrSpinnerModule],\n  exports: [...CLR_TIMELINE_DIRECTIVES, ClrIconModule, ClrSpinnerModule],\n  declarations: [CLR_TIMELINE_DIRECTIVES],\n})\nexport class ClrTimelineModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrButtonModule } from './button/button.module';\nimport { ClrDataModule } from './data/data.module';\nimport { ClrDragAndDropModule } from './utils/drag-and-drop/drag-and-drop.module';\nimport { ClrEmphasisModule } from './emphasis/emphasis.module';\nimport { ClrFormsModule } from './forms/forms.module';\nimport { ClrIconModule } from './icon/icon.module';\nimport { ClrLayoutModule } from './layout/layout.module';\nimport { ClrModalModule } from './modal/modal.module';\nimport { ClrPopoverModule } from './popover/popover.module';\nimport { ClrConditionalModule } from './utils/conditional/conditional.module';\nimport { ClrFocusOnViewInitModule } from './utils/focus/focus-on-view-init/focus-on-view-init.module';\nimport { ClrFocusTrapModule } from './utils/focus-trap/focus-trap.module';\nimport { ClrLoadingModule } from './utils/loading/loading.module';\nimport { ClrWizardModule } from './wizard/wizard.module';\nimport { ClrStepperModule } from './accordion/stepper/stepper.module';\nimport { ClrSpinnerModule } from './progress/spinner/spinner.module';\nimport { ClrProgressBarModule } from './progress/progress-bars/progress-bar.module';\nimport { ClrPopoverModuleNext } from './utils/popover/popover.module';\nimport { ClrTimelineModule } from './timeline/timeline.module';\n\n@NgModule({\n  exports: [\n    ClrEmphasisModule,\n    ClrDataModule,\n    ClrIconModule,\n    ClrModalModule,\n    ClrLoadingModule,\n    ClrConditionalModule,\n    ClrFocusTrapModule,\n    ClrFocusOnViewInitModule,\n    ClrButtonModule,\n    ClrFormsModule,\n    ClrLayoutModule,\n    ClrPopoverModule,\n    ClrWizardModule,\n    ClrDragAndDropModule,\n    ClrStepperModule,\n    ClrSpinnerModule,\n    ClrProgressBarModule,\n    ClrPopoverModuleNext,\n    ClrTimelineModule,\n  ],\n})\nexport class ClarityModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './button';\nexport * from './button-group';\nexport * from './button-group.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './loading-button';\nexport * from './loading-button.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './button.module';\nexport * from './button-group/index';\nexport * from './button-loading/index';\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './datagrid';\nexport * from './datagrid-action-bar';\nexport * from './datagrid-action-overflow';\nexport * from './datagrid-column';\nexport * from './datagrid-column-toggle';\nexport * from './datagrid-column-toggle-title';\nexport * from './datagrid-column-toggle-button';\nexport * from './datagrid-column-separator';\nexport * from './datagrid-detail';\nexport * from './datagrid-detail-body';\nexport * from './datagrid-detail-header';\nexport * from './datagrid-hideable-column';\nexport * from './datagrid-filter';\nexport * from './datagrid-if-detail';\nexport * from './datagrid-items';\nexport * from './datagrid-items-trackby';\nexport * from './datagrid-row';\nexport * from './datagrid-row-detail';\nexport * from './datagrid-cell';\nexport * from './datagrid-footer';\nexport * from './datagrid-page-size';\nexport * from './datagrid-pagination';\nexport * from './datagrid-placeholder';\n\nexport * from './interfaces/state.interface';\nexport * from './enums/sort-order.enum';\nexport * from './interfaces/filter.interface';\nexport * from './interfaces/string-filter.interface';\nexport * from './interfaces/numeric-filter.interface';\nexport * from './interfaces/comparator.interface';\n\nexport * from './built-in/filters/datagrid-string-filter';\nexport * from './built-in/filters/datagrid-numeric-filter';\nexport * from './built-in/filters/datagrid-property-string-filter';\nexport * from './built-in/filters/datagrid-property-numeric-filter';\nexport * from './built-in/comparators/datagrid-property-comparator';\n\nexport * from './datagrid.module';\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './models/selected-state.enum';\nexport * from './tree';\nexport * from './tree-node';\nexport * from './recursive-for-of';\nexport * from './tree-view.module';\nexport * from './tree-node-link';\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './stack-view';\nexport * from './stack-header';\nexport * from './stack-block';\nexport * from './stack-input';\nexport * from './stack-select';\nexport * from './stack-view.module';\nexport * from './stack-view-custom-tags';\nexport * from './stack-content-input';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './data.module';\nexport * from './datagrid/index';\nexport * from './tree-view/index';\nexport * from './stack-view/index';\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './alert';\nexport * from './alert-item';\nexport * from './alert-text';\nexport * from './alerts';\nexport * from './alerts-pager';\nexport * from './alert.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport * from './emphasis.module';\nexport * from './alert/index';\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './if-error/if-error';\nexport * from './error';\nexport * from './form';\nexport * from './helper';\nexport * from './label';\nexport * from './layout';\nexport * from './abstract-container';\nexport * from './control';\nexport * from './control-container';\nexport * from './wrapped-control';\nexport * from './common.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './checkbox';\nexport * from './checkbox-container';\nexport * from './checkbox-wrapper';\nexport * from './checkbox.module';\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './datalist';\nexport * from './datalist-input';\nexport * from './datalist-container';\nexport * from './datalist.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './date-container';\nexport * from './date-input';\nexport * from './datepicker-view-manager';\nexport * from './daypicker';\nexport * from './monthpicker';\nexport * from './yearpicker';\nexport * from './calendar';\nexport * from './day';\n\nexport * from './datepicker.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './input';\nexport * from './input-container';\nexport * from './input.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './password';\nexport * from './password-container';\nexport * from './password.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './radio';\nexport * from './radio-container';\nexport * from './radio-wrapper';\nexport * from './radio.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './select';\nexport * from './select-container';\nexport * from './select.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './textarea';\nexport * from './textarea-container';\nexport * from './textarea.module';\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './range';\nexport * from './range-container';\nexport * from './range.module';\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport * from './common/index';\nexport * from './checkbox/index';\nexport * from './datalist/index';\nexport * from './datepicker/index';\nexport * from './input/index';\nexport * from './password/index';\nexport * from './radio/index';\nexport * from './select/index';\nexport * from './textarea/index';\nexport * from './range/index';\nexport * from './forms.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport * from './icon';\nexport * from './icon.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './main-container';\nexport * from './main-container.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport * from './main-container-willy-wonka';\nexport * from './nav-detection-oompa-loompa';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport * from './chocolate/index';\nexport * from './header';\nexport * from './nav-level';\nexport * from './navigation.module';\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './tabs';\nexport * from './tab';\nexport * from './tab-content';\nexport * from './tab-overflow-content';\nexport * from './tab-link.directive';\nexport * from './tabs.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './vertical-nav-group-children';\nexport * from './vertical-nav-group';\nexport * from './vertical-nav';\nexport * from './vertical-nav-link';\nexport * from './vertical-nav-icon';\nexport * from './vertical-nav.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport * from './layout.module';\nexport * from './main-container/index';\nexport * from './nav/index';\nexport * from './tabs/index';\nexport * from './vertical-nav/index';\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport * from './modal';\nexport * from './modal.module';\nexport * from './modal-body';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport const CLR_MENU_POSITIONS: string[] = [\n  'bottom-left',\n  'bottom-right',\n  'top-left',\n  'top-right',\n  'left-bottom',\n  'left-top',\n  'right-bottom',\n  'right-top',\n];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './dropdown';\nexport * from './dropdown-menu';\nexport * from './dropdown-trigger';\nexport * from './dropdown-item';\nexport * from './menu-positions';\nexport * from './dropdown.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './signpost';\nexport * from './signpost-content';\nexport * from './signpost-trigger';\nexport * from './signpost.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './tooltip';\nexport * from './tooltip-trigger';\nexport * from './tooltip-content';\nexport * from './tooltip.module';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport * from './dropdown/index';\nexport * from './popover.module';\nexport * from './signpost/index';\nexport * from './tooltip/index';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, state, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function collapse(): AnimationMetadata[] {\n  'use strict';\n  return [\n    state('true', style({ height: 0, 'overflow-y': 'hidden' })),\n    transition('true => false', [animate(defaultAnimationTiming, style({ height: '*', 'overflow-y': 'hidden' }))]),\n    transition('false => true', [style({ height: '*', 'overflow-y': 'hidden' }), animate(defaultAnimationTiming)]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport * from './collapse';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function fade(opacity: number = 1): AnimationMetadata[] {\n  return [\n    transition('void => *', [style({ opacity: 0 }), animate(defaultAnimationTiming, style({ opacity: opacity }))]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ opacity: 0 }))]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport * from './fade';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function fadeSlide(direction: string): AnimationMetadata[] {\n  let transform: string = null;\n  if (direction === 'up') {\n    transform = 'translate(0, 25%)';\n  } else if (direction === 'down') {\n    transform = 'translate(0, -25%)';\n  } else if (direction === 'left') {\n    transform = 'translate(25%, 0)';\n  } else if (direction === 'right') {\n    transform = 'translate(-25%, 0)';\n  } else {\n    throw new Error('Unknown direction ' + direction + ' for slide animation.');\n  }\n  return [\n    transition('void => *', [style({ opacity: 0, transform: transform }), animate(defaultAnimationTiming)]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ opacity: 0, transform: transform }))]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport * from './fade-slide';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function slide(direction: string): AnimationMetadata[] {\n  let transform: string = null;\n  if (direction === 'up') {\n    transform = 'translate(0, 25%)';\n  } else if (direction === 'down') {\n    transform = 'translate(0, -25%)';\n  } else if (direction === 'left') {\n    transform = 'translate(25%, 0)';\n  } else if (direction === 'right') {\n    transform = 'translate(-25%, 0)';\n  } else {\n    throw new Error('Unknown direction ' + direction + ' for slide animation.');\n  }\n  return [\n    transition('void => *', [style({ transform: transform }), animate(defaultAnimationTiming)]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ transform: transform }))]),\n  ];\n}\n"],"names":["Directive","NgModule","CommonModule","Subject","Injectable","fromEvent","filter","Renderer2","Inject","DOCUMENT","ClrAlignment","ClrAxis","isPlatformBrowser","PLATFORM_ID","EventEmitter","debounceTime","ViewContainerRef","TemplateRef","Input","Output","HostListener","ElementRef","ClrLoadingState","Optional","SkipSelf","ViewChild","Component","InjectionToken","ClrSide","ContentChildren","trigger","transition","style","animate","keyframes","BehaviorSubject","ClrAriaLivePoliteness","NgZone","HostBinding","ContentChild","ComponentFactoryResolver","startWith","distinctUntilChanged","Type","Injector","NgControl","Self","Attribute","first","getLocaleDayNames","FormStyle","TranslationWidth","getLocaleMonthNames","getLocaleFirstDayOfWeek","getLocaleDateFormat","FormatWidth","LOCALE_ID","of","switchMap","FormsModule","SelectMultipleControlValueAccessor","counter","ChangeDetectorRef","ClrDatagridSortOrder","ChangeDetectionStrategy","NgForOf","IterableDiffers","nbRow","combineLatest","map","ClrSelectedState","state","isObservable","FocusService","Observable","take","ReplaySubject","tokenFactory","POSITIONS","tap","FormControl","FormGroup","FormGroupName","NgModelGroup","ClrStepButtonType","FormGroupDirective","NgForm","declarations","ClrTimelineLayout","ClrTimelineStepState"],"mappings":"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"}