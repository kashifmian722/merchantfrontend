import { ElementRef, EventEmitter, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { DomAdapter } from '../../dom-adapter/dom-adapter';
import { ClrDragEvent } from '../drag-event';
import { ClrDropToleranceInterface } from '../interfaces/drop-tolerance.interface';
import { DragAndDropEventBusService } from '../providers/drag-and-drop-event-bus.service';
import * as ɵngcc0 from '@angular/core';
export declare class ClrDroppable<T> implements OnInit, OnDestroy {
    private el;
    private eventBus;
    private domAdapter;
    private renderer;
    private dragStartSubscription;
    private dragMoveSubscription;
    private dragEndSubscription;
    private droppableEl;
    private clientRect;
    constructor(el: ElementRef, eventBus: DragAndDropEventBusService<T>, domAdapter: DomAdapter, renderer: Renderer2);
    isDraggableMatch: boolean;
    private _isDraggableOver;
    set isDraggableOver(value: boolean);
    private _group;
    set group(value: string | string[]);
    private _dropTolerance;
    private dropToleranceGenerator;
    set dropTolerance(value: number | string | ClrDropToleranceInterface);
    dragStartEmitter: EventEmitter<ClrDragEvent<T>>;
    dragMoveEmitter: EventEmitter<ClrDragEvent<T>>;
    dragEndEmitter: EventEmitter<ClrDragEvent<T>>;
    dragLeaveEmitter: EventEmitter<ClrDragEvent<T>>;
    dragEnterEmitter: EventEmitter<ClrDragEvent<T>>;
    dropEmitter: EventEmitter<ClrDragEvent<T>>;
    private unsubscribeFrom;
    private checkGroupMatch;
    private isInDropArea;
    private onDragStart;
    private onDragMove;
    private onDragEnd;
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrDroppable<any>>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ClrDroppable<any>, "[clrDroppable]", never, {
    "group": "clrGroup";
    "dropTolerance": "clrDropTolerance";
}, {
    "dragStartEmitter": "clrDragStart";
    "dragMoveEmitter": "clrDragMove";
    "dragEndEmitter": "clrDragEnd";
    "dragLeaveEmitter": "clrDragLeave";
    "dragEnterEmitter": "clrDragEnter";
    "dropEmitter": "clrDrop";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcHBhYmxlLmQudHMiLCJzb3VyY2VzIjpbImRyb3BwYWJsZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE9uRGVzdHJveSwgT25Jbml0LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERvbUFkYXB0ZXIgfSBmcm9tICcuLi8uLi9kb20tYWRhcHRlci9kb20tYWRhcHRlcic7XG5pbXBvcnQgeyBDbHJEcmFnRXZlbnQgfSBmcm9tICcuLi9kcmFnLWV2ZW50JztcbmltcG9ydCB7IENsckRyb3BUb2xlcmFuY2VJbnRlcmZhY2UgfSBmcm9tICcuLi9pbnRlcmZhY2VzL2Ryb3AtdG9sZXJhbmNlLmludGVyZmFjZSc7XG5pbXBvcnQgeyBEcmFnQW5kRHJvcEV2ZW50QnVzU2VydmljZSB9IGZyb20gJy4uL3Byb3ZpZGVycy9kcmFnLWFuZC1kcm9wLWV2ZW50LWJ1cy5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENsckRyb3BwYWJsZTxUPiBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIGVsO1xuICAgIHByaXZhdGUgZXZlbnRCdXM7XG4gICAgcHJpdmF0ZSBkb21BZGFwdGVyO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgcHJpdmF0ZSBkcmFnU3RhcnRTdWJzY3JpcHRpb247XG4gICAgcHJpdmF0ZSBkcmFnTW92ZVN1YnNjcmlwdGlvbjtcbiAgICBwcml2YXRlIGRyYWdFbmRTdWJzY3JpcHRpb247XG4gICAgcHJpdmF0ZSBkcm9wcGFibGVFbDtcbiAgICBwcml2YXRlIGNsaWVudFJlY3Q7XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIGV2ZW50QnVzOiBEcmFnQW5kRHJvcEV2ZW50QnVzU2VydmljZTxUPiwgZG9tQWRhcHRlcjogRG9tQWRhcHRlciwgcmVuZGVyZXI6IFJlbmRlcmVyMik7XG4gICAgaXNEcmFnZ2FibGVNYXRjaDogYm9vbGVhbjtcbiAgICBwcml2YXRlIF9pc0RyYWdnYWJsZU92ZXI7XG4gICAgc2V0IGlzRHJhZ2dhYmxlT3Zlcih2YWx1ZTogYm9vbGVhbik7XG4gICAgcHJpdmF0ZSBfZ3JvdXA7XG4gICAgc2V0IGdyb3VwKHZhbHVlOiBzdHJpbmcgfCBzdHJpbmdbXSk7XG4gICAgcHJpdmF0ZSBfZHJvcFRvbGVyYW5jZTtcbiAgICBwcml2YXRlIGRyb3BUb2xlcmFuY2VHZW5lcmF0b3I7XG4gICAgc2V0IGRyb3BUb2xlcmFuY2UodmFsdWU6IG51bWJlciB8IHN0cmluZyB8IENsckRyb3BUb2xlcmFuY2VJbnRlcmZhY2UpO1xuICAgIGRyYWdTdGFydEVtaXR0ZXI6IEV2ZW50RW1pdHRlcjxDbHJEcmFnRXZlbnQ8VD4+O1xuICAgIGRyYWdNb3ZlRW1pdHRlcjogRXZlbnRFbWl0dGVyPENsckRyYWdFdmVudDxUPj47XG4gICAgZHJhZ0VuZEVtaXR0ZXI6IEV2ZW50RW1pdHRlcjxDbHJEcmFnRXZlbnQ8VD4+O1xuICAgIGRyYWdMZWF2ZUVtaXR0ZXI6IEV2ZW50RW1pdHRlcjxDbHJEcmFnRXZlbnQ8VD4+O1xuICAgIGRyYWdFbnRlckVtaXR0ZXI6IEV2ZW50RW1pdHRlcjxDbHJEcmFnRXZlbnQ8VD4+O1xuICAgIGRyb3BFbWl0dGVyOiBFdmVudEVtaXR0ZXI8Q2xyRHJhZ0V2ZW50PFQ+PjtcbiAgICBwcml2YXRlIHVuc3Vic2NyaWJlRnJvbTtcbiAgICBwcml2YXRlIGNoZWNrR3JvdXBNYXRjaDtcbiAgICBwcml2YXRlIGlzSW5Ecm9wQXJlYTtcbiAgICBwcml2YXRlIG9uRHJhZ1N0YXJ0O1xuICAgIHByaXZhdGUgb25EcmFnTW92ZTtcbiAgICBwcml2YXRlIG9uRHJhZ0VuZDtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=