import { NgZone } from '@angular/core';
import { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import { ColumnsService } from './providers/columns.service';
import { ColumnState } from './interfaces/column-state.interface';
import { ClrDatagridColumnToggleTitle } from './datagrid-column-toggle-title';
import { ClrDatagridColumnToggleButton } from './datagrid-column-toggle-button';
import * as ɵngcc0 from '@angular/core';
export declare class ClrDatagridColumnToggle {
    commonStrings: ClrCommonStringsService;
    private columnsService;
    columnSwitchId: string;
    private platformId;
    private zone;
    popoverId: string;
    private _allColumnsVisible;
    smartPosition: ClrPopoverPosition;
    openState: any;
    customToggleTitle: ClrDatagridColumnToggleTitle;
    customToggleButton: ClrDatagridColumnToggleButton;
    private menuDescriptionElement;
    private allSelectedElement;
    get allColumnsVisible(): boolean;
    set allColumnsVisible(value: boolean);
    constructor(commonStrings: ClrCommonStringsService, columnsService: ColumnsService, columnSwitchId: string, platformId: Object, zone: NgZone, popoverId: string);
    get hideableColumnStates(): ColumnState[];
    get hasOnlyOneVisibleColumn(): boolean;
    toggleColumnState(columnState: ColumnState, event: boolean): void;
    toggleSwitchPanel(): void;
    allColumnsSelected(): void;
    trackByFn(index: any): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrDatagridColumnToggle>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrDatagridColumnToggle, "clr-dg-column-toggle", never, {}, {}, ["customToggleTitle", "customToggleButton"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtY29sdW1uLXRvZ2dsZS5kLnRzIiwic291cmNlcyI6WyJkYXRhZ3JpZC1jb2x1bW4tdG9nZ2xlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENsclBvcG92ZXJQb3NpdGlvbiB9IGZyb20gJy4uLy4uL3V0aWxzL3BvcG92ZXIvaW50ZXJmYWNlcy9wb3BvdmVyLXBvc2l0aW9uLmludGVyZmFjZSc7XG5pbXBvcnQgeyBDbHJDb21tb25TdHJpbmdzU2VydmljZSB9IGZyb20gJy4uLy4uL3V0aWxzL2kxOG4vY29tbW9uLXN0cmluZ3Muc2VydmljZSc7XG5pbXBvcnQgeyBDb2x1bW5zU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL2NvbHVtbnMuc2VydmljZSc7XG5pbXBvcnQgeyBDb2x1bW5TdGF0ZSB9IGZyb20gJy4vaW50ZXJmYWNlcy9jb2x1bW4tc3RhdGUuaW50ZXJmYWNlJztcbmltcG9ydCB7IENsckRhdGFncmlkQ29sdW1uVG9nZ2xlVGl0bGUgfSBmcm9tICcuL2RhdGFncmlkLWNvbHVtbi10b2dnbGUtdGl0bGUnO1xuaW1wb3J0IHsgQ2xyRGF0YWdyaWRDb2x1bW5Ub2dnbGVCdXR0b24gfSBmcm9tICcuL2RhdGFncmlkLWNvbHVtbi10b2dnbGUtYnV0dG9uJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENsckRhdGFncmlkQ29sdW1uVG9nZ2xlIHtcbiAgICBjb21tb25TdHJpbmdzOiBDbHJDb21tb25TdHJpbmdzU2VydmljZTtcbiAgICBwcml2YXRlIGNvbHVtbnNTZXJ2aWNlO1xuICAgIGNvbHVtblN3aXRjaElkOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBwbGF0Zm9ybUlkO1xuICAgIHByaXZhdGUgem9uZTtcbiAgICBwb3BvdmVySWQ6IHN0cmluZztcbiAgICBwcml2YXRlIF9hbGxDb2x1bW5zVmlzaWJsZTtcbiAgICBzbWFydFBvc2l0aW9uOiBDbHJQb3BvdmVyUG9zaXRpb247XG4gICAgb3BlblN0YXRlOiBhbnk7XG4gICAgY3VzdG9tVG9nZ2xlVGl0bGU6IENsckRhdGFncmlkQ29sdW1uVG9nZ2xlVGl0bGU7XG4gICAgY3VzdG9tVG9nZ2xlQnV0dG9uOiBDbHJEYXRhZ3JpZENvbHVtblRvZ2dsZUJ1dHRvbjtcbiAgICBwcml2YXRlIG1lbnVEZXNjcmlwdGlvbkVsZW1lbnQ7XG4gICAgcHJpdmF0ZSBhbGxTZWxlY3RlZEVsZW1lbnQ7XG4gICAgZ2V0IGFsbENvbHVtbnNWaXNpYmxlKCk6IGJvb2xlYW47XG4gICAgc2V0IGFsbENvbHVtbnNWaXNpYmxlKHZhbHVlOiBib29sZWFuKTtcbiAgICBjb25zdHJ1Y3Rvcihjb21tb25TdHJpbmdzOiBDbHJDb21tb25TdHJpbmdzU2VydmljZSwgY29sdW1uc1NlcnZpY2U6IENvbHVtbnNTZXJ2aWNlLCBjb2x1bW5Td2l0Y2hJZDogc3RyaW5nLCBwbGF0Zm9ybUlkOiBPYmplY3QsIHpvbmU6IE5nWm9uZSwgcG9wb3ZlcklkOiBzdHJpbmcpO1xuICAgIGdldCBoaWRlYWJsZUNvbHVtblN0YXRlcygpOiBDb2x1bW5TdGF0ZVtdO1xuICAgIGdldCBoYXNPbmx5T25lVmlzaWJsZUNvbHVtbigpOiBib29sZWFuO1xuICAgIHRvZ2dsZUNvbHVtblN0YXRlKGNvbHVtblN0YXRlOiBDb2x1bW5TdGF0ZSwgZXZlbnQ6IGJvb2xlYW4pOiB2b2lkO1xuICAgIHRvZ2dsZVN3aXRjaFBhbmVsKCk6IHZvaWQ7XG4gICAgYWxsQ29sdW1uc1NlbGVjdGVkKCk6IHZvaWQ7XG4gICAgdHJhY2tCeUZuKGluZGV4OiBhbnkpOiBhbnk7XG59XG4iXX0=