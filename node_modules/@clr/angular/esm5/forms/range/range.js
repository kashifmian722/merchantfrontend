/**
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { __decorate, __extends, __param } from "tslib";
import { Directive, Optional, ViewContainerRef, Renderer2, ElementRef, Injector, Self } from '@angular/core';
import { NgControl } from '@angular/forms';
import { WrappedFormControl } from '../common/wrapped-control';
import { ClrRangeContainer } from './range-container';
var ClrRange = /** @class */ (function (_super) {
    __extends(ClrRange, _super);
    function ClrRange(vcr, injector, control, renderer, el) {
        return _super.call(this, vcr, ClrRangeContainer, injector, control, renderer, el) || this;
    }
    ClrRange.ctorParameters = function () { return [
        { type: ViewContainerRef },
        { type: Injector },
        { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },
        { type: Renderer2 },
        { type: ElementRef }
    ]; };
    ClrRange = __decorate([
        Directive({ selector: '[clrRange]', host: { '[class.clr-range]': 'true' } }),
        __param(2, Self()),
        __param(2, Optional())
    ], ClrRange);
    return ClrRange;
}(WrappedFormControl));
export { ClrRange };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFuZ2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AY2xyL2FuZ3VsYXIvIiwic291cmNlcyI6WyJmb3Jtcy9yYW5nZS9yYW5nZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHOztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLGdCQUFnQixFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFM0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFHdEQ7SUFBOEIsNEJBQXFDO0lBQ2pFLGtCQUNFLEdBQXFCLEVBQ3JCLFFBQWtCLEVBR2xCLE9BQWtCLEVBQ2xCLFFBQW1CLEVBQ25CLEVBQWM7ZUFFZCxrQkFBTSxHQUFHLEVBQUUsaUJBQWlCLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUFDO0lBQ2hFLENBQUM7O2dCQVRNLGdCQUFnQjtnQkFDWCxRQUFRO2dCQUdULFNBQVMsdUJBRmpCLElBQUksWUFDSixRQUFRO2dCQUVDLFNBQVM7Z0JBQ2YsVUFBVTs7SUFSTCxRQUFRO1FBRHBCLFNBQVMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxZQUFZLEVBQUUsSUFBSSxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxFQUFFLEVBQUUsQ0FBQztRQUt4RSxXQUFBLElBQUksRUFBRSxDQUFBO1FBQ04sV0FBQSxRQUFRLEVBQUUsQ0FBQTtPQUxGLFFBQVEsQ0FlcEI7SUFBRCxlQUFDO0NBQUEsQUFmRCxDQUE4QixrQkFBa0IsR0FlL0M7U0FmWSxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAxOSBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cblxuaW1wb3J0IHsgRGlyZWN0aXZlLCBPcHRpb25hbCwgVmlld0NvbnRhaW5lclJlZiwgUmVuZGVyZXIyLCBFbGVtZW50UmVmLCBJbmplY3RvciwgU2VsZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdDb250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBXcmFwcGVkRm9ybUNvbnRyb2wgfSBmcm9tICcuLi9jb21tb24vd3JhcHBlZC1jb250cm9sJztcbmltcG9ydCB7IENsclJhbmdlQ29udGFpbmVyIH0gZnJvbSAnLi9yYW5nZS1jb250YWluZXInO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbY2xyUmFuZ2VdJywgaG9zdDogeyAnW2NsYXNzLmNsci1yYW5nZV0nOiAndHJ1ZScgfSB9KVxuZXhwb3J0IGNsYXNzIENsclJhbmdlIGV4dGVuZHMgV3JhcHBlZEZvcm1Db250cm9sPENsclJhbmdlQ29udGFpbmVyPiB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHZjcjogVmlld0NvbnRhaW5lclJlZixcbiAgICBpbmplY3RvcjogSW5qZWN0b3IsXG4gICAgQFNlbGYoKVxuICAgIEBPcHRpb25hbCgpXG4gICAgY29udHJvbDogTmdDb250cm9sLFxuICAgIHJlbmRlcmVyOiBSZW5kZXJlcjIsXG4gICAgZWw6IEVsZW1lbnRSZWZcbiAgKSB7XG4gICAgc3VwZXIodmNyLCBDbHJSYW5nZUNvbnRhaW5lciwgaW5qZWN0b3IsIGNvbnRyb2wsIHJlbmRlcmVyLCBlbCk7XG4gIH1cblxuICAvLyBOb3RlczogV2UgbmVlZCBhbiBvdXRwdXQgaGVyZSBFdmVudEVtaXR0ZXIgZm9yIHRoZSB2YWx1ZVxuICAvLyBEb2VzIHRoaXMgaW1wbGVtZW50YXRpb24gYWxzbyBuZWVkIGEgZGlzcGxheSBmb3IgdGhlIHZhbHVlP1xufVxuIl19