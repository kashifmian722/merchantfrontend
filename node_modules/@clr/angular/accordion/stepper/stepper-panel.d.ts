import { OnInit, ElementRef } from '@angular/core';
import { FormGroupName, NgModelGroup } from '@angular/forms';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import { StepperService } from './providers/stepper.service';
import { IfExpandService } from '../../utils/conditional/if-expanded.service';
import { ClrAccordionPanel } from '../accordion-panel';
import * as ɵngcc0 from '@angular/core';
export declare class ClrStepperPanel extends ClrAccordionPanel implements OnInit {
    private platformId;
    commonStrings: ClrCommonStringsService;
    private formGroupName;
    private ngModelGroup;
    private stepperService;
    isAccordion: boolean;
    headerButton: ElementRef;
    private subscriptions;
    get formGroup(): import("@angular/forms").FormGroup;
    get id(): string;
    set id(_value: string);
    constructor(platformId: Object, commonStrings: ClrCommonStringsService, formGroupName: FormGroupName, ngModelGroup: NgModelGroup, stepperService: StepperService, ifExpandService: IfExpandService, id: string);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private listenToFocusChanges;
    private triggerAllFormControlValidationIfError;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrStepperPanel>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrStepperPanel, "clr-stepper-panel", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci1wYW5lbC5kLnRzIiwic291cmNlcyI6WyJzdGVwcGVyLXBhbmVsLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25Jbml0LCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXBOYW1lLCBOZ01vZGVsR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBDbHJDb21tb25TdHJpbmdzU2VydmljZSB9IGZyb20gJy4uLy4uL3V0aWxzL2kxOG4vY29tbW9uLXN0cmluZ3Muc2VydmljZSc7XG5pbXBvcnQgeyBTdGVwcGVyU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL3N0ZXBwZXIuc2VydmljZSc7XG5pbXBvcnQgeyBJZkV4cGFuZFNlcnZpY2UgfSBmcm9tICcuLi8uLi91dGlscy9jb25kaXRpb25hbC9pZi1leHBhbmRlZC5zZXJ2aWNlJztcbmltcG9ydCB7IENsckFjY29yZGlvblBhbmVsIH0gZnJvbSAnLi4vYWNjb3JkaW9uLXBhbmVsJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENsclN0ZXBwZXJQYW5lbCBleHRlbmRzIENsckFjY29yZGlvblBhbmVsIGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBwcml2YXRlIHBsYXRmb3JtSWQ7XG4gICAgY29tbW9uU3RyaW5nczogQ2xyQ29tbW9uU3RyaW5nc1NlcnZpY2U7XG4gICAgcHJpdmF0ZSBmb3JtR3JvdXBOYW1lO1xuICAgIHByaXZhdGUgbmdNb2RlbEdyb3VwO1xuICAgIHByaXZhdGUgc3RlcHBlclNlcnZpY2U7XG4gICAgaXNBY2NvcmRpb246IGJvb2xlYW47XG4gICAgaGVhZGVyQnV0dG9uOiBFbGVtZW50UmVmO1xuICAgIHByaXZhdGUgc3Vic2NyaXB0aW9ucztcbiAgICBnZXQgZm9ybUdyb3VwKCk6IGltcG9ydChcIkBhbmd1bGFyL2Zvcm1zXCIpLkZvcm1Hcm91cDtcbiAgICBnZXQgaWQoKTogc3RyaW5nO1xuICAgIHNldCBpZChfdmFsdWU6IHN0cmluZyk7XG4gICAgY29uc3RydWN0b3IocGxhdGZvcm1JZDogT2JqZWN0LCBjb21tb25TdHJpbmdzOiBDbHJDb21tb25TdHJpbmdzU2VydmljZSwgZm9ybUdyb3VwTmFtZTogRm9ybUdyb3VwTmFtZSwgbmdNb2RlbEdyb3VwOiBOZ01vZGVsR3JvdXAsIHN0ZXBwZXJTZXJ2aWNlOiBTdGVwcGVyU2VydmljZSwgaWZFeHBhbmRTZXJ2aWNlOiBJZkV4cGFuZFNlcnZpY2UsIGlkOiBzdHJpbmcpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBwcml2YXRlIGxpc3RlblRvRm9jdXNDaGFuZ2VzO1xuICAgIHByaXZhdGUgdHJpZ2dlckFsbEZvcm1Db250cm9sVmFsaWRhdGlvbklmRXJyb3I7XG59XG4iXX0=