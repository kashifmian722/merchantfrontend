/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 * /*
 * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.

 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "./wizard.module";
import * as i2 from "@angular/common";
import * as i3 from "../icon/icon.module";
import * as i4 from "../utils/focus-trap/focus-trap.module";
import * as i5 from "../utils/focus/focus-on-view-init/focus-on-view-init.module";
import * as i6 from "../modal/modal.module";
import * as i7 from "../utils/conditional/conditional.module";
import * as i8 from "../popover/dropdown/dropdown.module";
import * as i9 from "../emphasis/alert/alert.module";
import * as i10 from "../utils/focus/focus-on-view-init/focus-on-view-init.provider";
var ClrWizardModuleNgFactory = i0.ɵcmf(i1.ClrWizardModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID]), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i3.ClrIconModule, i3.ClrIconModule, []), i0.ɵmpd(1073742336, i4.ClrFocusTrapModule, i4.ClrFocusTrapModule, []), i0.ɵmpd(1073742336, i5.ClrFocusOnViewInitModule, i5.ClrFocusOnViewInitModule, []), i0.ɵmpd(1073742336, i6.ClrModalModule, i6.ClrModalModule, []), i0.ɵmpd(1073742336, i7.ClrConditionalModule, i7.ClrConditionalModule, []), i0.ɵmpd(1073742336, i8.ClrDropdownModule, i8.ClrDropdownModule, []), i0.ɵmpd(1073742336, i9.ClrAlertModule, i9.ClrAlertModule, []), i0.ɵmpd(1073742336, i1.ClrWizardModule, i1.ClrWizardModule, []), i0.ɵmpd(256, i10.FOCUS_ON_VIEW_INIT, true, [])]); });
export { ClrWizardModuleNgFactory as ClrWizardModuleNgFactory };
//# sourceMappingURL=data:application/json;base64,