import { EventEmitter, OnDestroy, NgZone } from '@angular/core';
import { RowActionService } from './providers/row-action-service';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';
import { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';
import * as ɵngcc0 from '@angular/core';
export declare class ClrDatagridActionOverflow implements OnDestroy {
    private rowActionService;
    commonStrings: ClrCommonStringsService;
    private platformId;
    private zone;
    private smartToggleService;
    popoverId: string;
    private subscriptions;
    smartPosition: ClrPopoverPosition;
    constructor(rowActionService: RowActionService, commonStrings: ClrCommonStringsService, platformId: Object, zone: NgZone, smartToggleService: ClrPopoverToggleService, popoverId: string);
    ngOnDestroy(): void;
    closeOverflowContent(event: any): void;
    private _open;
    get open(): boolean;
    private focusFirstButton;
    set open(open: boolean);
    openChange: EventEmitter<boolean>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrDatagridActionOverflow>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ClrDatagridActionOverflow, "clr-dg-action-overflow", never, {
    "open": "clrDgActionOverflowOpen";
}, {
    "openChange": "clrDgActionOverflowOpenChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtYWN0aW9uLW92ZXJmbG93LmQudHMiLCJzb3VyY2VzIjpbImRhdGFncmlkLWFjdGlvbi1vdmVyZmxvdy5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkRlc3Ryb3ksIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm93QWN0aW9uU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL3Jvdy1hY3Rpb24tc2VydmljZSc7XG5pbXBvcnQgeyBDbHJDb21tb25TdHJpbmdzU2VydmljZSB9IGZyb20gJy4uLy4uL3V0aWxzL2kxOG4vY29tbW9uLXN0cmluZ3Muc2VydmljZSc7XG5pbXBvcnQgeyBDbHJQb3BvdmVyUG9zaXRpb24gfSBmcm9tICcuLi8uLi91dGlscy9wb3BvdmVyL2ludGVyZmFjZXMvcG9wb3Zlci1wb3NpdGlvbi5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgQ2xyUG9wb3ZlclRvZ2dsZVNlcnZpY2UgfSBmcm9tICcuLi8uLi91dGlscy9wb3BvdmVyL3Byb3ZpZGVycy9wb3BvdmVyLXRvZ2dsZS5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENsckRhdGFncmlkQWN0aW9uT3ZlcmZsb3cgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgcm93QWN0aW9uU2VydmljZTtcbiAgICBjb21tb25TdHJpbmdzOiBDbHJDb21tb25TdHJpbmdzU2VydmljZTtcbiAgICBwcml2YXRlIHBsYXRmb3JtSWQ7XG4gICAgcHJpdmF0ZSB6b25lO1xuICAgIHByaXZhdGUgc21hcnRUb2dnbGVTZXJ2aWNlO1xuICAgIHBvcG92ZXJJZDogc3RyaW5nO1xuICAgIHByaXZhdGUgc3Vic2NyaXB0aW9ucztcbiAgICBzbWFydFBvc2l0aW9uOiBDbHJQb3BvdmVyUG9zaXRpb247XG4gICAgY29uc3RydWN0b3Iocm93QWN0aW9uU2VydmljZTogUm93QWN0aW9uU2VydmljZSwgY29tbW9uU3RyaW5nczogQ2xyQ29tbW9uU3RyaW5nc1NlcnZpY2UsIHBsYXRmb3JtSWQ6IE9iamVjdCwgem9uZTogTmdab25lLCBzbWFydFRvZ2dsZVNlcnZpY2U6IENsclBvcG92ZXJUb2dnbGVTZXJ2aWNlLCBwb3BvdmVySWQ6IHN0cmluZyk7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBjbG9zZU92ZXJmbG93Q29udGVudChldmVudDogYW55KTogdm9pZDtcbiAgICBwcml2YXRlIF9vcGVuO1xuICAgIGdldCBvcGVuKCk6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBmb2N1c0ZpcnN0QnV0dG9uO1xuICAgIHNldCBvcGVuKG9wZW46IGJvb2xlYW4pO1xuICAgIG9wZW5DaGFuZ2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPjtcbn1cbiJdfQ==