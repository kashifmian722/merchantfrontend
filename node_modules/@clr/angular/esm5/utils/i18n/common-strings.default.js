/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
export var commonStringsDefault = {
    open: 'Open',
    close: 'Close',
    show: 'Show',
    hide: 'Hide',
    expand: 'Expand',
    collapse: 'Collapse',
    more: 'More',
    select: 'Select',
    selectAll: 'Select All',
    previous: 'Previous',
    next: 'Next',
    current: 'Jump to current',
    info: 'Info',
    success: 'Success',
    warning: 'Warning',
    danger: 'Error',
    rowActions: 'Available actions',
    pickColumns: 'Show or hide columns',
    showColumns: 'Show Columns',
    sortColumn: 'Sort Column',
    firstPage: 'First Page',
    lastPage: 'Last Page',
    nextPage: 'Next Page',
    previousPage: 'Previous Page',
    currentPage: 'Current Page',
    totalPages: 'Total Pages',
    minValue: 'Min value',
    maxValue: 'Max value',
    modalContentStart: 'Beginning of Modal Content',
    modalContentEnd: 'End of Modal Content',
    showColumnsMenuDescription: 'Show or hide columns menu',
    allColumnsSelected: 'All columns selected',
    signpostToggle: 'Signpost Toggle',
    signpostClose: 'Signpost Close',
    loading: 'Loading',
    // Datagrid
    detailPaneStart: 'Start of row details',
    detailPaneEnd: 'End of row details',
    singleSelectionAriaLabel: 'Single selection header',
    singleActionableAriaLabel: 'Single actionable header',
    detailExpandableAriaLabel: 'Toggle more row content',
    datagridFilterAriaLabel: 'Toggle column filter',
    // Alert
    alertCloseButtonAriaLabel: 'Close alert',
    // Date Picker
    datepickerToggle: 'Toggle datepicker',
    datepickerPreviousMonth: 'Previous month',
    datepickerCurrentMonth: 'Current month',
    datepickerNextMonth: 'Next month',
    datepickerPreviousDecade: 'Previous decade',
    datepickerNextDecade: 'Next decade',
    datepickerCurrentDecade: 'Current decade',
    datepickerSelectMonthText: 'Select month, the current month is {CALENDAR_MONTH}',
    datepickerSelectYearText: 'Select year, the current year is {CALENDAR_YEAR}',
    daypickerSRCurrentMonthPhrase: 'The current month is {CURRENT_MONTH}',
    daypickerSRCurrentYearPhrase: 'The current year is {CURRENT_YEAR}',
    daypickerSRCurrentDecadePhrase: 'The current decade is {DECADE_RANGE}',
    // Stack View
    stackViewChanged: 'Value changed.',
    // Forms
    formErrorSummary: 'The form has {ERROR_NUMBER} errors.',
    //Vertical Nav
    verticalNavToggle: 'Toggle vertical navigation',
    verticalNavGroupToggle: 'Toggle vertical navigation group',
    // Timeline steps
    timelineStepNotStarted: 'Not started',
    timelineStepCurrent: 'Current',
    timelineStepSuccess: 'Completed',
    timelineStepError: 'Error',
    timelineStepProcessing: 'In progress',
    // Datagrid expandable rows
    dategridExpandableBeginningOf: 'Beginning of',
    dategridExpandableEndOf: 'End of',
    dategridExpandableRowContent: 'Expandable row content',
    dategridExpandableRowsHelperText: "Screen reader table commands may not work for viewing expanded content, please use your screen reader's browse mode to read the content exposed by this button",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLXN0cmluZ3MuZGVmYXVsdC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjbHIvYW5ndWxhci8iLCJzb3VyY2VzIjpbInV0aWxzL2kxOG4vY29tbW9uLXN0cmluZ3MuZGVmYXVsdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBSUgsTUFBTSxDQUFDLElBQU0sb0JBQW9CLEdBQXFCO0lBQ3BELElBQUksRUFBRSxNQUFNO0lBQ1osS0FBSyxFQUFFLE9BQU87SUFDZCxJQUFJLEVBQUUsTUFBTTtJQUNaLElBQUksRUFBRSxNQUFNO0lBQ1osTUFBTSxFQUFFLFFBQVE7SUFDaEIsUUFBUSxFQUFFLFVBQVU7SUFDcEIsSUFBSSxFQUFFLE1BQU07SUFDWixNQUFNLEVBQUUsUUFBUTtJQUNoQixTQUFTLEVBQUUsWUFBWTtJQUN2QixRQUFRLEVBQUUsVUFBVTtJQUNwQixJQUFJLEVBQUUsTUFBTTtJQUNaLE9BQU8sRUFBRSxpQkFBaUI7SUFDMUIsSUFBSSxFQUFFLE1BQU07SUFDWixPQUFPLEVBQUUsU0FBUztJQUNsQixPQUFPLEVBQUUsU0FBUztJQUNsQixNQUFNLEVBQUUsT0FBTztJQUNmLFVBQVUsRUFBRSxtQkFBbUI7SUFDL0IsV0FBVyxFQUFFLHNCQUFzQjtJQUNuQyxXQUFXLEVBQUUsY0FBYztJQUMzQixVQUFVLEVBQUUsYUFBYTtJQUN6QixTQUFTLEVBQUUsWUFBWTtJQUN2QixRQUFRLEVBQUUsV0FBVztJQUNyQixRQUFRLEVBQUUsV0FBVztJQUNyQixZQUFZLEVBQUUsZUFBZTtJQUM3QixXQUFXLEVBQUUsY0FBYztJQUMzQixVQUFVLEVBQUUsYUFBYTtJQUN6QixRQUFRLEVBQUUsV0FBVztJQUNyQixRQUFRLEVBQUUsV0FBVztJQUNyQixpQkFBaUIsRUFBRSw0QkFBNEI7SUFDL0MsZUFBZSxFQUFFLHNCQUFzQjtJQUN2QywwQkFBMEIsRUFBRSwyQkFBMkI7SUFDdkQsa0JBQWtCLEVBQUUsc0JBQXNCO0lBQzFDLGNBQWMsRUFBRSxpQkFBaUI7SUFDakMsYUFBYSxFQUFFLGdCQUFnQjtJQUMvQixPQUFPLEVBQUUsU0FBUztJQUNsQixXQUFXO0lBQ1gsZUFBZSxFQUFFLHNCQUFzQjtJQUN2QyxhQUFhLEVBQUUsb0JBQW9CO0lBQ25DLHdCQUF3QixFQUFFLHlCQUF5QjtJQUNuRCx5QkFBeUIsRUFBRSwwQkFBMEI7SUFDckQseUJBQXlCLEVBQUUseUJBQXlCO0lBQ3BELHVCQUF1QixFQUFFLHNCQUFzQjtJQUMvQyxRQUFRO0lBQ1IseUJBQXlCLEVBQUUsYUFBYTtJQUN4QyxjQUFjO0lBQ2QsZ0JBQWdCLEVBQUUsbUJBQW1CO0lBQ3JDLHVCQUF1QixFQUFFLGdCQUFnQjtJQUN6QyxzQkFBc0IsRUFBRSxlQUFlO0lBQ3ZDLG1CQUFtQixFQUFFLFlBQVk7SUFDakMsd0JBQXdCLEVBQUUsaUJBQWlCO0lBQzNDLG9CQUFvQixFQUFFLGFBQWE7SUFDbkMsdUJBQXVCLEVBQUUsZ0JBQWdCO0lBQ3pDLHlCQUF5QixFQUFFLHFEQUFxRDtJQUNoRix3QkFBd0IsRUFBRSxrREFBa0Q7SUFDNUUsNkJBQTZCLEVBQUUsc0NBQXNDO0lBQ3JFLDRCQUE0QixFQUFFLG9DQUFvQztJQUNsRSw4QkFBOEIsRUFBRSxzQ0FBc0M7SUFDdEUsYUFBYTtJQUNiLGdCQUFnQixFQUFFLGdCQUFnQjtJQUNsQyxRQUFRO0lBQ1IsZ0JBQWdCLEVBQUUscUNBQXFDO0lBQ3ZELGNBQWM7SUFDZCxpQkFBaUIsRUFBRSw0QkFBNEI7SUFDL0Msc0JBQXNCLEVBQUUsa0NBQWtDO0lBQzFELGlCQUFpQjtJQUNqQixzQkFBc0IsRUFBRSxhQUFhO0lBQ3JDLG1CQUFtQixFQUFFLFNBQVM7SUFDOUIsbUJBQW1CLEVBQUUsV0FBVztJQUNoQyxpQkFBaUIsRUFBRSxPQUFPO0lBQzFCLHNCQUFzQixFQUFFLGFBQWE7SUFFckMsMkJBQTJCO0lBQzNCLDZCQUE2QixFQUFFLGNBQWM7SUFDN0MsdUJBQXVCLEVBQUUsUUFBUTtJQUNqQyw0QkFBNEIsRUFBRSx3QkFBd0I7SUFDdEQsZ0NBQWdDLEVBQUUsZ0tBQWdLO0NBQ25NLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE2LTIwMjAgVk13YXJlLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBUaGlzIHNvZnR3YXJlIGlzIHJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLlxuICogVGhlIGZ1bGwgbGljZW5zZSBpbmZvcm1hdGlvbiBjYW4gYmUgZm91bmQgaW4gTElDRU5TRSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBwcm9qZWN0LlxuICovXG5cbmltcG9ydCB7IENsckNvbW1vblN0cmluZ3MgfSBmcm9tICcuL2NvbW1vbi1zdHJpbmdzLmludGVyZmFjZSc7XG5cbmV4cG9ydCBjb25zdCBjb21tb25TdHJpbmdzRGVmYXVsdDogQ2xyQ29tbW9uU3RyaW5ncyA9IHtcbiAgb3BlbjogJ09wZW4nLFxuICBjbG9zZTogJ0Nsb3NlJyxcbiAgc2hvdzogJ1Nob3cnLFxuICBoaWRlOiAnSGlkZScsXG4gIGV4cGFuZDogJ0V4cGFuZCcsXG4gIGNvbGxhcHNlOiAnQ29sbGFwc2UnLFxuICBtb3JlOiAnTW9yZScsXG4gIHNlbGVjdDogJ1NlbGVjdCcsXG4gIHNlbGVjdEFsbDogJ1NlbGVjdCBBbGwnLFxuICBwcmV2aW91czogJ1ByZXZpb3VzJyxcbiAgbmV4dDogJ05leHQnLFxuICBjdXJyZW50OiAnSnVtcCB0byBjdXJyZW50JyxcbiAgaW5mbzogJ0luZm8nLFxuICBzdWNjZXNzOiAnU3VjY2VzcycsXG4gIHdhcm5pbmc6ICdXYXJuaW5nJyxcbiAgZGFuZ2VyOiAnRXJyb3InLFxuICByb3dBY3Rpb25zOiAnQXZhaWxhYmxlIGFjdGlvbnMnLFxuICBwaWNrQ29sdW1uczogJ1Nob3cgb3IgaGlkZSBjb2x1bW5zJyxcbiAgc2hvd0NvbHVtbnM6ICdTaG93IENvbHVtbnMnLFxuICBzb3J0Q29sdW1uOiAnU29ydCBDb2x1bW4nLFxuICBmaXJzdFBhZ2U6ICdGaXJzdCBQYWdlJyxcbiAgbGFzdFBhZ2U6ICdMYXN0IFBhZ2UnLFxuICBuZXh0UGFnZTogJ05leHQgUGFnZScsXG4gIHByZXZpb3VzUGFnZTogJ1ByZXZpb3VzIFBhZ2UnLFxuICBjdXJyZW50UGFnZTogJ0N1cnJlbnQgUGFnZScsXG4gIHRvdGFsUGFnZXM6ICdUb3RhbCBQYWdlcycsXG4gIG1pblZhbHVlOiAnTWluIHZhbHVlJyxcbiAgbWF4VmFsdWU6ICdNYXggdmFsdWUnLFxuICBtb2RhbENvbnRlbnRTdGFydDogJ0JlZ2lubmluZyBvZiBNb2RhbCBDb250ZW50JyxcbiAgbW9kYWxDb250ZW50RW5kOiAnRW5kIG9mIE1vZGFsIENvbnRlbnQnLFxuICBzaG93Q29sdW1uc01lbnVEZXNjcmlwdGlvbjogJ1Nob3cgb3IgaGlkZSBjb2x1bW5zIG1lbnUnLFxuICBhbGxDb2x1bW5zU2VsZWN0ZWQ6ICdBbGwgY29sdW1ucyBzZWxlY3RlZCcsXG4gIHNpZ25wb3N0VG9nZ2xlOiAnU2lnbnBvc3QgVG9nZ2xlJyxcbiAgc2lnbnBvc3RDbG9zZTogJ1NpZ25wb3N0IENsb3NlJyxcbiAgbG9hZGluZzogJ0xvYWRpbmcnLFxuICAvLyBEYXRhZ3JpZFxuICBkZXRhaWxQYW5lU3RhcnQ6ICdTdGFydCBvZiByb3cgZGV0YWlscycsXG4gIGRldGFpbFBhbmVFbmQ6ICdFbmQgb2Ygcm93IGRldGFpbHMnLFxuICBzaW5nbGVTZWxlY3Rpb25BcmlhTGFiZWw6ICdTaW5nbGUgc2VsZWN0aW9uIGhlYWRlcicsXG4gIHNpbmdsZUFjdGlvbmFibGVBcmlhTGFiZWw6ICdTaW5nbGUgYWN0aW9uYWJsZSBoZWFkZXInLFxuICBkZXRhaWxFeHBhbmRhYmxlQXJpYUxhYmVsOiAnVG9nZ2xlIG1vcmUgcm93IGNvbnRlbnQnLFxuICBkYXRhZ3JpZEZpbHRlckFyaWFMYWJlbDogJ1RvZ2dsZSBjb2x1bW4gZmlsdGVyJyxcbiAgLy8gQWxlcnRcbiAgYWxlcnRDbG9zZUJ1dHRvbkFyaWFMYWJlbDogJ0Nsb3NlIGFsZXJ0JyxcbiAgLy8gRGF0ZSBQaWNrZXJcbiAgZGF0ZXBpY2tlclRvZ2dsZTogJ1RvZ2dsZSBkYXRlcGlja2VyJyxcbiAgZGF0ZXBpY2tlclByZXZpb3VzTW9udGg6ICdQcmV2aW91cyBtb250aCcsXG4gIGRhdGVwaWNrZXJDdXJyZW50TW9udGg6ICdDdXJyZW50IG1vbnRoJyxcbiAgZGF0ZXBpY2tlck5leHRNb250aDogJ05leHQgbW9udGgnLFxuICBkYXRlcGlja2VyUHJldmlvdXNEZWNhZGU6ICdQcmV2aW91cyBkZWNhZGUnLFxuICBkYXRlcGlja2VyTmV4dERlY2FkZTogJ05leHQgZGVjYWRlJyxcbiAgZGF0ZXBpY2tlckN1cnJlbnREZWNhZGU6ICdDdXJyZW50IGRlY2FkZScsXG4gIGRhdGVwaWNrZXJTZWxlY3RNb250aFRleHQ6ICdTZWxlY3QgbW9udGgsIHRoZSBjdXJyZW50IG1vbnRoIGlzIHtDQUxFTkRBUl9NT05USH0nLFxuICBkYXRlcGlja2VyU2VsZWN0WWVhclRleHQ6ICdTZWxlY3QgeWVhciwgdGhlIGN1cnJlbnQgeWVhciBpcyB7Q0FMRU5EQVJfWUVBUn0nLFxuICBkYXlwaWNrZXJTUkN1cnJlbnRNb250aFBocmFzZTogJ1RoZSBjdXJyZW50IG1vbnRoIGlzIHtDVVJSRU5UX01PTlRIfScsXG4gIGRheXBpY2tlclNSQ3VycmVudFllYXJQaHJhc2U6ICdUaGUgY3VycmVudCB5ZWFyIGlzIHtDVVJSRU5UX1lFQVJ9JyxcbiAgZGF5cGlja2VyU1JDdXJyZW50RGVjYWRlUGhyYXNlOiAnVGhlIGN1cnJlbnQgZGVjYWRlIGlzIHtERUNBREVfUkFOR0V9JyxcbiAgLy8gU3RhY2sgVmlld1xuICBzdGFja1ZpZXdDaGFuZ2VkOiAnVmFsdWUgY2hhbmdlZC4nLFxuICAvLyBGb3Jtc1xuICBmb3JtRXJyb3JTdW1tYXJ5OiAnVGhlIGZvcm0gaGFzIHtFUlJPUl9OVU1CRVJ9IGVycm9ycy4nLFxuICAvL1ZlcnRpY2FsIE5hdlxuICB2ZXJ0aWNhbE5hdlRvZ2dsZTogJ1RvZ2dsZSB2ZXJ0aWNhbCBuYXZpZ2F0aW9uJyxcbiAgdmVydGljYWxOYXZHcm91cFRvZ2dsZTogJ1RvZ2dsZSB2ZXJ0aWNhbCBuYXZpZ2F0aW9uIGdyb3VwJyxcbiAgLy8gVGltZWxpbmUgc3RlcHNcbiAgdGltZWxpbmVTdGVwTm90U3RhcnRlZDogJ05vdCBzdGFydGVkJyxcbiAgdGltZWxpbmVTdGVwQ3VycmVudDogJ0N1cnJlbnQnLFxuICB0aW1lbGluZVN0ZXBTdWNjZXNzOiAnQ29tcGxldGVkJyxcbiAgdGltZWxpbmVTdGVwRXJyb3I6ICdFcnJvcicsXG4gIHRpbWVsaW5lU3RlcFByb2Nlc3Npbmc6ICdJbiBwcm9ncmVzcycsXG5cbiAgLy8gRGF0YWdyaWQgZXhwYW5kYWJsZSByb3dzXG4gIGRhdGVncmlkRXhwYW5kYWJsZUJlZ2lubmluZ09mOiAnQmVnaW5uaW5nIG9mJyxcbiAgZGF0ZWdyaWRFeHBhbmRhYmxlRW5kT2Y6ICdFbmQgb2YnLFxuICBkYXRlZ3JpZEV4cGFuZGFibGVSb3dDb250ZW50OiAnRXhwYW5kYWJsZSByb3cgY29udGVudCcsXG4gIGRhdGVncmlkRXhwYW5kYWJsZVJvd3NIZWxwZXJUZXh0OiBgU2NyZWVuIHJlYWRlciB0YWJsZSBjb21tYW5kcyBtYXkgbm90IHdvcmsgZm9yIHZpZXdpbmcgZXhwYW5kZWQgY29udGVudCwgcGxlYXNlIHVzZSB5b3VyIHNjcmVlbiByZWFkZXIncyBicm93c2UgbW9kZSB0byByZWFkIHRoZSBjb250ZW50IGV4cG9zZWQgYnkgdGhpcyBidXR0b25gLFxufTtcbiJdfQ==