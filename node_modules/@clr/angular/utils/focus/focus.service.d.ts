import { Optional, Renderer2 } from '@angular/core';
import { ArrowKeyDirection } from './arrow-key-direction.enum';
import { FocusableItem } from './focusable-item/focusable-item';
import * as ɵngcc0 from '@angular/core';
export declare class FocusService {
    private renderer;
    constructor(renderer: Renderer2);
    private _unlistenFuncs;
    private _current;
    get current(): FocusableItem;
    reset(first: FocusableItem): void;
    listenToArrowKeys(el: HTMLElement): void;
    registerContainer(el: HTMLElement): void;
    moveTo(item: FocusableItem): void;
    move(direction: ArrowKeyDirection): boolean;
    activateCurrent(): boolean;
    detachListeners(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FocusService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<FocusService>;
}
export declare function clrFocusServiceFactory(existing: FocusService, renderer: Renderer2): FocusService;
export declare const FOCUS_SERVICE_PROVIDER: {
    provide: typeof FocusService;
    useFactory: typeof clrFocusServiceFactory;
    deps: (typeof Renderer2 | Optional[])[];
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9jdXMuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJmb2N1cy5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9wdGlvbmFsLCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFycm93S2V5RGlyZWN0aW9uIH0gZnJvbSAnLi9hcnJvdy1rZXktZGlyZWN0aW9uLmVudW0nO1xuaW1wb3J0IHsgRm9jdXNhYmxlSXRlbSB9IGZyb20gJy4vZm9jdXNhYmxlLWl0ZW0vZm9jdXNhYmxlLWl0ZW0nO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRm9jdXNTZXJ2aWNlIHtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIGNvbnN0cnVjdG9yKHJlbmRlcmVyOiBSZW5kZXJlcjIpO1xuICAgIHByaXZhdGUgX3VubGlzdGVuRnVuY3M7XG4gICAgcHJpdmF0ZSBfY3VycmVudDtcbiAgICBnZXQgY3VycmVudCgpOiBGb2N1c2FibGVJdGVtO1xuICAgIHJlc2V0KGZpcnN0OiBGb2N1c2FibGVJdGVtKTogdm9pZDtcbiAgICBsaXN0ZW5Ub0Fycm93S2V5cyhlbDogSFRNTEVsZW1lbnQpOiB2b2lkO1xuICAgIHJlZ2lzdGVyQ29udGFpbmVyKGVsOiBIVE1MRWxlbWVudCk6IHZvaWQ7XG4gICAgbW92ZVRvKGl0ZW06IEZvY3VzYWJsZUl0ZW0pOiB2b2lkO1xuICAgIG1vdmUoZGlyZWN0aW9uOiBBcnJvd0tleURpcmVjdGlvbik6IGJvb2xlYW47XG4gICAgYWN0aXZhdGVDdXJyZW50KCk6IGJvb2xlYW47XG4gICAgZGV0YWNoTGlzdGVuZXJzKCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBjbHJGb2N1c1NlcnZpY2VGYWN0b3J5KGV4aXN0aW5nOiBGb2N1c1NlcnZpY2UsIHJlbmRlcmVyOiBSZW5kZXJlcjIpOiBGb2N1c1NlcnZpY2U7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBGT0NVU19TRVJWSUNFX1BST1ZJREVSOiB7XG4gICAgcHJvdmlkZTogdHlwZW9mIEZvY3VzU2VydmljZTtcbiAgICB1c2VGYWN0b3J5OiB0eXBlb2YgY2xyRm9jdXNTZXJ2aWNlRmFjdG9yeTtcbiAgICBkZXBzOiAodHlwZW9mIFJlbmRlcmVyMiB8IE9wdGlvbmFsW10pW107XG59O1xuIl19