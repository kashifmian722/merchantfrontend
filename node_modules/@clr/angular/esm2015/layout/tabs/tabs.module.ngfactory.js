/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 * /*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.

 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "./tabs.module";
import * as i2 from "../../utils/template-ref/template-ref-container.ngfactory";
import * as i3 from "@angular/common";
import * as i4 from "../../utils/conditional/conditional.module";
import * as i5 from "../../icon/icon.module";
import * as i6 from "../../utils/template-ref/template-ref.module";
import * as i7 from "../../utils/focus/key-focus/key-focus.module";
var ClrTabsModuleNgFactory = i0.ɵcmf(i1.ClrTabsModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.TemplateRefContainerNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i3.NgLocalization, i3.NgLocaleLocalization, [i0.LOCALE_ID]), i0.ɵmpd(1073742336, i3.CommonModule, i3.CommonModule, []), i0.ɵmpd(1073742336, i4.ClrConditionalModule, i4.ClrConditionalModule, []), i0.ɵmpd(1073742336, i5.ClrIconModule, i5.ClrIconModule, []), i0.ɵmpd(1073742336, i6.ClrTemplateRefModule, i6.ClrTemplateRefModule, []), i0.ɵmpd(1073742336, i7.ClrKeyFocusModule, i7.ClrKeyFocusModule, []), i0.ɵmpd(1073742336, i1.ClrTabsModule, i1.ClrTabsModule, [])]); });
export { ClrTabsModuleNgFactory as ClrTabsModuleNgFactory };
//# sourceMappingURL=data:application/json;base64,