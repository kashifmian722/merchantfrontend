/**
 * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Renderer2, ElementRef, Injector, ViewContainerRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { ClrCheckboxWrapper } from './checkbox-wrapper';
import { WrappedFormControl } from '../common/wrapped-control';
/**
 * This implements both the clrCheckbox and clrToggle functionality, since they are both just checkboxes with different
 * visual styling. The challenge is that the container needs to know which selector was used, which the @Attribute
 * decorator gets for us to determine if the toggle is used, and emits a value to the wrapper container to tell it
 * there is a toggle switch instead.
 */
import * as ɵngcc0 from '@angular/core';
export declare class ClrCheckbox extends WrappedFormControl<ClrCheckboxWrapper> {
    private toggle;
    constructor(vcr: ViewContainerRef, injector: Injector, control: NgControl, renderer: Renderer2, el: ElementRef, toggle: string);
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrCheckbox>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ClrCheckbox, "[clrCheckbox],[clrToggle]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3guZC50cyIsInNvdXJjZXMiOlsiY2hlY2tib3guZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAxOCBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cbmltcG9ydCB7IFJlbmRlcmVyMiwgRWxlbWVudFJlZiwgSW5qZWN0b3IsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nQ29udHJvbCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IENsckNoZWNrYm94V3JhcHBlciB9IGZyb20gJy4vY2hlY2tib3gtd3JhcHBlcic7XG5pbXBvcnQgeyBXcmFwcGVkRm9ybUNvbnRyb2wgfSBmcm9tICcuLi9jb21tb24vd3JhcHBlZC1jb250cm9sJztcbi8qKlxuICogVGhpcyBpbXBsZW1lbnRzIGJvdGggdGhlIGNsckNoZWNrYm94IGFuZCBjbHJUb2dnbGUgZnVuY3Rpb25hbGl0eSwgc2luY2UgdGhleSBhcmUgYm90aCBqdXN0IGNoZWNrYm94ZXMgd2l0aCBkaWZmZXJlbnRcbiAqIHZpc3VhbCBzdHlsaW5nLiBUaGUgY2hhbGxlbmdlIGlzIHRoYXQgdGhlIGNvbnRhaW5lciBuZWVkcyB0byBrbm93IHdoaWNoIHNlbGVjdG9yIHdhcyB1c2VkLCB3aGljaCB0aGUgQEF0dHJpYnV0ZVxuICogZGVjb3JhdG9yIGdldHMgZm9yIHVzIHRvIGRldGVybWluZSBpZiB0aGUgdG9nZ2xlIGlzIHVzZWQsIGFuZCBlbWl0cyBhIHZhbHVlIHRvIHRoZSB3cmFwcGVyIGNvbnRhaW5lciB0byB0ZWxsIGl0XG4gKiB0aGVyZSBpcyBhIHRvZ2dsZSBzd2l0Y2ggaW5zdGVhZC5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2xyQ2hlY2tib3ggZXh0ZW5kcyBXcmFwcGVkRm9ybUNvbnRyb2w8Q2xyQ2hlY2tib3hXcmFwcGVyPiB7XG4gICAgcHJpdmF0ZSB0b2dnbGU7XG4gICAgY29uc3RydWN0b3IodmNyOiBWaWV3Q29udGFpbmVyUmVmLCBpbmplY3RvcjogSW5qZWN0b3IsIGNvbnRyb2w6IE5nQ29udHJvbCwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgZWw6IEVsZW1lbnRSZWYsIHRvZ2dsZTogc3RyaW5nKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xufVxuIl19