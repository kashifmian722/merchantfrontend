{"version":3,"file":"badge.element.js","sourceRoot":"","sources":["../../../src/clr-core/badge/badge.element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,qBAAqB,EAAe,MAAM,kBAAkB,CAAC;AAC5F,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,aAAa,CAAC;AAC/C,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAE7C;;;;;;;;;;;;;;;;GAgBG;AACH,WAAW;AACX,MAAM,OAAO,QAAS,SAAQ,UAAU;IAatC,MAAM;QACJ,OAAO,IAAI,CAAA;;;;KAIV,CAAC;IACJ,CAAC;IAED,MAAM,KAAK,MAAM;QACf,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;CACF;AAnBC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;uCACiC;AAM5D;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;wCACP;AAetB,qBAAqB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { baseStyles, property, registerElementSafely, StatusTypes } from '@clr/core/common';\nimport { html, LitElement } from 'lit-element';\nimport { styles } from './badge.element.css';\n\n/**\n * Badges provide a method to highlight a count of an element either next to it\n * or inside the element itself.\n *\n * ```typescript\n * import '@clr/core/badge';\n * ```\n *\n * ```html\n * <cds-badge status=\"info\">2</cds-badge>\n * ```\n *\n * @element cds-badge\n * @slot default - Content slot for inside the badge\n * @cssprop --background\n * @cssprop --color\n */\n// @dynamic\nexport class CdsBadge extends LitElement {\n  /** Sets the color of the badge from the following predefined list of choices:\n   *  'gray', 'purple', 'blue', 'orange', 'light-blue'\n   */\n  @property({ type: String })\n  color: 'gray' | 'purple' | 'blue' | 'orange' | 'light-blue';\n\n  /** Sets the color of the badge from the following predefined list of statuses:\n   *  'info', 'success', 'warning', 'danger'\n   */\n  @property({ type: String })\n  status: StatusTypes;\n\n  render() {\n    return html`\n      <div class=\"private-host\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  static get styles() {\n    return [baseStyles, styles];\n  }\n}\n\nregisterElementSafely('cds-badge', CdsBadge);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'cds-badge': CdsBadge;\n  }\n}\n"]}