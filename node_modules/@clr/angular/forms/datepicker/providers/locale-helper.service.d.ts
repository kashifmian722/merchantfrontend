import { ClrDayOfWeek } from '../interfaces/day-of-week.interface';
/**
 * This service extracts the Angular CLDR data needed by the datepicker.
 */
import * as ɵngcc0 from '@angular/core';
export declare class LocaleHelperService {
    locale: string;
    constructor(locale: string);
    private _firstDayOfWeek;
    private _localeDays;
    private _localeMonthsAbbreviated;
    private _localeMonthsWide;
    private _localeDateFormat;
    get firstDayOfWeek(): number;
    get localeDays(): ReadonlyArray<ClrDayOfWeek>;
    get localeDaysNarrow(): ReadonlyArray<string>;
    get localeMonthsAbbreviated(): ReadonlyArray<string>;
    get localeMonthsWide(): ReadonlyArray<string>;
    get localeDateFormat(): string;
    /**
     * Initializes the locale data.
     */
    private initializeLocaleData;
    /**
     * Initialize day names based on the locale.
     * eg: [{day: Sunday, narrow: S}, {day: Monday, narrow: M}...] for en-US.
     */
    private initializeLocaleDays;
    /**
     * Initializes the array of month names in the TranslationWidth.Abbreviated format.
     * e.g. `[Jan, Feb, ...]` for en-US
     */
    private initializeLocaleMonthsAbbreviated;
    /**
     * Initializes the array of month names in the TranslationWidth.Wide format.
     * e.g. `[January, February, ...]` for en-US
     */
    private initializeLocaleMonthsWide;
    /**
     * Initializes the first day of the week based on the locale.
     */
    private initializeFirstDayOfWeek;
    private initializeLocaleDateFormat;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LocaleHelperService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<LocaleHelperService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWxlLWhlbHBlci5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbImxvY2FsZS1oZWxwZXIuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2xyRGF5T2ZXZWVrIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9kYXktb2Ytd2Vlay5pbnRlcmZhY2UnO1xuLyoqXG4gKiBUaGlzIHNlcnZpY2UgZXh0cmFjdHMgdGhlIEFuZ3VsYXIgQ0xEUiBkYXRhIG5lZWRlZCBieSB0aGUgZGF0ZXBpY2tlci5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTG9jYWxlSGVscGVyU2VydmljZSB7XG4gICAgbG9jYWxlOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IobG9jYWxlOiBzdHJpbmcpO1xuICAgIHByaXZhdGUgX2ZpcnN0RGF5T2ZXZWVrO1xuICAgIHByaXZhdGUgX2xvY2FsZURheXM7XG4gICAgcHJpdmF0ZSBfbG9jYWxlTW9udGhzQWJicmV2aWF0ZWQ7XG4gICAgcHJpdmF0ZSBfbG9jYWxlTW9udGhzV2lkZTtcbiAgICBwcml2YXRlIF9sb2NhbGVEYXRlRm9ybWF0O1xuICAgIGdldCBmaXJzdERheU9mV2VlaygpOiBudW1iZXI7XG4gICAgZ2V0IGxvY2FsZURheXMoKTogUmVhZG9ubHlBcnJheTxDbHJEYXlPZldlZWs+O1xuICAgIGdldCBsb2NhbGVEYXlzTmFycm93KCk6IFJlYWRvbmx5QXJyYXk8c3RyaW5nPjtcbiAgICBnZXQgbG9jYWxlTW9udGhzQWJicmV2aWF0ZWQoKTogUmVhZG9ubHlBcnJheTxzdHJpbmc+O1xuICAgIGdldCBsb2NhbGVNb250aHNXaWRlKCk6IFJlYWRvbmx5QXJyYXk8c3RyaW5nPjtcbiAgICBnZXQgbG9jYWxlRGF0ZUZvcm1hdCgpOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogSW5pdGlhbGl6ZXMgdGhlIGxvY2FsZSBkYXRhLlxuICAgICAqL1xuICAgIHByaXZhdGUgaW5pdGlhbGl6ZUxvY2FsZURhdGE7XG4gICAgLyoqXG4gICAgICogSW5pdGlhbGl6ZSBkYXkgbmFtZXMgYmFzZWQgb24gdGhlIGxvY2FsZS5cbiAgICAgKiBlZzogW3tkYXk6IFN1bmRheSwgbmFycm93OiBTfSwge2RheTogTW9uZGF5LCBuYXJyb3c6IE19Li4uXSBmb3IgZW4tVVMuXG4gICAgICovXG4gICAgcHJpdmF0ZSBpbml0aWFsaXplTG9jYWxlRGF5cztcbiAgICAvKipcbiAgICAgKiBJbml0aWFsaXplcyB0aGUgYXJyYXkgb2YgbW9udGggbmFtZXMgaW4gdGhlIFRyYW5zbGF0aW9uV2lkdGguQWJicmV2aWF0ZWQgZm9ybWF0LlxuICAgICAqIGUuZy4gYFtKYW4sIEZlYiwgLi4uXWAgZm9yIGVuLVVTXG4gICAgICovXG4gICAgcHJpdmF0ZSBpbml0aWFsaXplTG9jYWxlTW9udGhzQWJicmV2aWF0ZWQ7XG4gICAgLyoqXG4gICAgICogSW5pdGlhbGl6ZXMgdGhlIGFycmF5IG9mIG1vbnRoIG5hbWVzIGluIHRoZSBUcmFuc2xhdGlvbldpZHRoLldpZGUgZm9ybWF0LlxuICAgICAqIGUuZy4gYFtKYW51YXJ5LCBGZWJydWFyeSwgLi4uXWAgZm9yIGVuLVVTXG4gICAgICovXG4gICAgcHJpdmF0ZSBpbml0aWFsaXplTG9jYWxlTW9udGhzV2lkZTtcbiAgICAvKipcbiAgICAgKiBJbml0aWFsaXplcyB0aGUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrIGJhc2VkIG9uIHRoZSBsb2NhbGUuXG4gICAgICovXG4gICAgcHJpdmF0ZSBpbml0aWFsaXplRmlyc3REYXlPZldlZWs7XG4gICAgcHJpdmF0ZSBpbml0aWFsaXplTG9jYWxlRGF0ZUZvcm1hdDtcbn1cbiJdfQ==