import { __decorate } from "tslib";
/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, ContentChild, HostListener } from '@angular/core';
import { DetailService } from './providers/detail.service';
import { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';
import { ClrDatagridDetailHeader } from './datagrid-detail-header';
var ClrDatagridDetail = /** @class */ (function () {
    function ClrDatagridDetail(detailService, commonStrings) {
        this.detailService = detailService;
        this.commonStrings = commonStrings;
    }
    ClrDatagridDetail.prototype.closeCheck = function () {
        this.detailService.close();
    };
    ClrDatagridDetail.ctorParameters = function () { return [
        { type: DetailService },
        { type: ClrCommonStringsService }
    ]; };
    __decorate([
        ContentChild(ClrDatagridDetailHeader)
    ], ClrDatagridDetail.prototype, "header", void 0);
    __decorate([
        HostListener('document:keyup.esc')
    ], ClrDatagridDetail.prototype, "closeCheck", null);
    ClrDatagridDetail = __decorate([
        Component({
            selector: 'clr-dg-detail',
            host: {
                '[class.datagrid-detail-pane]': 'true',
            },
            // We put the *ngIf on the clrFocusTrap so it doesn't always exist on the page
            // have to test for presence of header for aria-describedby because it was causing unit tests to crash
            template: "\n    <div [clrFocusTrap]=\"{strict: false}\" class=\"datagrid-detail-pane-content\" *ngIf=\"detailService.isOpen\" role=\"dialog\"\n         [id]=\"detailService.id\" aria-modal=\"true\" [attr.aria-describedby]=\"header ? header.titleId : ''\">\n    <div class=\"clr-sr-only\">{{commonStrings.keys.detailPaneStart}}</div>\n      <ng-content></ng-content>\n      <div class=\"clr-sr-only\">{{commonStrings.keys.detailPaneEnd}}</div>\n    </div>\n    "
        })
    ], ClrDatagridDetail);
    return ClrDatagridDetail;
}());
export { ClrDatagridDetail };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtZGV0YWlsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGNsci9hbmd1bGFyLyIsInNvdXJjZXMiOlsiZGF0YS9kYXRhZ3JpZC9kYXRhZ3JpZC1kZXRhaWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7O0dBSUc7QUFDSCxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzNELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBa0JuRTtJQUdFLDJCQUFtQixhQUE0QixFQUFTLGFBQXNDO1FBQTNFLGtCQUFhLEdBQWIsYUFBYSxDQUFlO1FBQVMsa0JBQWEsR0FBYixhQUFhLENBQXlCO0lBQUcsQ0FBQztJQUdsRyxzQ0FBVSxHQUFWO1FBQ0UsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUM3QixDQUFDOztnQkFMaUMsYUFBYTtnQkFBd0IsdUJBQXVCOztJQUZ2RDtRQUF0QyxZQUFZLENBQUMsdUJBQXVCLENBQUM7cURBQXdDO0lBSzlFO1FBREMsWUFBWSxDQUFDLG9CQUFvQixDQUFDO3VEQUdsQztJQVJVLGlCQUFpQjtRQWhCN0IsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGVBQWU7WUFDekIsSUFBSSxFQUFFO2dCQUNKLDhCQUE4QixFQUFFLE1BQU07YUFDdkM7WUFDRCw4RUFBOEU7WUFDOUUsc0dBQXNHO1lBQ3RHLFFBQVEsRUFBRSxvY0FPUDtTQUNKLENBQUM7T0FDVyxpQkFBaUIsQ0FTN0I7SUFBRCx3QkFBQztDQUFBLEFBVEQsSUFTQztTQVRZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAyMCBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cbmltcG9ydCB7IENvbXBvbmVudCwgQ29udGVudENoaWxkLCBIb3N0TGlzdGVuZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERldGFpbFNlcnZpY2UgfSBmcm9tICcuL3Byb3ZpZGVycy9kZXRhaWwuc2VydmljZSc7XG5pbXBvcnQgeyBDbHJDb21tb25TdHJpbmdzU2VydmljZSB9IGZyb20gJy4uLy4uL3V0aWxzL2kxOG4vY29tbW9uLXN0cmluZ3Muc2VydmljZSc7XG5pbXBvcnQgeyBDbHJEYXRhZ3JpZERldGFpbEhlYWRlciB9IGZyb20gJy4vZGF0YWdyaWQtZGV0YWlsLWhlYWRlcic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Nsci1kZy1kZXRhaWwnLFxuICBob3N0OiB7XG4gICAgJ1tjbGFzcy5kYXRhZ3JpZC1kZXRhaWwtcGFuZV0nOiAndHJ1ZScsXG4gIH0sXG4gIC8vIFdlIHB1dCB0aGUgKm5nSWYgb24gdGhlIGNsckZvY3VzVHJhcCBzbyBpdCBkb2Vzbid0IGFsd2F5cyBleGlzdCBvbiB0aGUgcGFnZVxuICAvLyBoYXZlIHRvIHRlc3QgZm9yIHByZXNlbmNlIG9mIGhlYWRlciBmb3IgYXJpYS1kZXNjcmliZWRieSBiZWNhdXNlIGl0IHdhcyBjYXVzaW5nIHVuaXQgdGVzdHMgdG8gY3Jhc2hcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IFtjbHJGb2N1c1RyYXBdPVwie3N0cmljdDogZmFsc2V9XCIgY2xhc3M9XCJkYXRhZ3JpZC1kZXRhaWwtcGFuZS1jb250ZW50XCIgKm5nSWY9XCJkZXRhaWxTZXJ2aWNlLmlzT3BlblwiIHJvbGU9XCJkaWFsb2dcIlxuICAgICAgICAgW2lkXT1cImRldGFpbFNlcnZpY2UuaWRcIiBhcmlhLW1vZGFsPVwidHJ1ZVwiIFthdHRyLmFyaWEtZGVzY3JpYmVkYnldPVwiaGVhZGVyID8gaGVhZGVyLnRpdGxlSWQgOiAnJ1wiPlxuICAgIDxkaXYgY2xhc3M9XCJjbHItc3Itb25seVwiPnt7Y29tbW9uU3RyaW5ncy5rZXlzLmRldGFpbFBhbmVTdGFydH19PC9kaXY+XG4gICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgICA8ZGl2IGNsYXNzPVwiY2xyLXNyLW9ubHlcIj57e2NvbW1vblN0cmluZ3Mua2V5cy5kZXRhaWxQYW5lRW5kfX08L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICBgLFxufSlcbmV4cG9ydCBjbGFzcyBDbHJEYXRhZ3JpZERldGFpbCB7XG4gIEBDb250ZW50Q2hpbGQoQ2xyRGF0YWdyaWREZXRhaWxIZWFkZXIpIHB1YmxpYyBoZWFkZXI6IENsckRhdGFncmlkRGV0YWlsSGVhZGVyO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBkZXRhaWxTZXJ2aWNlOiBEZXRhaWxTZXJ2aWNlLCBwdWJsaWMgY29tbW9uU3RyaW5nczogQ2xyQ29tbW9uU3RyaW5nc1NlcnZpY2UpIHt9XG5cbiAgQEhvc3RMaXN0ZW5lcignZG9jdW1lbnQ6a2V5dXAuZXNjJylcbiAgY2xvc2VDaGVjaygpOiB2b2lkIHtcbiAgICB0aGlzLmRldGFpbFNlcnZpY2UuY2xvc2UoKTtcbiAgfVxufVxuIl19