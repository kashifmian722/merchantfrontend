import { AfterViewInit, ElementRef, Renderer2 } from '@angular/core';
import { ClrDropdown } from './dropdown';
import { FocusableItem } from '../../utils/focus/focusable-item/focusable-item';
import { RootDropdownService } from './providers/dropdown.service';
import * as ɵngcc0 from '@angular/core';
export declare class ClrDropdownItem implements AfterViewInit {
    private dropdown;
    private el;
    private _dropdownService;
    private renderer;
    private focusableItem;
    constructor(dropdown: ClrDropdown, el: ElementRef<HTMLElement>, _dropdownService: RootDropdownService, renderer: Renderer2, focusableItem: FocusableItem);
    private unlisten;
    setByDeprecatedDisabled: boolean;
    set disabled(value: boolean | string);
    get disabled(): boolean | string;
    set disabledDeprecated(value: boolean | string);
    get disabledDeprecated(): boolean | string;
    /**
     * Let you overwrite the focusable auto increment id.
     */
    set dropdownItemId(value: string);
    get dropdownItemId(): string;
    ngAfterViewInit(): void;
    onDropdownItemClick(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrDropdownItem>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ClrDropdownItem, "[clrDropdownItem]", never, {
    "disabled": "clrDisabled";
    "disabledDeprecated": "disabled";
    "dropdownItemId": "id";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24taXRlbS5kLnRzIiwic291cmNlcyI6WyJkcm9wZG93bi1pdGVtLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBFbGVtZW50UmVmLCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENsckRyb3Bkb3duIH0gZnJvbSAnLi9kcm9wZG93bic7XG5pbXBvcnQgeyBGb2N1c2FibGVJdGVtIH0gZnJvbSAnLi4vLi4vdXRpbHMvZm9jdXMvZm9jdXNhYmxlLWl0ZW0vZm9jdXNhYmxlLWl0ZW0nO1xuaW1wb3J0IHsgUm9vdERyb3Bkb3duU2VydmljZSB9IGZyb20gJy4vcHJvdmlkZXJzL2Ryb3Bkb3duLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2xyRHJvcGRvd25JdGVtIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gICAgcHJpdmF0ZSBkcm9wZG93bjtcbiAgICBwcml2YXRlIGVsO1xuICAgIHByaXZhdGUgX2Ryb3Bkb3duU2VydmljZTtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgZm9jdXNhYmxlSXRlbTtcbiAgICBjb25zdHJ1Y3Rvcihkcm9wZG93bjogQ2xyRHJvcGRvd24sIGVsOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PiwgX2Ryb3Bkb3duU2VydmljZTogUm9vdERyb3Bkb3duU2VydmljZSwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgZm9jdXNhYmxlSXRlbTogRm9jdXNhYmxlSXRlbSk7XG4gICAgcHJpdmF0ZSB1bmxpc3RlbjtcbiAgICBzZXRCeURlcHJlY2F0ZWREaXNhYmxlZDogYm9vbGVhbjtcbiAgICBzZXQgZGlzYWJsZWQodmFsdWU6IGJvb2xlYW4gfCBzdHJpbmcpO1xuICAgIGdldCBkaXNhYmxlZCgpOiBib29sZWFuIHwgc3RyaW5nO1xuICAgIHNldCBkaXNhYmxlZERlcHJlY2F0ZWQodmFsdWU6IGJvb2xlYW4gfCBzdHJpbmcpO1xuICAgIGdldCBkaXNhYmxlZERlcHJlY2F0ZWQoKTogYm9vbGVhbiB8IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBMZXQgeW91IG92ZXJ3cml0ZSB0aGUgZm9jdXNhYmxlIGF1dG8gaW5jcmVtZW50IGlkLlxuICAgICAqL1xuICAgIHNldCBkcm9wZG93bkl0ZW1JZCh2YWx1ZTogc3RyaW5nKTtcbiAgICBnZXQgZHJvcGRvd25JdGVtSWQoKTogc3RyaW5nO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIG9uRHJvcGRvd25JdGVtQ2xpY2soKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19