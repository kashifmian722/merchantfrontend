{"version":3,"file":"tag.element.js","sourceRoot":"","sources":["../../../src/clr-core/tag/tag.element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE,qBAAqB,EAAe,MAAM,kBAAkB,CAAC;AAC3G,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAC;AACnC,OAAO,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAC;AAE3C;;;;;;;;;;;;;;;;;;GAkBG;AACH,WAAW;AACX,MAAM,OAAO,MAAO,SAAQ,aAAa;IAUvC,MAAM,KAAK,MAAM;QACf,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;;;MAIT,IAAI,CAAC,oBAAoB;KAC1B,CAAC;IACJ,CAAC;CACF;AAjBC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;sCACP;AAIpB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;qCACiC;AAe9D,qBAAqB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { baseStyles, CdsBaseButton, property, registerElementSafely, StatusTypes } from '@clr/core/common';\nimport { html } from 'lit-element';\nimport { styles } from './tag.element.css';\n\n/**\n * Tags show concise metadata in a compact format.\n * Tags are visually styled to differentiate them from buttons.\n *\n * ```typescript\n * import '@clr/core/tag';\n * ```\n *\n * ```html\n * <cds-tag status=\"info\">Info</cds-tag>\n * ```\n *\n * @element cds-tag\n * @slot default - Content slot for inside the tag\n * @cssprop --background\n * @cssprop --background-hover\n * @cssprop --border-color\n * @cssprop --border-radius\n */\n// @dynamic\nexport class CdsTag extends CdsBaseButton {\n  /** Sets the color of the tag (and badge if present) from the following predefined list of statuses:\n   *  'info', 'success', 'warning', 'danger'\n   */\n  @property({ type: String })\n  status: StatusTypes;\n\n  /** Sets the color of the tag (and badge if present) from a predefined list of choices */\n  @property({ type: String })\n  color: 'gray' | 'purple' | 'blue' | 'orange' | 'light-blue';\n  static get styles() {\n    return [baseStyles, styles];\n  }\n\n  render() {\n    return html`\n    <div class=\"private-host\">\n      <slot></slot>\n    </div>\n    ${this.hiddenButtonTemplate}\n    `;\n  }\n}\n\nregisterElementSafely('cds-tag', CdsTag);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'cds-tag': CdsTag;\n  }\n}\n"]}