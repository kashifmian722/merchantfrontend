/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 * /*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.

 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "./stepper.module";
import * as i2 from "@angular/common";
import * as i3 from "../../icon/icon.module";
import * as i4 from "../accordion.module";
var ClrStepperModuleNgFactory = i0.ɵcmf(i1.ClrStepperModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID]), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i3.ClrIconModule, i3.ClrIconModule, []), i0.ɵmpd(1073742336, i4.ClrAccordionModule, i4.ClrAccordionModule, []), i0.ɵmpd(1073742336, i1.ClrStepperModule, i1.ClrStepperModule, [])]); });
export { ClrStepperModuleNgFactory as ClrStepperModuleNgFactory };
//# sourceMappingURL=data:application/json;base64,