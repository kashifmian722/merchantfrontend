/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { __decorate, __metadata } from "tslib";
import { baseStyles, CdsBaseButton, property, registerElementSafely } from '@clr/core/common';
import { html } from 'lit-element';
import { styles } from './tag.element.css';
/**
 * Tags show concise metadata in a compact format.
 * Tags are visually styled to differentiate them from buttons.
 *
 * ```typescript
 * import '@clr/core/tag';
 * ```
 *
 * ```html
 * <cds-tag status="info">Info</cds-tag>
 * ```
 *
 * @element cds-tag
 * @slot default - Content slot for inside the tag
 * @cssprop --background
 * @cssprop --background-hover
 * @cssprop --border-color
 * @cssprop --border-radius
 */
// @dynamic
export class CdsTag extends CdsBaseButton {
    static get styles() {
        return [baseStyles, styles];
    }
    render() {
        return html `
    <div class="private-host">
      <slot></slot>
    </div>
    ${this.hiddenButtonTemplate}
    `;
    }
}
__decorate([
    property({ type: String }),
    __metadata("design:type", String)
], CdsTag.prototype, "status", void 0);
__decorate([
    property({ type: String }),
    __metadata("design:type", String)
], CdsTag.prototype, "color", void 0);
registerElementSafely('cds-tag', CdsTag);
//# sourceMappingURL=tag.element.js.map