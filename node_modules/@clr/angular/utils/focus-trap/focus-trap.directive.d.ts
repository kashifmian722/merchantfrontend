import { AfterViewInit, ElementRef, Injector, OnDestroy, Renderer2 } from '@angular/core';
import { FocusTrapTracker } from './focus-trap-tracker.service';
import * as ɵngcc0 from '@angular/core';
interface FocusTrapConfig {
    strict: boolean;
}
export declare class FocusTrapDirective implements AfterViewInit, OnDestroy {
    private el;
    private injector;
    private focusTrapsTracker;
    private renderer;
    private platformId;
    private previousActiveElement;
    private previousTrappedActiveElement;
    private localFocusEscaped;
    private document;
    private parentElement;
    private topReboundEl;
    private bottomReboundEl;
    constructor(el: ElementRef, injector: Injector, focusTrapsTracker: FocusTrapTracker, renderer: Renderer2, platformId: Object);
    private _config;
    set config(config: FocusTrapConfig);
    onFocusIn(event: any): void;
    private createFocusableOffScreenEl;
    private addReboundEls;
    private removeReboundEls;
    setPreviousFocus(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FocusTrapDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FocusTrapDirective, "[clrFocusTrap]", never, {
    "config": "clrFocusTrap";
}, {}, never>;
}
export {};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9jdXMtdHJhcC5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiZm9jdXMtdHJhcC5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIEVsZW1lbnRSZWYsIEluamVjdG9yLCBPbkRlc3Ryb3ksIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9jdXNUcmFwVHJhY2tlciB9IGZyb20gJy4vZm9jdXMtdHJhcC10cmFja2VyLnNlcnZpY2UnO1xuaW50ZXJmYWNlIEZvY3VzVHJhcENvbmZpZyB7XG4gICAgc3RyaWN0OiBib29sZWFuO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRm9jdXNUcmFwRGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIGVsO1xuICAgIHByaXZhdGUgaW5qZWN0b3I7XG4gICAgcHJpdmF0ZSBmb2N1c1RyYXBzVHJhY2tlcjtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgcGxhdGZvcm1JZDtcbiAgICBwcml2YXRlIHByZXZpb3VzQWN0aXZlRWxlbWVudDtcbiAgICBwcml2YXRlIHByZXZpb3VzVHJhcHBlZEFjdGl2ZUVsZW1lbnQ7XG4gICAgcHJpdmF0ZSBsb2NhbEZvY3VzRXNjYXBlZDtcbiAgICBwcml2YXRlIGRvY3VtZW50O1xuICAgIHByaXZhdGUgcGFyZW50RWxlbWVudDtcbiAgICBwcml2YXRlIHRvcFJlYm91bmRFbDtcbiAgICBwcml2YXRlIGJvdHRvbVJlYm91bmRFbDtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgaW5qZWN0b3I6IEluamVjdG9yLCBmb2N1c1RyYXBzVHJhY2tlcjogRm9jdXNUcmFwVHJhY2tlciwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgcGxhdGZvcm1JZDogT2JqZWN0KTtcbiAgICBwcml2YXRlIF9jb25maWc7XG4gICAgc2V0IGNvbmZpZyhjb25maWc6IEZvY3VzVHJhcENvbmZpZyk7XG4gICAgb25Gb2N1c0luKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHByaXZhdGUgY3JlYXRlRm9jdXNhYmxlT2ZmU2NyZWVuRWw7XG4gICAgcHJpdmF0ZSBhZGRSZWJvdW5kRWxzO1xuICAgIHByaXZhdGUgcmVtb3ZlUmVib3VuZEVscztcbiAgICBzZXRQcmV2aW91c0ZvY3VzKCk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCB7fTtcbiJdfQ==