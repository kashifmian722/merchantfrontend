import { Observable } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class ClrPopoverToggleService {
    /**
     *  Popovers might need to ignore click events on an element
     *  (eg: popover opens on focus on an input field. Clicks should be ignored in this case)
     */
    private _open;
    private _openChange;
    private _openEvent;
    private _openEventChange;
    get openChange(): Observable<boolean>;
    set openEvent(event: Event);
    get openEvent(): Event;
    getEventChange(): Observable<Event>;
    set open(value: boolean);
    get open(): boolean;
    get originalEvent(): Event;
    /**
     * Sometimes, we need to remember the event that triggered the toggling to avoid loops.
     * This is for instance the case of components that open on a click, but close on a click outside.
     */
    toggleWithEvent(event: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ClrPopoverToggleService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<ClrPopoverToggleService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci10b2dnbGUuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJwb3BvdmVyLXRvZ2dsZS5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENsclBvcG92ZXJUb2dnbGVTZXJ2aWNlIHtcbiAgICAvKipcbiAgICAgKiAgUG9wb3ZlcnMgbWlnaHQgbmVlZCB0byBpZ25vcmUgY2xpY2sgZXZlbnRzIG9uIGFuIGVsZW1lbnRcbiAgICAgKiAgKGVnOiBwb3BvdmVyIG9wZW5zIG9uIGZvY3VzIG9uIGFuIGlucHV0IGZpZWxkLiBDbGlja3Mgc2hvdWxkIGJlIGlnbm9yZWQgaW4gdGhpcyBjYXNlKVxuICAgICAqL1xuICAgIHByaXZhdGUgX29wZW47XG4gICAgcHJpdmF0ZSBfb3BlbkNoYW5nZTtcbiAgICBwcml2YXRlIF9vcGVuRXZlbnQ7XG4gICAgcHJpdmF0ZSBfb3BlbkV2ZW50Q2hhbmdlO1xuICAgIGdldCBvcGVuQ2hhbmdlKCk6IE9ic2VydmFibGU8Ym9vbGVhbj47XG4gICAgc2V0IG9wZW5FdmVudChldmVudDogRXZlbnQpO1xuICAgIGdldCBvcGVuRXZlbnQoKTogRXZlbnQ7XG4gICAgZ2V0RXZlbnRDaGFuZ2UoKTogT2JzZXJ2YWJsZTxFdmVudD47XG4gICAgc2V0IG9wZW4odmFsdWU6IGJvb2xlYW4pO1xuICAgIGdldCBvcGVuKCk6IGJvb2xlYW47XG4gICAgZ2V0IG9yaWdpbmFsRXZlbnQoKTogRXZlbnQ7XG4gICAgLyoqXG4gICAgICogU29tZXRpbWVzLCB3ZSBuZWVkIHRvIHJlbWVtYmVyIHRoZSBldmVudCB0aGF0IHRyaWdnZXJlZCB0aGUgdG9nZ2xpbmcgdG8gYXZvaWQgbG9vcHMuXG4gICAgICogVGhpcyBpcyBmb3IgaW5zdGFuY2UgdGhlIGNhc2Ugb2YgY29tcG9uZW50cyB0aGF0IG9wZW4gb24gYSBjbGljaywgYnV0IGNsb3NlIG9uIGEgY2xpY2sgb3V0c2lkZS5cbiAgICAgKi9cbiAgICB0b2dnbGVXaXRoRXZlbnQoZXZlbnQ6IGFueSk6IHZvaWQ7XG59XG4iXX0=